name: Publish Snapshot

on:
    schedule:
        - cron: 00 10 * * *
    workflow_dispatch:

permissions:
    contents: read

jobs:
    check-last-run:
        runs-on: ubuntu-latest
        permissions:
            actions: read
        steps:
            - uses: octokit/request-action@v2.x
              id: check-last-run
              with:
                  route: |
                      GET /repos/${{github.repository}}/actions/workflows/snapshot.yml/runs?per_page=1&status=completed
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        outputs:
            last_sha: |
                ${{ fromJson(steps.check-last-run.outputs.data).workflow_runs[0].head_sha }}

    publish-maven-snapshot:
        needs: [check-last-run]
        if: ${{ needs.check-last-run.outputs.last_sha != github.sha }}
        runs-on: ubuntu-latest
        environment:
            name: maven-central
            url: https://central.sonatype.com/namespace/dev.sargunv.mobility-data
        steps:
            - uses: actions/checkout@v5
              with:
                  fetch-depth: 0
                  fetch-tags: true
            - uses: actions/setup-java@v5
              with:
                  distribution: temurin
                  java-version: 21
            - run: |
                  ./gradlew publishAndReleaseToMavenCentral -Psemver.stage=snapshot -Psemver.scope=minor
              env:
                  ORG_GRADLE_PROJECT_mavenCentralUsername:
                      ${{ secrets.MAVEN_CENTRAL_USERNAME }}
                  ORG_GRADLE_PROJECT_mavenCentralPassword:
                      ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
                  ORG_GRADLE_PROJECT_signingInMemoryKey:
                      ${{ secrets.GPG_PRIVATE_KEY }}
                  ORG_GRADLE_PROJECT_signingInMemoryKeyPassword:
                      ${{ secrets.GPG_PASSPHRASE }}

    dryrun-pages:
        needs: [check-last-run]
        if: ${{ needs.check-last-run.outputs.last_sha != github.sha }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v5
              with:
                  fetch-depth: 0
                  fetch-tags: true
            - uses: actions/setup-java@v5
              with:
                  distribution: temurin
                  java-version: 21
            - run: |
                  ./gradlew :mkdocsBuild -Psemver.stage=snapshot -Psemver.scope=minor
            - uses: actions/upload-pages-artifact@v4
              with:
                  path: build/mkdocs

    dryrun-tag:
        needs: [check-last-run, publish-maven-snapshot, dryrun-pages]
        if: ${{ needs.check-last-run.outputs.last_sha != github.sha }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v5
              with:
                  fetch-depth: 0
                  fetch-tags: true
            - uses: actions/setup-java@v5
              with:
                  distribution: temurin
                  java-version: 21
            - run: |
                  ./gradlew :createSemverTag -Psemver.stage=snapshot -Psemver.scope=minor
