// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, wasmWasi, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Alias: native => [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <dev.sargunv.mobility-data:gbfs-v2>
final enum class dev.sargunv.mobilitydata.gbfs.v2/AlertType : kotlin/Enum<dev.sargunv.mobilitydata.gbfs.v2/AlertType> { // dev.sargunv.mobilitydata.gbfs.v2/AlertType|null[0]
    enum entry Other // dev.sargunv.mobilitydata.gbfs.v2/AlertType.Other|null[0]
    enum entry StationClosure // dev.sargunv.mobilitydata.gbfs.v2/AlertType.StationClosure|null[0]
    enum entry StationMove // dev.sargunv.mobilitydata.gbfs.v2/AlertType.StationMove|null[0]
    enum entry SystemClosure // dev.sargunv.mobilitydata.gbfs.v2/AlertType.SystemClosure|null[0]

    final val entries // dev.sargunv.mobilitydata.gbfs.v2/AlertType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<dev.sargunv.mobilitydata.gbfs.v2/AlertType> // dev.sargunv.mobilitydata.gbfs.v2/AlertType.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): dev.sargunv.mobilitydata.gbfs.v2/AlertType // dev.sargunv.mobilitydata.gbfs.v2/AlertType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<dev.sargunv.mobilitydata.gbfs.v2/AlertType> // dev.sargunv.mobilitydata.gbfs.v2/AlertType.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // dev.sargunv.mobilitydata.gbfs.v2/AlertType.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/AlertType> // dev.sargunv.mobilitydata.gbfs.v2/AlertType.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // dev.sargunv.mobilitydata.gbfs.v2/AlertType.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class dev.sargunv.mobilitydata.gbfs.v2/ParkingType : kotlin/Enum<dev.sargunv.mobilitydata.gbfs.v2/ParkingType> { // dev.sargunv.mobilitydata.gbfs.v2/ParkingType|null[0]
    enum entry Other // dev.sargunv.mobilitydata.gbfs.v2/ParkingType.Other|null[0]
    enum entry ParkingLot // dev.sargunv.mobilitydata.gbfs.v2/ParkingType.ParkingLot|null[0]
    enum entry SidewalkParking // dev.sargunv.mobilitydata.gbfs.v2/ParkingType.SidewalkParking|null[0]
    enum entry StreetParking // dev.sargunv.mobilitydata.gbfs.v2/ParkingType.StreetParking|null[0]
    enum entry UndergroundParking // dev.sargunv.mobilitydata.gbfs.v2/ParkingType.UndergroundParking|null[0]

    final val entries // dev.sargunv.mobilitydata.gbfs.v2/ParkingType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<dev.sargunv.mobilitydata.gbfs.v2/ParkingType> // dev.sargunv.mobilitydata.gbfs.v2/ParkingType.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): dev.sargunv.mobilitydata.gbfs.v2/ParkingType // dev.sargunv.mobilitydata.gbfs.v2/ParkingType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<dev.sargunv.mobilitydata.gbfs.v2/ParkingType> // dev.sargunv.mobilitydata.gbfs.v2/ParkingType.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // dev.sargunv.mobilitydata.gbfs.v2/ParkingType.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/ParkingType> // dev.sargunv.mobilitydata.gbfs.v2/ParkingType.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // dev.sargunv.mobilitydata.gbfs.v2/ParkingType.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class dev.sargunv.mobilitydata.gbfs.v2/RentalMethod : kotlin/Enum<dev.sargunv.mobilitydata.gbfs.v2/RentalMethod> { // dev.sargunv.mobilitydata.gbfs.v2/RentalMethod|null[0]
    enum entry AccountNumber // dev.sargunv.mobilitydata.gbfs.v2/RentalMethod.AccountNumber|null[0]
    enum entry AndroidPay // dev.sargunv.mobilitydata.gbfs.v2/RentalMethod.AndroidPay|null[0]
    enum entry ApplePay // dev.sargunv.mobilitydata.gbfs.v2/RentalMethod.ApplePay|null[0]
    enum entry CreditCard // dev.sargunv.mobilitydata.gbfs.v2/RentalMethod.CreditCard|null[0]
    enum entry Key // dev.sargunv.mobilitydata.gbfs.v2/RentalMethod.Key|null[0]
    enum entry PayPass // dev.sargunv.mobilitydata.gbfs.v2/RentalMethod.PayPass|null[0]
    enum entry Phone // dev.sargunv.mobilitydata.gbfs.v2/RentalMethod.Phone|null[0]
    enum entry TransitCard // dev.sargunv.mobilitydata.gbfs.v2/RentalMethod.TransitCard|null[0]

    final val entries // dev.sargunv.mobilitydata.gbfs.v2/RentalMethod.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<dev.sargunv.mobilitydata.gbfs.v2/RentalMethod> // dev.sargunv.mobilitydata.gbfs.v2/RentalMethod.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): dev.sargunv.mobilitydata.gbfs.v2/RentalMethod // dev.sargunv.mobilitydata.gbfs.v2/RentalMethod.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<dev.sargunv.mobilitydata.gbfs.v2/RentalMethod> // dev.sargunv.mobilitydata.gbfs.v2/RentalMethod.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // dev.sargunv.mobilitydata.gbfs.v2/RentalMethod.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/RentalMethod> // dev.sargunv.mobilitydata.gbfs.v2/RentalMethod.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // dev.sargunv.mobilitydata.gbfs.v2/RentalMethod.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class dev.sargunv.mobilitydata.gbfs.v2/UserType : kotlin/Enum<dev.sargunv.mobilitydata.gbfs.v2/UserType> { // dev.sargunv.mobilitydata.gbfs.v2/UserType|null[0]
    enum entry Member // dev.sargunv.mobilitydata.gbfs.v2/UserType.Member|null[0]
    enum entry NonMember // dev.sargunv.mobilitydata.gbfs.v2/UserType.NonMember|null[0]

    final val entries // dev.sargunv.mobilitydata.gbfs.v2/UserType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<dev.sargunv.mobilitydata.gbfs.v2/UserType> // dev.sargunv.mobilitydata.gbfs.v2/UserType.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): dev.sargunv.mobilitydata.gbfs.v2/UserType // dev.sargunv.mobilitydata.gbfs.v2/UserType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<dev.sargunv.mobilitydata.gbfs.v2/UserType> // dev.sargunv.mobilitydata.gbfs.v2/UserType.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // dev.sargunv.mobilitydata.gbfs.v2/UserType.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/UserType> // dev.sargunv.mobilitydata.gbfs.v2/UserType.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // dev.sargunv.mobilitydata.gbfs.v2/UserType.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory : kotlin/Enum<dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory> { // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory|null[0]
    enum entry AirConditioning // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.AirConditioning|null[0]
    enum entry Automatic // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.Automatic|null[0]
    enum entry Convertible // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.Convertible|null[0]
    enum entry CruiseControl // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.CruiseControl|null[0]
    enum entry Doors2 // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.Doors2|null[0]
    enum entry Doors3 // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.Doors3|null[0]
    enum entry Doors4 // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.Doors4|null[0]
    enum entry Doors5 // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.Doors5|null[0]
    enum entry Manual // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.Manual|null[0]
    enum entry Navigation // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.Navigation|null[0]

    final val entries // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory> // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory> // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory> // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment : kotlin/Enum<dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment> { // dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment|null[0]
    enum entry ChildSeatA // dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment.ChildSeatA|null[0]
    enum entry ChildSeatB // dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment.ChildSeatB|null[0]
    enum entry ChildSeatC // dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment.ChildSeatC|null[0]
    enum entry SnowChains // dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment.SnowChains|null[0]
    enum entry WinterTires // dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment.WinterTires|null[0]

    final val entries // dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment> // dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment // dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment> // dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment> // dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor : kotlin/Enum<dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor> { // dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor|null[0]
    enum entry Bicycle // dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor.Bicycle|null[0]
    enum entry Car // dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor.Car|null[0]
    enum entry CargoBicycle // dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor.CargoBicycle|null[0]
    enum entry Moped // dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor.Moped|null[0]
    enum entry Other // dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor.Other|null[0]
    enum entry Scooter // dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor.Scooter|null[0]
    enum entry ScooterSeated // dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor.ScooterSeated|null[0]
    enum entry ScooterStanding // dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor.ScooterStanding|null[0]

    final val entries // dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor> // dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor // dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor> // dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor> // dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType : kotlin/Enum<dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType> { // dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType|null[0]
    enum entry Combustion // dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType.Combustion|null[0]
    enum entry CombustionDiesel // dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType.CombustionDiesel|null[0]
    enum entry Electric // dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType.Electric|null[0]
    enum entry ElectricAssist // dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType.ElectricAssist|null[0]
    enum entry Human // dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType.Human|null[0]
    enum entry Hybrid // dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType.Hybrid|null[0]
    enum entry HydrogenFuelCell // dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType.HydrogenFuelCell|null[0]
    enum entry PlugInHybrid // dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType.PlugInHybrid|null[0]

    final val entries // dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType> // dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType // dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType> // dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType> // dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint : kotlin/Enum<dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint> { // dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint|null[0]
    enum entry AnyStation // dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint.AnyStation|null[0]
    enum entry FreeFloating // dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint.FreeFloating|null[0]
    enum entry Hybrid // dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint.Hybrid|null[0]
    enum entry RoundtripStation // dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint.RoundtripStation|null[0]

    final val entries // dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint> // dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint // dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint> // dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint> // dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

sealed interface dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedData // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedData|null[0]

final class <#A: dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedData> dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse { // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse|null[0]
    constructor <init>(kotlin.time/Instant, kotlin.time/Duration, kotlin/String, #A) // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.<init>|<init>(kotlin.time.Instant;kotlin.time.Duration;kotlin.String;1:0){}[0]

    final val data // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.data|{}data[0]
        final fun <get-data>(): #A // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.data.<get-data>|<get-data>(){}[0]
    final val lastUpdated // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.lastUpdated|{}lastUpdated[0]
        final fun <get-lastUpdated>(): kotlin.time/Instant // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.lastUpdated.<get-lastUpdated>|<get-lastUpdated>(){}[0]
    final val ttl // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.ttl|{}ttl[0]
        final fun <get-ttl>(): kotlin.time/Duration // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.ttl.<get-ttl>|<get-ttl>(){}[0]
    final val version // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.version|{}version[0]
        final fun <get-version>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.version.<get-version>|<get-version>(){}[0]

    final fun component1(): kotlin.time/Instant // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.component1|component1(){}[0]
    final fun component2(): kotlin.time/Duration // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.component2|component2(){}[0]
    final fun component3(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.component3|component3(){}[0]
    final fun component4(): #A // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.component4|component4(){}[0]
    final fun copy(kotlin.time/Instant = ..., kotlin.time/Duration = ..., kotlin/String = ..., #A = ...): dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<#A> // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.copy|copy(kotlin.time.Instant;kotlin.time.Duration;kotlin.String;1:0){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.toString|toString(){}[0]

    final class <#A1: kotlin/Any?> $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<#A1>> { // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.$serializer|null[0]
        constructor <init>(kotlinx.serialization/KSerializer<#A1>) // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.$serializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>){}[0]

        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        final val typeSerial0 // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.$serializer.typeSerial0|{}typeSerial0[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<#A1> // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<#A1>) // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.GbfsFeedResponse<1:0>){}[0]
        final fun typeParametersSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.$serializer.typeParametersSerializers|typeParametersSerializers(){}[0]
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.Companion|null[0]
        final val $cachedDescriptor // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.Companion.$cachedDescriptor|{}$cachedDescriptor[0]
            final fun <get-$cachedDescriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.Companion.$cachedDescriptor.<get-$cachedDescriptor>|<get-$cachedDescriptor>(){}[0]

        final fun <#A2: kotlin/Any?> serializer(kotlinx.serialization/KSerializer<#A2>): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<#A2>> // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.Companion.serializer|serializer(kotlinx.serialization.KSerializer<0:0>){0§<kotlin.Any?>}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/Alert { // dev.sargunv.mobilitydata.gbfs.v2/Alert|null[0]
    constructor <init>(kotlin/String, dev.sargunv.mobilitydata.gbfs.v2/AlertType, kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/AlertTime>? = ..., kotlin.collections/List<kotlin/String>? = ..., kotlin.collections/List<kotlin/String>? = ..., kotlin/String? = ..., kotlin/String, kotlin/String? = ..., kotlin.time/Instant? = ...) // dev.sargunv.mobilitydata.gbfs.v2/Alert.<init>|<init>(kotlin.String;dev.sargunv.mobilitydata.gbfs.v2.AlertType;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.AlertTime>?;kotlin.collections.List<kotlin.String>?;kotlin.collections.List<kotlin.String>?;kotlin.String?;kotlin.String;kotlin.String?;kotlin.time.Instant?){}[0]

    final val alertId // dev.sargunv.mobilitydata.gbfs.v2/Alert.alertId|{}alertId[0]
        final fun <get-alertId>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Alert.alertId.<get-alertId>|<get-alertId>(){}[0]
    final val description // dev.sargunv.mobilitydata.gbfs.v2/Alert.description|{}description[0]
        final fun <get-description>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Alert.description.<get-description>|<get-description>(){}[0]
    final val lastUpdated // dev.sargunv.mobilitydata.gbfs.v2/Alert.lastUpdated|{}lastUpdated[0]
        final fun <get-lastUpdated>(): kotlin.time/Instant? // dev.sargunv.mobilitydata.gbfs.v2/Alert.lastUpdated.<get-lastUpdated>|<get-lastUpdated>(){}[0]
    final val regionIds // dev.sargunv.mobilitydata.gbfs.v2/Alert.regionIds|{}regionIds[0]
        final fun <get-regionIds>(): kotlin.collections/List<kotlin/String>? // dev.sargunv.mobilitydata.gbfs.v2/Alert.regionIds.<get-regionIds>|<get-regionIds>(){}[0]
    final val stationIds // dev.sargunv.mobilitydata.gbfs.v2/Alert.stationIds|{}stationIds[0]
        final fun <get-stationIds>(): kotlin.collections/List<kotlin/String>? // dev.sargunv.mobilitydata.gbfs.v2/Alert.stationIds.<get-stationIds>|<get-stationIds>(){}[0]
    final val summary // dev.sargunv.mobilitydata.gbfs.v2/Alert.summary|{}summary[0]
        final fun <get-summary>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Alert.summary.<get-summary>|<get-summary>(){}[0]
    final val times // dev.sargunv.mobilitydata.gbfs.v2/Alert.times|{}times[0]
        final fun <get-times>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/AlertTime>? // dev.sargunv.mobilitydata.gbfs.v2/Alert.times.<get-times>|<get-times>(){}[0]
    final val type // dev.sargunv.mobilitydata.gbfs.v2/Alert.type|{}type[0]
        final fun <get-type>(): dev.sargunv.mobilitydata.gbfs.v2/AlertType // dev.sargunv.mobilitydata.gbfs.v2/Alert.type.<get-type>|<get-type>(){}[0]
    final val url // dev.sargunv.mobilitydata.gbfs.v2/Alert.url|{}url[0]
        final fun <get-url>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Alert.url.<get-url>|<get-url>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Alert.component1|component1(){}[0]
    final fun component2(): dev.sargunv.mobilitydata.gbfs.v2/AlertType // dev.sargunv.mobilitydata.gbfs.v2/Alert.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/AlertTime>? // dev.sargunv.mobilitydata.gbfs.v2/Alert.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<kotlin/String>? // dev.sargunv.mobilitydata.gbfs.v2/Alert.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<kotlin/String>? // dev.sargunv.mobilitydata.gbfs.v2/Alert.component5|component5(){}[0]
    final fun component6(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Alert.component6|component6(){}[0]
    final fun component7(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Alert.component7|component7(){}[0]
    final fun component8(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Alert.component8|component8(){}[0]
    final fun component9(): kotlin.time/Instant? // dev.sargunv.mobilitydata.gbfs.v2/Alert.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., dev.sargunv.mobilitydata.gbfs.v2/AlertType = ..., kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/AlertTime>? = ..., kotlin.collections/List<kotlin/String>? = ..., kotlin.collections/List<kotlin/String>? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin/String? = ..., kotlin.time/Instant? = ...): dev.sargunv.mobilitydata.gbfs.v2/Alert // dev.sargunv.mobilitydata.gbfs.v2/Alert.copy|copy(kotlin.String;dev.sargunv.mobilitydata.gbfs.v2.AlertType;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.AlertTime>?;kotlin.collections.List<kotlin.String>?;kotlin.collections.List<kotlin.String>?;kotlin.String?;kotlin.String;kotlin.String?;kotlin.time.Instant?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/Alert.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/Alert.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Alert.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/Alert> { // dev.sargunv.mobilitydata.gbfs.v2/Alert.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/Alert.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/Alert.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/Alert.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/Alert // dev.sargunv.mobilitydata.gbfs.v2/Alert.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/Alert) // dev.sargunv.mobilitydata.gbfs.v2/Alert.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.Alert){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/Alert.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/Alert.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/Alert> // dev.sargunv.mobilitydata.gbfs.v2/Alert.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/AlertTime { // dev.sargunv.mobilitydata.gbfs.v2/AlertTime|null[0]
    constructor <init>(kotlin.time/Instant, kotlin.time/Instant? = ...) // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.<init>|<init>(kotlin.time.Instant;kotlin.time.Instant?){}[0]

    final val end // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.end|{}end[0]
        final fun <get-end>(): kotlin.time/Instant? // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.end.<get-end>|<get-end>(){}[0]
    final val start // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.start|{}start[0]
        final fun <get-start>(): kotlin.time/Instant // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.start.<get-start>|<get-start>(){}[0]

    final fun component1(): kotlin.time/Instant // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.component1|component1(){}[0]
    final fun component2(): kotlin.time/Instant? // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.component2|component2(){}[0]
    final fun copy(kotlin.time/Instant = ..., kotlin.time/Instant? = ...): dev.sargunv.mobilitydata.gbfs.v2/AlertTime // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.copy|copy(kotlin.time.Instant;kotlin.time.Instant?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/AlertTime> { // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/AlertTime // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/AlertTime) // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.AlertTime){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/AlertTime> // dev.sargunv.mobilitydata.gbfs.v2/AlertTime.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/Bike { // dev.sargunv.mobilitydata.gbfs.v2/Bike|null[0]
    constructor <init>(kotlin/String, kotlin/Double? = ..., kotlin/Double? = ..., kotlin/Boolean, kotlin/Boolean, dev.sargunv.mobilitydata.gbfs.v2/RentalUris? = ..., kotlin/String? = ..., kotlin.time/Instant? = ..., kotlin/Double? = ..., kotlin/Double? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment>? = ..., dev.sargunv.mobilitydata.utils/Timestamp? = ...) // dev.sargunv.mobilitydata.gbfs.v2/Bike.<init>|<init>(kotlin.String;kotlin.Double?;kotlin.Double?;kotlin.Boolean;kotlin.Boolean;dev.sargunv.mobilitydata.gbfs.v2.RentalUris?;kotlin.String?;kotlin.time.Instant?;kotlin.Double?;kotlin.Double?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.VehicleEquipment>?;dev.sargunv.mobilitydata.utils.Timestamp?){}[0]

    final val availableUntil // dev.sargunv.mobilitydata.gbfs.v2/Bike.availableUntil|{}availableUntil[0]
        final fun <get-availableUntil>(): dev.sargunv.mobilitydata.utils/Timestamp? // dev.sargunv.mobilitydata.gbfs.v2/Bike.availableUntil.<get-availableUntil>|<get-availableUntil>(){}[0]
    final val bikeId // dev.sargunv.mobilitydata.gbfs.v2/Bike.bikeId|{}bikeId[0]
        final fun <get-bikeId>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Bike.bikeId.<get-bikeId>|<get-bikeId>(){}[0]
    final val currentFuelPercent // dev.sargunv.mobilitydata.gbfs.v2/Bike.currentFuelPercent|{}currentFuelPercent[0]
        final fun <get-currentFuelPercent>(): kotlin/Double? // dev.sargunv.mobilitydata.gbfs.v2/Bike.currentFuelPercent.<get-currentFuelPercent>|<get-currentFuelPercent>(){}[0]
    final val currentRangeMeters // dev.sargunv.mobilitydata.gbfs.v2/Bike.currentRangeMeters|{}currentRangeMeters[0]
        final fun <get-currentRangeMeters>(): kotlin/Double? // dev.sargunv.mobilitydata.gbfs.v2/Bike.currentRangeMeters.<get-currentRangeMeters>|<get-currentRangeMeters>(){}[0]
    final val homeStationId // dev.sargunv.mobilitydata.gbfs.v2/Bike.homeStationId|{}homeStationId[0]
        final fun <get-homeStationId>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Bike.homeStationId.<get-homeStationId>|<get-homeStationId>(){}[0]
    final val isDisabled // dev.sargunv.mobilitydata.gbfs.v2/Bike.isDisabled|{}isDisabled[0]
        final fun <get-isDisabled>(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/Bike.isDisabled.<get-isDisabled>|<get-isDisabled>(){}[0]
    final val isReserved // dev.sargunv.mobilitydata.gbfs.v2/Bike.isReserved|{}isReserved[0]
        final fun <get-isReserved>(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/Bike.isReserved.<get-isReserved>|<get-isReserved>(){}[0]
    final val lastReported // dev.sargunv.mobilitydata.gbfs.v2/Bike.lastReported|{}lastReported[0]
        final fun <get-lastReported>(): kotlin.time/Instant? // dev.sargunv.mobilitydata.gbfs.v2/Bike.lastReported.<get-lastReported>|<get-lastReported>(){}[0]
    final val lat // dev.sargunv.mobilitydata.gbfs.v2/Bike.lat|{}lat[0]
        final fun <get-lat>(): kotlin/Double? // dev.sargunv.mobilitydata.gbfs.v2/Bike.lat.<get-lat>|<get-lat>(){}[0]
    final val lon // dev.sargunv.mobilitydata.gbfs.v2/Bike.lon|{}lon[0]
        final fun <get-lon>(): kotlin/Double? // dev.sargunv.mobilitydata.gbfs.v2/Bike.lon.<get-lon>|<get-lon>(){}[0]
    final val pricingPlanId // dev.sargunv.mobilitydata.gbfs.v2/Bike.pricingPlanId|{}pricingPlanId[0]
        final fun <get-pricingPlanId>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Bike.pricingPlanId.<get-pricingPlanId>|<get-pricingPlanId>(){}[0]
    final val rentalUris // dev.sargunv.mobilitydata.gbfs.v2/Bike.rentalUris|{}rentalUris[0]
        final fun <get-rentalUris>(): dev.sargunv.mobilitydata.gbfs.v2/RentalUris? // dev.sargunv.mobilitydata.gbfs.v2/Bike.rentalUris.<get-rentalUris>|<get-rentalUris>(){}[0]
    final val stationId // dev.sargunv.mobilitydata.gbfs.v2/Bike.stationId|{}stationId[0]
        final fun <get-stationId>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Bike.stationId.<get-stationId>|<get-stationId>(){}[0]
    final val vehicleEquipment // dev.sargunv.mobilitydata.gbfs.v2/Bike.vehicleEquipment|{}vehicleEquipment[0]
        final fun <get-vehicleEquipment>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment>? // dev.sargunv.mobilitydata.gbfs.v2/Bike.vehicleEquipment.<get-vehicleEquipment>|<get-vehicleEquipment>(){}[0]
    final val vehicleTypeId // dev.sargunv.mobilitydata.gbfs.v2/Bike.vehicleTypeId|{}vehicleTypeId[0]
        final fun <get-vehicleTypeId>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Bike.vehicleTypeId.<get-vehicleTypeId>|<get-vehicleTypeId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Bike.component1|component1(){}[0]
    final fun component10(): kotlin/Double? // dev.sargunv.mobilitydata.gbfs.v2/Bike.component10|component10(){}[0]
    final fun component11(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Bike.component11|component11(){}[0]
    final fun component12(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Bike.component12|component12(){}[0]
    final fun component13(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Bike.component13|component13(){}[0]
    final fun component14(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment>? // dev.sargunv.mobilitydata.gbfs.v2/Bike.component14|component14(){}[0]
    final fun component15(): dev.sargunv.mobilitydata.utils/Timestamp? // dev.sargunv.mobilitydata.gbfs.v2/Bike.component15|component15(){}[0]
    final fun component2(): kotlin/Double? // dev.sargunv.mobilitydata.gbfs.v2/Bike.component2|component2(){}[0]
    final fun component3(): kotlin/Double? // dev.sargunv.mobilitydata.gbfs.v2/Bike.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/Bike.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/Bike.component5|component5(){}[0]
    final fun component6(): dev.sargunv.mobilitydata.gbfs.v2/RentalUris? // dev.sargunv.mobilitydata.gbfs.v2/Bike.component6|component6(){}[0]
    final fun component7(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Bike.component7|component7(){}[0]
    final fun component8(): kotlin.time/Instant? // dev.sargunv.mobilitydata.gbfs.v2/Bike.component8|component8(){}[0]
    final fun component9(): kotlin/Double? // dev.sargunv.mobilitydata.gbfs.v2/Bike.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Double? = ..., kotlin/Double? = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., dev.sargunv.mobilitydata.gbfs.v2/RentalUris? = ..., kotlin/String? = ..., kotlin.time/Instant? = ..., kotlin/Double? = ..., kotlin/Double? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleEquipment>? = ..., dev.sargunv.mobilitydata.utils/Timestamp? = ...): dev.sargunv.mobilitydata.gbfs.v2/Bike // dev.sargunv.mobilitydata.gbfs.v2/Bike.copy|copy(kotlin.String;kotlin.Double?;kotlin.Double?;kotlin.Boolean;kotlin.Boolean;dev.sargunv.mobilitydata.gbfs.v2.RentalUris?;kotlin.String?;kotlin.time.Instant?;kotlin.Double?;kotlin.Double?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.VehicleEquipment>?;dev.sargunv.mobilitydata.utils.Timestamp?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/Bike.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/Bike.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Bike.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/Bike> { // dev.sargunv.mobilitydata.gbfs.v2/Bike.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/Bike.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/Bike.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/Bike.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/Bike // dev.sargunv.mobilitydata.gbfs.v2/Bike.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/Bike) // dev.sargunv.mobilitydata.gbfs.v2/Bike.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.Bike){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/Bike.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/Bike.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/Bike> // dev.sargunv.mobilitydata.gbfs.v2/Bike.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/BrandAssets { // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets|null[0]
    constructor <init>(kotlinx.datetime/LocalDate, kotlin/String? = ..., kotlin/String, kotlin/String? = ..., kotlin/String? = ...) // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.<init>|<init>(kotlinx.datetime.LocalDate;kotlin.String?;kotlin.String;kotlin.String?;kotlin.String?){}[0]

    final val brandImageUrl // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.brandImageUrl|{}brandImageUrl[0]
        final fun <get-brandImageUrl>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.brandImageUrl.<get-brandImageUrl>|<get-brandImageUrl>(){}[0]
    final val brandImageUrlDark // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.brandImageUrlDark|{}brandImageUrlDark[0]
        final fun <get-brandImageUrlDark>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.brandImageUrlDark.<get-brandImageUrlDark>|<get-brandImageUrlDark>(){}[0]
    final val brandLastModified // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.brandLastModified|{}brandLastModified[0]
        final fun <get-brandLastModified>(): kotlinx.datetime/LocalDate // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.brandLastModified.<get-brandLastModified>|<get-brandLastModified>(){}[0]
    final val brandTermsUrl // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.brandTermsUrl|{}brandTermsUrl[0]
        final fun <get-brandTermsUrl>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.brandTermsUrl.<get-brandTermsUrl>|<get-brandTermsUrl>(){}[0]
    final val color // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.color|{}color[0]
        final fun <get-color>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.color.<get-color>|<get-color>(){}[0]

    final fun component1(): kotlinx.datetime/LocalDate // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.component1|component1(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.component2|component2(){}[0]
    final fun component3(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.component3|component3(){}[0]
    final fun component4(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.component4|component4(){}[0]
    final fun component5(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.component5|component5(){}[0]
    final fun copy(kotlinx.datetime/LocalDate = ..., kotlin/String? = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gbfs.v2/BrandAssets // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.copy|copy(kotlinx.datetime.LocalDate;kotlin.String?;kotlin.String;kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/BrandAssets> { // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/BrandAssets // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/BrandAssets) // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.BrandAssets){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/BrandAssets> // dev.sargunv.mobilitydata.gbfs.v2/BrandAssets.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/EcoLabel { // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel|null[0]
    constructor <init>(kotlin/String, kotlin/String) // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.<init>|<init>(kotlin.String;kotlin.String){}[0]

    final val countryCode // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.countryCode|{}countryCode[0]
        final fun <get-countryCode>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.countryCode.<get-countryCode>|<get-countryCode>(){}[0]
    final val ecoSticker // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.ecoSticker|{}ecoSticker[0]
        final fun <get-ecoSticker>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.ecoSticker.<get-ecoSticker>|<get-ecoSticker>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.component1|component1(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ...): dev.sargunv.mobilitydata.gbfs.v2/EcoLabel // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.copy|copy(kotlin.String;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/EcoLabel> { // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/EcoLabel // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/EcoLabel) // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.EcoLabel){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/EcoLabel> // dev.sargunv.mobilitydata.gbfs.v2/EcoLabel.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus : dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedData, kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Bike> { // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus|null[0]
    constructor <init>(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Bike>) // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.<init>|<init>(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.Bike>){}[0]

    final val bikes // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.bikes|{}bikes[0]
        final fun <get-bikes>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Bike> // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.bikes.<get-bikes>|<get-bikes>(){}[0]
    final val size // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.size|{}size[0]
        final fun <get-size>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.size.<get-size>|<get-size>(){}[0]

    final fun component1(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Bike> // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.component1|component1(){}[0]
    final fun contains(dev.sargunv.mobilitydata.gbfs.v2/Bike): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.contains|contains(dev.sargunv.mobilitydata.gbfs.v2.Bike){}[0]
    final fun containsAll(kotlin.collections/Collection<dev.sargunv.mobilitydata.gbfs.v2/Bike>): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.containsAll|containsAll(kotlin.collections.Collection<dev.sargunv.mobilitydata.gbfs.v2.Bike>){}[0]
    final fun copy(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Bike> = ...): dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.copy|copy(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.Bike>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.equals|equals(kotlin.Any?){}[0]
    final fun get(kotlin/Int): dev.sargunv.mobilitydata.gbfs.v2/Bike // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.get|get(kotlin.Int){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.hashCode|hashCode(){}[0]
    final fun indexOf(dev.sargunv.mobilitydata.gbfs.v2/Bike): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.indexOf|indexOf(dev.sargunv.mobilitydata.gbfs.v2.Bike){}[0]
    final fun isEmpty(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.isEmpty|isEmpty(){}[0]
    final fun iterator(): kotlin.collections/Iterator<dev.sargunv.mobilitydata.gbfs.v2/Bike> // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.iterator|iterator(){}[0]
    final fun lastIndexOf(dev.sargunv.mobilitydata.gbfs.v2/Bike): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.lastIndexOf|lastIndexOf(dev.sargunv.mobilitydata.gbfs.v2.Bike){}[0]
    final fun listIterator(): kotlin.collections/ListIterator<dev.sargunv.mobilitydata.gbfs.v2/Bike> // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.listIterator|listIterator(){}[0]
    final fun listIterator(kotlin/Int): kotlin.collections/ListIterator<dev.sargunv.mobilitydata.gbfs.v2/Bike> // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.listIterator|listIterator(kotlin.Int){}[0]
    final fun subList(kotlin/Int, kotlin/Int): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Bike> // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.subList|subList(kotlin.Int;kotlin.Int){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus> { // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus) // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.FreeBikeStatus){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus> // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.Companion.serializer|serializer(){}[0]
    }

    // Targets: [js]
    final fun asJsReadonlyArrayView(): kotlin.js.collections/JsReadonlyArray<dev.sargunv.mobilitydata.gbfs.v2/Bike> // dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus.asJsReadonlyArrayView|asJsReadonlyArrayView(){}[0]
}

final class dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone { // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone|null[0]
    constructor <init>(kotlin/String? = ..., kotlin.time/Instant? = ..., kotlin.time/Instant? = ..., kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule>? = ...) // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.<init>|<init>(kotlin.String?;kotlin.time.Instant?;kotlin.time.Instant?;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.GeofencingZoneRule>?){}[0]

    final val end // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.end|{}end[0]
        final fun <get-end>(): kotlin.time/Instant? // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.end.<get-end>|<get-end>(){}[0]
    final val name // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.name|{}name[0]
        final fun <get-name>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.name.<get-name>|<get-name>(){}[0]
    final val rules // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.rules|{}rules[0]
        final fun <get-rules>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule>? // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.rules.<get-rules>|<get-rules>(){}[0]
    final val start // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.start|{}start[0]
        final fun <get-start>(): kotlin.time/Instant? // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.start.<get-start>|<get-start>(){}[0]

    final fun component1(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.component1|component1(){}[0]
    final fun component2(): kotlin.time/Instant? // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.component2|component2(){}[0]
    final fun component3(): kotlin.time/Instant? // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule>? // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.component4|component4(){}[0]
    final fun copy(kotlin/String? = ..., kotlin.time/Instant? = ..., kotlin.time/Instant? = ..., kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule>? = ...): dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.copy|copy(kotlin.String?;kotlin.time.Instant?;kotlin.time.Instant?;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.GeofencingZoneRule>?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone> { // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone) // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.GeofencingZone){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone> // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule { // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule|null[0]
    constructor <init>(kotlin.collections/List<kotlin/String>? = ..., kotlin/Boolean, kotlin/Boolean, kotlin/Int? = ..., kotlin/Boolean? = ...) // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.<init>|<init>(kotlin.collections.List<kotlin.String>?;kotlin.Boolean;kotlin.Boolean;kotlin.Int?;kotlin.Boolean?){}[0]

    final val maximumSpeedKph // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.maximumSpeedKph|{}maximumSpeedKph[0]
        final fun <get-maximumSpeedKph>(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.maximumSpeedKph.<get-maximumSpeedKph>|<get-maximumSpeedKph>(){}[0]
    final val rideAllowed // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.rideAllowed|{}rideAllowed[0]
        final fun <get-rideAllowed>(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.rideAllowed.<get-rideAllowed>|<get-rideAllowed>(){}[0]
    final val rideThroughAllowed // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.rideThroughAllowed|{}rideThroughAllowed[0]
        final fun <get-rideThroughAllowed>(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.rideThroughAllowed.<get-rideThroughAllowed>|<get-rideThroughAllowed>(){}[0]
    final val stationParking // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.stationParking|{}stationParking[0]
        final fun <get-stationParking>(): kotlin/Boolean? // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.stationParking.<get-stationParking>|<get-stationParking>(){}[0]
    final val vehicleTypeId // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.vehicleTypeId|{}vehicleTypeId[0]
        final fun <get-vehicleTypeId>(): kotlin.collections/List<kotlin/String>? // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.vehicleTypeId.<get-vehicleTypeId>|<get-vehicleTypeId>(){}[0]

    final fun component1(): kotlin.collections/List<kotlin/String>? // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.component3|component3(){}[0]
    final fun component4(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.component5|component5(){}[0]
    final fun copy(kotlin.collections/List<kotlin/String>? = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Int? = ..., kotlin/Boolean? = ...): dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.copy|copy(kotlin.collections.List<kotlin.String>?;kotlin.Boolean;kotlin.Boolean;kotlin.Int?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule> { // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule) // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.GeofencingZoneRule){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule> // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZoneRule.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones : dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedData { // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones|null[0]
    constructor <init>(org.maplibre.spatialk.geojson/FeatureCollection<org.maplibre.spatialk.geojson/MultiPolygon, dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone>) // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.<init>|<init>(org.maplibre.spatialk.geojson.FeatureCollection<org.maplibre.spatialk.geojson.MultiPolygon,dev.sargunv.mobilitydata.gbfs.v2.GeofencingZone>){}[0]

    final val geofencingZones // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.geofencingZones|{}geofencingZones[0]
        final fun <get-geofencingZones>(): org.maplibre.spatialk.geojson/FeatureCollection<org.maplibre.spatialk.geojson/MultiPolygon, dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone> // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.geofencingZones.<get-geofencingZones>|<get-geofencingZones>(){}[0]

    final fun component1(): org.maplibre.spatialk.geojson/FeatureCollection<org.maplibre.spatialk.geojson/MultiPolygon, dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone> // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.component1|component1(){}[0]
    final fun copy(org.maplibre.spatialk.geojson/FeatureCollection<org.maplibre.spatialk.geojson/MultiPolygon, dev.sargunv.mobilitydata.gbfs.v2/GeofencingZone> = ...): dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.copy|copy(org.maplibre.spatialk.geojson.FeatureCollection<org.maplibre.spatialk.geojson.MultiPolygon,dev.sargunv.mobilitydata.gbfs.v2.GeofencingZone>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones> { // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones) // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.GeofencingZones){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones> // dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/PricingInterval { // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval|null[0]
    constructor <init>(kotlin/Int, kotlin/Double, kotlin/Int, kotlin/Int? = ...) // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.<init>|<init>(kotlin.Int;kotlin.Double;kotlin.Int;kotlin.Int?){}[0]

    final val end // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.end|{}end[0]
        final fun <get-end>(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.end.<get-end>|<get-end>(){}[0]
    final val interval // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.interval|{}interval[0]
        final fun <get-interval>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.interval.<get-interval>|<get-interval>(){}[0]
    final val rate // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.rate|{}rate[0]
        final fun <get-rate>(): kotlin/Double // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.rate.<get-rate>|<get-rate>(){}[0]
    final val start // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.start|{}start[0]
        final fun <get-start>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.start.<get-start>|<get-start>(){}[0]

    final fun component1(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.component1|component1(){}[0]
    final fun component2(): kotlin/Double // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.component2|component2(){}[0]
    final fun component3(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.component3|component3(){}[0]
    final fun component4(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.component4|component4(){}[0]
    final fun copy(kotlin/Int = ..., kotlin/Double = ..., kotlin/Int = ..., kotlin/Int? = ...): dev.sargunv.mobilitydata.gbfs.v2/PricingInterval // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.copy|copy(kotlin.Int;kotlin.Double;kotlin.Int;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/PricingInterval> { // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/PricingInterval // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/PricingInterval) // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.PricingInterval){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/PricingInterval> // dev.sargunv.mobilitydata.gbfs.v2/PricingInterval.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/PricingPlan { // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ..., kotlin/String, kotlin/String, kotlin/Double, kotlin/Boolean, kotlin/String, kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/PricingInterval>? = ..., kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/PricingInterval>? = ..., kotlin/Boolean? = ...) // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.<init>|<init>(kotlin.String;kotlin.String?;kotlin.String;kotlin.String;kotlin.Double;kotlin.Boolean;kotlin.String;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.PricingInterval>?;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.PricingInterval>?;kotlin.Boolean?){}[0]

    final val currency // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.currency|{}currency[0]
        final fun <get-currency>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.currency.<get-currency>|<get-currency>(){}[0]
    final val description // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.description|{}description[0]
        final fun <get-description>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.description.<get-description>|<get-description>(){}[0]
    final val isTaxable // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.isTaxable|{}isTaxable[0]
        final fun <get-isTaxable>(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.isTaxable.<get-isTaxable>|<get-isTaxable>(){}[0]
    final val name // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.name|{}name[0]
        final fun <get-name>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.name.<get-name>|<get-name>(){}[0]
    final val perKmPricing // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.perKmPricing|{}perKmPricing[0]
        final fun <get-perKmPricing>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/PricingInterval>? // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.perKmPricing.<get-perKmPricing>|<get-perKmPricing>(){}[0]
    final val perMinPricing // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.perMinPricing|{}perMinPricing[0]
        final fun <get-perMinPricing>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/PricingInterval>? // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.perMinPricing.<get-perMinPricing>|<get-perMinPricing>(){}[0]
    final val planId // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.planId|{}planId[0]
        final fun <get-planId>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.planId.<get-planId>|<get-planId>(){}[0]
    final val price // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.price|{}price[0]
        final fun <get-price>(): kotlin/Double // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.price.<get-price>|<get-price>(){}[0]
    final val surgePricing // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.surgePricing|{}surgePricing[0]
        final fun <get-surgePricing>(): kotlin/Boolean? // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.surgePricing.<get-surgePricing>|<get-surgePricing>(){}[0]
    final val url // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.url|{}url[0]
        final fun <get-url>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.url.<get-url>|<get-url>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.component1|component1(){}[0]
    final fun component10(): kotlin/Boolean? // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.component10|component10(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.component2|component2(){}[0]
    final fun component3(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.component3|component3(){}[0]
    final fun component4(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.component4|component4(){}[0]
    final fun component5(): kotlin/Double // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.component6|component6(){}[0]
    final fun component7(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.component7|component7(){}[0]
    final fun component8(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/PricingInterval>? // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.component8|component8(){}[0]
    final fun component9(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/PricingInterval>? // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String? = ..., kotlin/String = ..., kotlin/String = ..., kotlin/Double = ..., kotlin/Boolean = ..., kotlin/String = ..., kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/PricingInterval>? = ..., kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/PricingInterval>? = ..., kotlin/Boolean? = ...): dev.sargunv.mobilitydata.gbfs.v2/PricingPlan // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.copy|copy(kotlin.String;kotlin.String?;kotlin.String;kotlin.String;kotlin.Double;kotlin.Boolean;kotlin.String;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.PricingInterval>?;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.PricingInterval>?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/PricingPlan> { // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/PricingPlan // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/PricingPlan) // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.PricingPlan){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/PricingPlan> // dev.sargunv.mobilitydata.gbfs.v2/PricingPlan.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/Region { // dev.sargunv.mobilitydata.gbfs.v2/Region|null[0]
    constructor <init>(kotlin/String, kotlin/String) // dev.sargunv.mobilitydata.gbfs.v2/Region.<init>|<init>(kotlin.String;kotlin.String){}[0]

    final val name // dev.sargunv.mobilitydata.gbfs.v2/Region.name|{}name[0]
        final fun <get-name>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Region.name.<get-name>|<get-name>(){}[0]
    final val regionId // dev.sargunv.mobilitydata.gbfs.v2/Region.regionId|{}regionId[0]
        final fun <get-regionId>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Region.regionId.<get-regionId>|<get-regionId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Region.component1|component1(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Region.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ...): dev.sargunv.mobilitydata.gbfs.v2/Region // dev.sargunv.mobilitydata.gbfs.v2/Region.copy|copy(kotlin.String;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/Region.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/Region.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Region.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/Region> { // dev.sargunv.mobilitydata.gbfs.v2/Region.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/Region.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/Region.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/Region.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/Region // dev.sargunv.mobilitydata.gbfs.v2/Region.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/Region) // dev.sargunv.mobilitydata.gbfs.v2/Region.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.Region){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/Region.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/Region> // dev.sargunv.mobilitydata.gbfs.v2/Region.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris { // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris|null[0]
    constructor <init>(kotlin/String, kotlin/String) // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.<init>|<init>(kotlin.String;kotlin.String){}[0]

    final val discoveryUri // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.discoveryUri|{}discoveryUri[0]
        final fun <get-discoveryUri>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.discoveryUri.<get-discoveryUri>|<get-discoveryUri>(){}[0]
    final val storeUri // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.storeUri|{}storeUri[0]
        final fun <get-storeUri>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.storeUri.<get-storeUri>|<get-storeUri>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.component1|component1(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ...): dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.copy|copy(kotlin.String;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris> { // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris) // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.RentalAppPlatformUris){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris> // dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris { // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris|null[0]
    constructor <init>(dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris? = ..., dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris? = ...) // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.<init>|<init>(dev.sargunv.mobilitydata.gbfs.v2.RentalAppPlatformUris?;dev.sargunv.mobilitydata.gbfs.v2.RentalAppPlatformUris?){}[0]

    final val android // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.android|{}android[0]
        final fun <get-android>(): dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris? // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.android.<get-android>|<get-android>(){}[0]
    final val ios // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.ios|{}ios[0]
        final fun <get-ios>(): dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris? // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.ios.<get-ios>|<get-ios>(){}[0]

    final fun component1(): dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris? // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.component1|component1(){}[0]
    final fun component2(): dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris? // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.component2|component2(){}[0]
    final fun copy(dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris? = ..., dev.sargunv.mobilitydata.gbfs.v2/RentalAppPlatformUris? = ...): dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.copy|copy(dev.sargunv.mobilitydata.gbfs.v2.RentalAppPlatformUris?;dev.sargunv.mobilitydata.gbfs.v2.RentalAppPlatformUris?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris> { // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris) // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.RentalAppUris){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris> // dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/RentalUris { // dev.sargunv.mobilitydata.gbfs.v2/RentalUris|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...) // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.<init>|<init>(kotlin.String?;kotlin.String?;kotlin.String?){}[0]

    final val android // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.android|{}android[0]
        final fun <get-android>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.android.<get-android>|<get-android>(){}[0]
    final val ios // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.ios|{}ios[0]
        final fun <get-ios>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.ios.<get-ios>|<get-ios>(){}[0]
    final val web // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.web|{}web[0]
        final fun <get-web>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.web.<get-web>|<get-web>(){}[0]

    final fun component1(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.component1|component1(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.component2|component2(){}[0]
    final fun component3(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.component3|component3(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gbfs.v2/RentalUris // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.copy|copy(kotlin.String?;kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/RentalUris> { // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/RentalUris // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/RentalUris) // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.RentalUris){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/RentalUris> // dev.sargunv.mobilitydata.gbfs.v2/RentalUris.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/Service : kotlin.collections/Map<dev.sargunv.mobilitydata.gbfs.v2/FeedType, kotlin/String> { // dev.sargunv.mobilitydata.gbfs.v2/Service|null[0]
    constructor <init>(kotlin.collections/Map<dev.sargunv.mobilitydata.gbfs.v2/FeedType, kotlin/String>) // dev.sargunv.mobilitydata.gbfs.v2/Service.<init>|<init>(kotlin.collections.Map<dev.sargunv.mobilitydata.gbfs.v2.FeedType,kotlin.String>){}[0]
    constructor <init>(kotlin/Array<out kotlin/Pair<dev.sargunv.mobilitydata.gbfs.v2/FeedType, kotlin/String>>...) // dev.sargunv.mobilitydata.gbfs.v2/Service.<init>|<init>(kotlin.Array<out|kotlin.Pair<dev.sargunv.mobilitydata.gbfs.v2.FeedType,kotlin.String>>...){}[0]

    final val entries // dev.sargunv.mobilitydata.gbfs.v2/Service.entries|{}entries[0]
        final fun <get-entries>(): kotlin.collections/Set<kotlin.collections/Map.Entry<dev.sargunv.mobilitydata.gbfs.v2/FeedType, kotlin/String>> // dev.sargunv.mobilitydata.gbfs.v2/Service.entries.<get-entries>|<get-entries>(){}[0]
    final val feeds // dev.sargunv.mobilitydata.gbfs.v2/Service.feeds|{}feeds[0]
        final fun <get-feeds>(): kotlin.collections/Map<dev.sargunv.mobilitydata.gbfs.v2/FeedType, kotlin/String> // dev.sargunv.mobilitydata.gbfs.v2/Service.feeds.<get-feeds>|<get-feeds>(){}[0]
    final val keys // dev.sargunv.mobilitydata.gbfs.v2/Service.keys|{}keys[0]
        final fun <get-keys>(): kotlin.collections/Set<dev.sargunv.mobilitydata.gbfs.v2/FeedType> // dev.sargunv.mobilitydata.gbfs.v2/Service.keys.<get-keys>|<get-keys>(){}[0]
    final val size // dev.sargunv.mobilitydata.gbfs.v2/Service.size|{}size[0]
        final fun <get-size>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/Service.size.<get-size>|<get-size>(){}[0]
    final val values // dev.sargunv.mobilitydata.gbfs.v2/Service.values|{}values[0]
        final fun <get-values>(): kotlin.collections/Collection<kotlin/String> // dev.sargunv.mobilitydata.gbfs.v2/Service.values.<get-values>|<get-values>(){}[0]

    final fun component1(): kotlin.collections/Map<dev.sargunv.mobilitydata.gbfs.v2/FeedType, kotlin/String> // dev.sargunv.mobilitydata.gbfs.v2/Service.component1|component1(){}[0]
    final fun containsKey(dev.sargunv.mobilitydata.gbfs.v2/FeedType): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/Service.containsKey|containsKey(dev.sargunv.mobilitydata.gbfs.v2.FeedType){}[0]
    final fun containsValue(kotlin/String): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/Service.containsValue|containsValue(kotlin.String){}[0]
    final fun copy(kotlin.collections/Map<dev.sargunv.mobilitydata.gbfs.v2/FeedType, kotlin/String> = ...): dev.sargunv.mobilitydata.gbfs.v2/Service // dev.sargunv.mobilitydata.gbfs.v2/Service.copy|copy(kotlin.collections.Map<dev.sargunv.mobilitydata.gbfs.v2.FeedType,kotlin.String>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/Service.equals|equals(kotlin.Any?){}[0]
    final fun get(dev.sargunv.mobilitydata.gbfs.v2/FeedType): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Service.get|get(dev.sargunv.mobilitydata.gbfs.v2.FeedType){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/Service.hashCode|hashCode(){}[0]
    final fun isEmpty(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/Service.isEmpty|isEmpty(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Service.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/Service> { // dev.sargunv.mobilitydata.gbfs.v2/Service.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/Service.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/Service.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/Service.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/Service // dev.sargunv.mobilitydata.gbfs.v2/Service.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/Service) // dev.sargunv.mobilitydata.gbfs.v2/Service.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.Service){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/Service.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/Service> // dev.sargunv.mobilitydata.gbfs.v2/Service.Companion.serializer|serializer(){}[0]
    }

    // Targets: [js]
    final fun asJsReadonlyMapView(): kotlin.js.collections/JsReadonlyMap<dev.sargunv.mobilitydata.gbfs.v2/FeedType, kotlin/String> // dev.sargunv.mobilitydata.gbfs.v2/Service.asJsReadonlyMapView|asJsReadonlyMapView(){}[0]
}

final class dev.sargunv.mobilitydata.gbfs.v2/Station { // dev.sargunv.mobilitydata.gbfs.v2/Station|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/Double, kotlin/Double, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/RentalMethod>? = ..., kotlin/Boolean? = ..., org.maplibre.spatialk.geojson/MultiPolygon? = ..., dev.sargunv.mobilitydata.gbfs.v2/ParkingType? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin.collections/Map<kotlin/String, kotlin/Int>? = ..., kotlin.collections/Map<kotlin/String, kotlin/Int>? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., dev.sargunv.mobilitydata.gbfs.v2/RentalUris? = ...) // dev.sargunv.mobilitydata.gbfs.v2/Station.<init>|<init>(kotlin.String;kotlin.String;kotlin.String?;kotlin.Double;kotlin.Double;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.RentalMethod>?;kotlin.Boolean?;org.maplibre.spatialk.geojson.MultiPolygon?;dev.sargunv.mobilitydata.gbfs.v2.ParkingType?;kotlin.Boolean?;kotlin.String?;kotlin.Int?;kotlin.collections.Map<kotlin.String,kotlin.Int>?;kotlin.collections.Map<kotlin.String,kotlin.Int>?;kotlin.Boolean?;kotlin.Boolean?;dev.sargunv.mobilitydata.gbfs.v2.RentalUris?){}[0]

    final val address // dev.sargunv.mobilitydata.gbfs.v2/Station.address|{}address[0]
        final fun <get-address>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Station.address.<get-address>|<get-address>(){}[0]
    final val capacity // dev.sargunv.mobilitydata.gbfs.v2/Station.capacity|{}capacity[0]
        final fun <get-capacity>(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/Station.capacity.<get-capacity>|<get-capacity>(){}[0]
    final val contactPhone // dev.sargunv.mobilitydata.gbfs.v2/Station.contactPhone|{}contactPhone[0]
        final fun <get-contactPhone>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Station.contactPhone.<get-contactPhone>|<get-contactPhone>(){}[0]
    final val crossStreet // dev.sargunv.mobilitydata.gbfs.v2/Station.crossStreet|{}crossStreet[0]
        final fun <get-crossStreet>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Station.crossStreet.<get-crossStreet>|<get-crossStreet>(){}[0]
    final val isChargingStation // dev.sargunv.mobilitydata.gbfs.v2/Station.isChargingStation|{}isChargingStation[0]
        final fun <get-isChargingStation>(): kotlin/Boolean? // dev.sargunv.mobilitydata.gbfs.v2/Station.isChargingStation.<get-isChargingStation>|<get-isChargingStation>(){}[0]
    final val isValetStation // dev.sargunv.mobilitydata.gbfs.v2/Station.isValetStation|{}isValetStation[0]
        final fun <get-isValetStation>(): kotlin/Boolean? // dev.sargunv.mobilitydata.gbfs.v2/Station.isValetStation.<get-isValetStation>|<get-isValetStation>(){}[0]
    final val isVirtualStation // dev.sargunv.mobilitydata.gbfs.v2/Station.isVirtualStation|{}isVirtualStation[0]
        final fun <get-isVirtualStation>(): kotlin/Boolean? // dev.sargunv.mobilitydata.gbfs.v2/Station.isVirtualStation.<get-isVirtualStation>|<get-isVirtualStation>(){}[0]
    final val lat // dev.sargunv.mobilitydata.gbfs.v2/Station.lat|{}lat[0]
        final fun <get-lat>(): kotlin/Double // dev.sargunv.mobilitydata.gbfs.v2/Station.lat.<get-lat>|<get-lat>(){}[0]
    final val lon // dev.sargunv.mobilitydata.gbfs.v2/Station.lon|{}lon[0]
        final fun <get-lon>(): kotlin/Double // dev.sargunv.mobilitydata.gbfs.v2/Station.lon.<get-lon>|<get-lon>(){}[0]
    final val name // dev.sargunv.mobilitydata.gbfs.v2/Station.name|{}name[0]
        final fun <get-name>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Station.name.<get-name>|<get-name>(){}[0]
    final val parkingHoop // dev.sargunv.mobilitydata.gbfs.v2/Station.parkingHoop|{}parkingHoop[0]
        final fun <get-parkingHoop>(): kotlin/Boolean? // dev.sargunv.mobilitydata.gbfs.v2/Station.parkingHoop.<get-parkingHoop>|<get-parkingHoop>(){}[0]
    final val parkingType // dev.sargunv.mobilitydata.gbfs.v2/Station.parkingType|{}parkingType[0]
        final fun <get-parkingType>(): dev.sargunv.mobilitydata.gbfs.v2/ParkingType? // dev.sargunv.mobilitydata.gbfs.v2/Station.parkingType.<get-parkingType>|<get-parkingType>(){}[0]
    final val postalCode // dev.sargunv.mobilitydata.gbfs.v2/Station.postalCode|{}postalCode[0]
        final fun <get-postalCode>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Station.postalCode.<get-postalCode>|<get-postalCode>(){}[0]
    final val regionId // dev.sargunv.mobilitydata.gbfs.v2/Station.regionId|{}regionId[0]
        final fun <get-regionId>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Station.regionId.<get-regionId>|<get-regionId>(){}[0]
    final val rentalMethods // dev.sargunv.mobilitydata.gbfs.v2/Station.rentalMethods|{}rentalMethods[0]
        final fun <get-rentalMethods>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/RentalMethod>? // dev.sargunv.mobilitydata.gbfs.v2/Station.rentalMethods.<get-rentalMethods>|<get-rentalMethods>(){}[0]
    final val rentalUris // dev.sargunv.mobilitydata.gbfs.v2/Station.rentalUris|{}rentalUris[0]
        final fun <get-rentalUris>(): dev.sargunv.mobilitydata.gbfs.v2/RentalUris? // dev.sargunv.mobilitydata.gbfs.v2/Station.rentalUris.<get-rentalUris>|<get-rentalUris>(){}[0]
    final val shortName // dev.sargunv.mobilitydata.gbfs.v2/Station.shortName|{}shortName[0]
        final fun <get-shortName>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Station.shortName.<get-shortName>|<get-shortName>(){}[0]
    final val stationArea // dev.sargunv.mobilitydata.gbfs.v2/Station.stationArea|{}stationArea[0]
        final fun <get-stationArea>(): org.maplibre.spatialk.geojson/MultiPolygon? // dev.sargunv.mobilitydata.gbfs.v2/Station.stationArea.<get-stationArea>|<get-stationArea>(){}[0]
    final val stationId // dev.sargunv.mobilitydata.gbfs.v2/Station.stationId|{}stationId[0]
        final fun <get-stationId>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Station.stationId.<get-stationId>|<get-stationId>(){}[0]
    final val vehicleCapacity // dev.sargunv.mobilitydata.gbfs.v2/Station.vehicleCapacity|{}vehicleCapacity[0]
        final fun <get-vehicleCapacity>(): kotlin.collections/Map<kotlin/String, kotlin/Int>? // dev.sargunv.mobilitydata.gbfs.v2/Station.vehicleCapacity.<get-vehicleCapacity>|<get-vehicleCapacity>(){}[0]
    final val vehicleTypeCapacity // dev.sargunv.mobilitydata.gbfs.v2/Station.vehicleTypeCapacity|{}vehicleTypeCapacity[0]
        final fun <get-vehicleTypeCapacity>(): kotlin.collections/Map<kotlin/String, kotlin/Int>? // dev.sargunv.mobilitydata.gbfs.v2/Station.vehicleTypeCapacity.<get-vehicleTypeCapacity>|<get-vehicleTypeCapacity>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Station.component1|component1(){}[0]
    final fun component10(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/RentalMethod>? // dev.sargunv.mobilitydata.gbfs.v2/Station.component10|component10(){}[0]
    final fun component11(): kotlin/Boolean? // dev.sargunv.mobilitydata.gbfs.v2/Station.component11|component11(){}[0]
    final fun component12(): org.maplibre.spatialk.geojson/MultiPolygon? // dev.sargunv.mobilitydata.gbfs.v2/Station.component12|component12(){}[0]
    final fun component13(): dev.sargunv.mobilitydata.gbfs.v2/ParkingType? // dev.sargunv.mobilitydata.gbfs.v2/Station.component13|component13(){}[0]
    final fun component14(): kotlin/Boolean? // dev.sargunv.mobilitydata.gbfs.v2/Station.component14|component14(){}[0]
    final fun component15(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Station.component15|component15(){}[0]
    final fun component16(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/Station.component16|component16(){}[0]
    final fun component17(): kotlin.collections/Map<kotlin/String, kotlin/Int>? // dev.sargunv.mobilitydata.gbfs.v2/Station.component17|component17(){}[0]
    final fun component18(): kotlin.collections/Map<kotlin/String, kotlin/Int>? // dev.sargunv.mobilitydata.gbfs.v2/Station.component18|component18(){}[0]
    final fun component19(): kotlin/Boolean? // dev.sargunv.mobilitydata.gbfs.v2/Station.component19|component19(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Station.component2|component2(){}[0]
    final fun component20(): kotlin/Boolean? // dev.sargunv.mobilitydata.gbfs.v2/Station.component20|component20(){}[0]
    final fun component21(): dev.sargunv.mobilitydata.gbfs.v2/RentalUris? // dev.sargunv.mobilitydata.gbfs.v2/Station.component21|component21(){}[0]
    final fun component3(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Station.component3|component3(){}[0]
    final fun component4(): kotlin/Double // dev.sargunv.mobilitydata.gbfs.v2/Station.component4|component4(){}[0]
    final fun component5(): kotlin/Double // dev.sargunv.mobilitydata.gbfs.v2/Station.component5|component5(){}[0]
    final fun component6(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Station.component6|component6(){}[0]
    final fun component7(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Station.component7|component7(){}[0]
    final fun component8(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Station.component8|component8(){}[0]
    final fun component9(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/Station.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/Double = ..., kotlin/Double = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/RentalMethod>? = ..., kotlin/Boolean? = ..., org.maplibre.spatialk.geojson/MultiPolygon? = ..., dev.sargunv.mobilitydata.gbfs.v2/ParkingType? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin.collections/Map<kotlin/String, kotlin/Int>? = ..., kotlin.collections/Map<kotlin/String, kotlin/Int>? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., dev.sargunv.mobilitydata.gbfs.v2/RentalUris? = ...): dev.sargunv.mobilitydata.gbfs.v2/Station // dev.sargunv.mobilitydata.gbfs.v2/Station.copy|copy(kotlin.String;kotlin.String;kotlin.String?;kotlin.Double;kotlin.Double;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.RentalMethod>?;kotlin.Boolean?;org.maplibre.spatialk.geojson.MultiPolygon?;dev.sargunv.mobilitydata.gbfs.v2.ParkingType?;kotlin.Boolean?;kotlin.String?;kotlin.Int?;kotlin.collections.Map<kotlin.String,kotlin.Int>?;kotlin.collections.Map<kotlin.String,kotlin.Int>?;kotlin.Boolean?;kotlin.Boolean?;dev.sargunv.mobilitydata.gbfs.v2.RentalUris?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/Station.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/Station.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/Station.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/Station> { // dev.sargunv.mobilitydata.gbfs.v2/Station.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/Station.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/Station.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/Station.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/Station // dev.sargunv.mobilitydata.gbfs.v2/Station.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/Station) // dev.sargunv.mobilitydata.gbfs.v2/Station.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.Station){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/Station.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/Station.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/Station> // dev.sargunv.mobilitydata.gbfs.v2/Station.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/StationInformation : dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedData, kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Station> { // dev.sargunv.mobilitydata.gbfs.v2/StationInformation|null[0]
    constructor <init>(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Station>) // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.<init>|<init>(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.Station>){}[0]

    final val size // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.size|{}size[0]
        final fun <get-size>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.size.<get-size>|<get-size>(){}[0]
    final val stations // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.stations|{}stations[0]
        final fun <get-stations>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Station> // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.stations.<get-stations>|<get-stations>(){}[0]

    final fun component1(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Station> // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.component1|component1(){}[0]
    final fun contains(dev.sargunv.mobilitydata.gbfs.v2/Station): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.contains|contains(dev.sargunv.mobilitydata.gbfs.v2.Station){}[0]
    final fun containsAll(kotlin.collections/Collection<dev.sargunv.mobilitydata.gbfs.v2/Station>): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.containsAll|containsAll(kotlin.collections.Collection<dev.sargunv.mobilitydata.gbfs.v2.Station>){}[0]
    final fun copy(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Station> = ...): dev.sargunv.mobilitydata.gbfs.v2/StationInformation // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.copy|copy(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.Station>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.equals|equals(kotlin.Any?){}[0]
    final fun get(kotlin/Int): dev.sargunv.mobilitydata.gbfs.v2/Station // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.get|get(kotlin.Int){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.hashCode|hashCode(){}[0]
    final fun indexOf(dev.sargunv.mobilitydata.gbfs.v2/Station): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.indexOf|indexOf(dev.sargunv.mobilitydata.gbfs.v2.Station){}[0]
    final fun isEmpty(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.isEmpty|isEmpty(){}[0]
    final fun iterator(): kotlin.collections/Iterator<dev.sargunv.mobilitydata.gbfs.v2/Station> // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.iterator|iterator(){}[0]
    final fun lastIndexOf(dev.sargunv.mobilitydata.gbfs.v2/Station): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.lastIndexOf|lastIndexOf(dev.sargunv.mobilitydata.gbfs.v2.Station){}[0]
    final fun listIterator(): kotlin.collections/ListIterator<dev.sargunv.mobilitydata.gbfs.v2/Station> // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.listIterator|listIterator(){}[0]
    final fun listIterator(kotlin/Int): kotlin.collections/ListIterator<dev.sargunv.mobilitydata.gbfs.v2/Station> // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.listIterator|listIterator(kotlin.Int){}[0]
    final fun subList(kotlin/Int, kotlin/Int): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Station> // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.subList|subList(kotlin.Int;kotlin.Int){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/StationInformation> { // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/StationInformation // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/StationInformation) // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.StationInformation){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/StationInformation> // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.Companion.serializer|serializer(){}[0]
    }

    // Targets: [js]
    final fun asJsReadonlyArrayView(): kotlin.js.collections/JsReadonlyArray<dev.sargunv.mobilitydata.gbfs.v2/Station> // dev.sargunv.mobilitydata.gbfs.v2/StationInformation.asJsReadonlyArrayView|asJsReadonlyArrayView(){}[0]
}

final class dev.sargunv.mobilitydata.gbfs.v2/StationStatus : dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedData, kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry> { // dev.sargunv.mobilitydata.gbfs.v2/StationStatus|null[0]
    constructor <init>(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry>) // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.<init>|<init>(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.StationStatusEntry>){}[0]

    final val size // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.size|{}size[0]
        final fun <get-size>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.size.<get-size>|<get-size>(){}[0]
    final val stations // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.stations|{}stations[0]
        final fun <get-stations>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry> // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.stations.<get-stations>|<get-stations>(){}[0]

    final fun component1(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry> // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.component1|component1(){}[0]
    final fun contains(dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.contains|contains(dev.sargunv.mobilitydata.gbfs.v2.StationStatusEntry){}[0]
    final fun containsAll(kotlin.collections/Collection<dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry>): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.containsAll|containsAll(kotlin.collections.Collection<dev.sargunv.mobilitydata.gbfs.v2.StationStatusEntry>){}[0]
    final fun copy(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry> = ...): dev.sargunv.mobilitydata.gbfs.v2/StationStatus // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.copy|copy(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.StationStatusEntry>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.equals|equals(kotlin.Any?){}[0]
    final fun get(kotlin/Int): dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.get|get(kotlin.Int){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.hashCode|hashCode(){}[0]
    final fun indexOf(dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.indexOf|indexOf(dev.sargunv.mobilitydata.gbfs.v2.StationStatusEntry){}[0]
    final fun isEmpty(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.isEmpty|isEmpty(){}[0]
    final fun iterator(): kotlin.collections/Iterator<dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry> // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.iterator|iterator(){}[0]
    final fun lastIndexOf(dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.lastIndexOf|lastIndexOf(dev.sargunv.mobilitydata.gbfs.v2.StationStatusEntry){}[0]
    final fun listIterator(): kotlin.collections/ListIterator<dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry> // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.listIterator|listIterator(){}[0]
    final fun listIterator(kotlin/Int): kotlin.collections/ListIterator<dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry> // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.listIterator|listIterator(kotlin.Int){}[0]
    final fun subList(kotlin/Int, kotlin/Int): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry> // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.subList|subList(kotlin.Int;kotlin.Int){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/StationStatus> { // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/StationStatus // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/StationStatus) // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.StationStatus){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/StationStatus> // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.Companion.serializer|serializer(){}[0]
    }

    // Targets: [js]
    final fun asJsReadonlyArrayView(): kotlin.js.collections/JsReadonlyArray<dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry> // dev.sargunv.mobilitydata.gbfs.v2/StationStatus.asJsReadonlyArrayView|asJsReadonlyArrayView(){}[0]
}

final class dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry { // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry|null[0]
    constructor <init>(kotlin/String, kotlin/Int, kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability>? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability>? = ..., kotlin/Int? = ..., kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin.time/Instant) // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.<init>|<init>(kotlin.String;kotlin.Int;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.VehicleTypeAvailability>?;kotlin.Int?;kotlin.Int?;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.VehicleDockAvailability>?;kotlin.Int?;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.time.Instant){}[0]

    final val isInstalled // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.isInstalled|{}isInstalled[0]
        final fun <get-isInstalled>(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.isInstalled.<get-isInstalled>|<get-isInstalled>(){}[0]
    final val isRenting // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.isRenting|{}isRenting[0]
        final fun <get-isRenting>(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.isRenting.<get-isRenting>|<get-isRenting>(){}[0]
    final val isReturning // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.isReturning|{}isReturning[0]
        final fun <get-isReturning>(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.isReturning.<get-isReturning>|<get-isReturning>(){}[0]
    final val lastReported // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.lastReported|{}lastReported[0]
        final fun <get-lastReported>(): kotlin.time/Instant // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.lastReported.<get-lastReported>|<get-lastReported>(){}[0]
    final val numBikesAvailable // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.numBikesAvailable|{}numBikesAvailable[0]
        final fun <get-numBikesAvailable>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.numBikesAvailable.<get-numBikesAvailable>|<get-numBikesAvailable>(){}[0]
    final val numBikesDisabled // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.numBikesDisabled|{}numBikesDisabled[0]
        final fun <get-numBikesDisabled>(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.numBikesDisabled.<get-numBikesDisabled>|<get-numBikesDisabled>(){}[0]
    final val numDocksAvailable // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.numDocksAvailable|{}numDocksAvailable[0]
        final fun <get-numDocksAvailable>(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.numDocksAvailable.<get-numDocksAvailable>|<get-numDocksAvailable>(){}[0]
    final val numDocksDisabled // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.numDocksDisabled|{}numDocksDisabled[0]
        final fun <get-numDocksDisabled>(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.numDocksDisabled.<get-numDocksDisabled>|<get-numDocksDisabled>(){}[0]
    final val stationId // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.stationId|{}stationId[0]
        final fun <get-stationId>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.stationId.<get-stationId>|<get-stationId>(){}[0]
    final val vehicleDocksAvailable // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.vehicleDocksAvailable|{}vehicleDocksAvailable[0]
        final fun <get-vehicleDocksAvailable>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability>? // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.vehicleDocksAvailable.<get-vehicleDocksAvailable>|<get-vehicleDocksAvailable>(){}[0]
    final val vehicleTypesAvailable // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.vehicleTypesAvailable|{}vehicleTypesAvailable[0]
        final fun <get-vehicleTypesAvailable>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability>? // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.vehicleTypesAvailable.<get-vehicleTypesAvailable>|<get-vehicleTypesAvailable>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.component1|component1(){}[0]
    final fun component10(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.component10|component10(){}[0]
    final fun component11(): kotlin.time/Instant // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.component11|component11(){}[0]
    final fun component2(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability>? // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.component3|component3(){}[0]
    final fun component4(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.component4|component4(){}[0]
    final fun component5(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.component5|component5(){}[0]
    final fun component6(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability>? // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.component6|component6(){}[0]
    final fun component7(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.component8|component8(){}[0]
    final fun component9(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Int = ..., kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability>? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability>? = ..., kotlin/Int? = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin.time/Instant = ...): dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.copy|copy(kotlin.String;kotlin.Int;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.VehicleTypeAvailability>?;kotlin.Int?;kotlin.Int?;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.VehicleDockAvailability>?;kotlin.Int?;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.time.Instant){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry> { // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry) // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.StationStatusEntry){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry> // dev.sargunv.mobilitydata.gbfs.v2/StationStatusEntry.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts : dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedData, kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Alert> { // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts|null[0]
    constructor <init>(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Alert>) // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.<init>|<init>(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.Alert>){}[0]

    final val alerts // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.alerts|{}alerts[0]
        final fun <get-alerts>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Alert> // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.alerts.<get-alerts>|<get-alerts>(){}[0]
    final val size // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.size|{}size[0]
        final fun <get-size>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.size.<get-size>|<get-size>(){}[0]

    final fun component1(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Alert> // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.component1|component1(){}[0]
    final fun contains(dev.sargunv.mobilitydata.gbfs.v2/Alert): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.contains|contains(dev.sargunv.mobilitydata.gbfs.v2.Alert){}[0]
    final fun containsAll(kotlin.collections/Collection<dev.sargunv.mobilitydata.gbfs.v2/Alert>): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.containsAll|containsAll(kotlin.collections.Collection<dev.sargunv.mobilitydata.gbfs.v2.Alert>){}[0]
    final fun copy(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Alert> = ...): dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.copy|copy(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.Alert>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.equals|equals(kotlin.Any?){}[0]
    final fun get(kotlin/Int): dev.sargunv.mobilitydata.gbfs.v2/Alert // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.get|get(kotlin.Int){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.hashCode|hashCode(){}[0]
    final fun indexOf(dev.sargunv.mobilitydata.gbfs.v2/Alert): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.indexOf|indexOf(dev.sargunv.mobilitydata.gbfs.v2.Alert){}[0]
    final fun isEmpty(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.isEmpty|isEmpty(){}[0]
    final fun iterator(): kotlin.collections/Iterator<dev.sargunv.mobilitydata.gbfs.v2/Alert> // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.iterator|iterator(){}[0]
    final fun lastIndexOf(dev.sargunv.mobilitydata.gbfs.v2/Alert): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.lastIndexOf|lastIndexOf(dev.sargunv.mobilitydata.gbfs.v2.Alert){}[0]
    final fun listIterator(): kotlin.collections/ListIterator<dev.sargunv.mobilitydata.gbfs.v2/Alert> // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.listIterator|listIterator(){}[0]
    final fun listIterator(kotlin/Int): kotlin.collections/ListIterator<dev.sargunv.mobilitydata.gbfs.v2/Alert> // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.listIterator|listIterator(kotlin.Int){}[0]
    final fun subList(kotlin/Int, kotlin/Int): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Alert> // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.subList|subList(kotlin.Int;kotlin.Int){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts> { // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts) // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.SystemAlerts){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts> // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.Companion.serializer|serializer(){}[0]
    }

    // Targets: [js]
    final fun asJsReadonlyArrayView(): kotlin.js.collections/JsReadonlyArray<dev.sargunv.mobilitydata.gbfs.v2/Alert> // dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts.asJsReadonlyArrayView|asJsReadonlyArrayView(){}[0]
}

final class dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar : dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedData { // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar|null[0]
    constructor <init>(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry>) // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.<init>|<init>(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.SystemCalendarEntry>){}[0]

    final val calendars // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.calendars|{}calendars[0]
        final fun <get-calendars>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry> // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.calendars.<get-calendars>|<get-calendars>(){}[0]

    final fun component1(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry> // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry> = ...): dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.copy|copy(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.SystemCalendarEntry>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar> { // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar) // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.SystemCalendar){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar> // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry { // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry|null[0]
    constructor <init>(kotlin/Int? = ..., kotlinx.datetime/Month, kotlin/Int, kotlin/Int? = ..., kotlinx.datetime/Month, kotlin/Int) // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.<init>|<init>(kotlin.Int?;kotlinx.datetime.Month;kotlin.Int;kotlin.Int?;kotlinx.datetime.Month;kotlin.Int){}[0]

    final val endDay // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.endDay|{}endDay[0]
        final fun <get-endDay>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.endDay.<get-endDay>|<get-endDay>(){}[0]
    final val endMonth // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.endMonth|{}endMonth[0]
        final fun <get-endMonth>(): kotlinx.datetime/Month // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.endMonth.<get-endMonth>|<get-endMonth>(){}[0]
    final val endYear // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.endYear|{}endYear[0]
        final fun <get-endYear>(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.endYear.<get-endYear>|<get-endYear>(){}[0]
    final val startDay // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.startDay|{}startDay[0]
        final fun <get-startDay>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.startDay.<get-startDay>|<get-startDay>(){}[0]
    final val startMonth // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.startMonth|{}startMonth[0]
        final fun <get-startMonth>(): kotlinx.datetime/Month // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.startMonth.<get-startMonth>|<get-startMonth>(){}[0]
    final val startYear // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.startYear|{}startYear[0]
        final fun <get-startYear>(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.startYear.<get-startYear>|<get-startYear>(){}[0]

    final fun component1(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.component1|component1(){}[0]
    final fun component2(): kotlinx.datetime/Month // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.component2|component2(){}[0]
    final fun component3(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.component3|component3(){}[0]
    final fun component4(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.component4|component4(){}[0]
    final fun component5(): kotlinx.datetime/Month // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.component5|component5(){}[0]
    final fun component6(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.component6|component6(){}[0]
    final fun copy(kotlin/Int? = ..., kotlinx.datetime/Month = ..., kotlin/Int = ..., kotlin/Int? = ..., kotlinx.datetime/Month = ..., kotlin/Int = ...): dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.copy|copy(kotlin.Int?;kotlinx.datetime.Month;kotlin.Int;kotlin.Int?;kotlinx.datetime.Month;kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry> { // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry) // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.SystemCalendarEntry){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry> // dev.sargunv.mobilitydata.gbfs.v2/SystemCalendarEntry.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/SystemHours : dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedData, kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry> { // dev.sargunv.mobilitydata.gbfs.v2/SystemHours|null[0]
    constructor <init>(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry>) // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.<init>|<init>(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.SystemHoursEntry>){}[0]

    final val rentalHours // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.rentalHours|{}rentalHours[0]
        final fun <get-rentalHours>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry> // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.rentalHours.<get-rentalHours>|<get-rentalHours>(){}[0]
    final val size // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.size|{}size[0]
        final fun <get-size>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.size.<get-size>|<get-size>(){}[0]

    final fun component1(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry> // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.component1|component1(){}[0]
    final fun contains(dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.contains|contains(dev.sargunv.mobilitydata.gbfs.v2.SystemHoursEntry){}[0]
    final fun containsAll(kotlin.collections/Collection<dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry>): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.containsAll|containsAll(kotlin.collections.Collection<dev.sargunv.mobilitydata.gbfs.v2.SystemHoursEntry>){}[0]
    final fun copy(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry> = ...): dev.sargunv.mobilitydata.gbfs.v2/SystemHours // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.copy|copy(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.SystemHoursEntry>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.equals|equals(kotlin.Any?){}[0]
    final fun get(kotlin/Int): dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.get|get(kotlin.Int){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.hashCode|hashCode(){}[0]
    final fun indexOf(dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.indexOf|indexOf(dev.sargunv.mobilitydata.gbfs.v2.SystemHoursEntry){}[0]
    final fun isEmpty(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.isEmpty|isEmpty(){}[0]
    final fun iterator(): kotlin.collections/Iterator<dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry> // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.iterator|iterator(){}[0]
    final fun lastIndexOf(dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.lastIndexOf|lastIndexOf(dev.sargunv.mobilitydata.gbfs.v2.SystemHoursEntry){}[0]
    final fun listIterator(): kotlin.collections/ListIterator<dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry> // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.listIterator|listIterator(){}[0]
    final fun listIterator(kotlin/Int): kotlin.collections/ListIterator<dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry> // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.listIterator|listIterator(kotlin.Int){}[0]
    final fun subList(kotlin/Int, kotlin/Int): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry> // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.subList|subList(kotlin.Int;kotlin.Int){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemHours> { // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/SystemHours // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/SystemHours) // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.SystemHours){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemHours> // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.Companion.serializer|serializer(){}[0]
    }

    // Targets: [js]
    final fun asJsReadonlyArrayView(): kotlin.js.collections/JsReadonlyArray<dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry> // dev.sargunv.mobilitydata.gbfs.v2/SystemHours.asJsReadonlyArrayView|asJsReadonlyArrayView(){}[0]
}

final class dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry { // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry|null[0]
    constructor <init>(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/UserType>, kotlin.collections/List<kotlinx.datetime/DayOfWeek>, dev.sargunv.mobilitydata.utils/ServiceTime, dev.sargunv.mobilitydata.utils/ServiceTime) // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.<init>|<init>(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.UserType>;kotlin.collections.List<kotlinx.datetime.DayOfWeek>;dev.sargunv.mobilitydata.utils.ServiceTime;dev.sargunv.mobilitydata.utils.ServiceTime){}[0]

    final val days // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.days|{}days[0]
        final fun <get-days>(): kotlin.collections/List<kotlinx.datetime/DayOfWeek> // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.days.<get-days>|<get-days>(){}[0]
    final val endTime // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.endTime|{}endTime[0]
        final fun <get-endTime>(): dev.sargunv.mobilitydata.utils/ServiceTime // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.endTime.<get-endTime>|<get-endTime>(){}[0]
    final val startTime // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.startTime|{}startTime[0]
        final fun <get-startTime>(): dev.sargunv.mobilitydata.utils/ServiceTime // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.startTime.<get-startTime>|<get-startTime>(){}[0]
    final val userTypes // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.userTypes|{}userTypes[0]
        final fun <get-userTypes>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/UserType> // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.userTypes.<get-userTypes>|<get-userTypes>(){}[0]

    final fun component1(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/UserType> // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.component1|component1(){}[0]
    final fun component2(): kotlin.collections/List<kotlinx.datetime/DayOfWeek> // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.component2|component2(){}[0]
    final fun component3(): dev.sargunv.mobilitydata.utils/ServiceTime // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.component3|component3(){}[0]
    final fun component4(): dev.sargunv.mobilitydata.utils/ServiceTime // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.component4|component4(){}[0]
    final fun copy(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/UserType> = ..., kotlin.collections/List<kotlinx.datetime/DayOfWeek> = ..., dev.sargunv.mobilitydata.utils/ServiceTime = ..., dev.sargunv.mobilitydata.utils/ServiceTime = ...): dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.copy|copy(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.UserType>;kotlin.collections.List<kotlinx.datetime.DayOfWeek>;dev.sargunv.mobilitydata.utils.ServiceTime;dev.sargunv.mobilitydata.utils.ServiceTime){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry> { // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry) // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.SystemHoursEntry){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry> // dev.sargunv.mobilitydata.gbfs.v2/SystemHoursEntry.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/SystemInformation : dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedData { // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlinx.datetime/LocalDate? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlinx.datetime/TimeZone, kotlin/String? = ..., dev.sargunv.mobilitydata.gbfs.v2/BrandAssets? = ..., kotlin/String? = ..., kotlinx.datetime/LocalDate? = ..., kotlin/String? = ..., kotlinx.datetime/LocalDate? = ..., dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris? = ...) // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlinx.datetime.LocalDate?;kotlin.String?;kotlin.String?;kotlin.String?;kotlinx.datetime.TimeZone;kotlin.String?;dev.sargunv.mobilitydata.gbfs.v2.BrandAssets?;kotlin.String?;kotlinx.datetime.LocalDate?;kotlin.String?;kotlinx.datetime.LocalDate?;dev.sargunv.mobilitydata.gbfs.v2.RentalAppUris?){}[0]

    final val brandAssets // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.brandAssets|{}brandAssets[0]
        final fun <get-brandAssets>(): dev.sargunv.mobilitydata.gbfs.v2/BrandAssets? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.brandAssets.<get-brandAssets>|<get-brandAssets>(){}[0]
    final val email // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.email|{}email[0]
        final fun <get-email>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.email.<get-email>|<get-email>(){}[0]
    final val feedContactEmail // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.feedContactEmail|{}feedContactEmail[0]
        final fun <get-feedContactEmail>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.feedContactEmail.<get-feedContactEmail>|<get-feedContactEmail>(){}[0]
    final val language // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.language|{}language[0]
        final fun <get-language>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.language.<get-language>|<get-language>(){}[0]
    final val licenseUrl // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.licenseUrl|{}licenseUrl[0]
        final fun <get-licenseUrl>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.licenseUrl.<get-licenseUrl>|<get-licenseUrl>(){}[0]
    final val name // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.name|{}name[0]
        final fun <get-name>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.name.<get-name>|<get-name>(){}[0]
    final val operator // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.operator|{}operator[0]
        final fun <get-operator>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.operator.<get-operator>|<get-operator>(){}[0]
    final val phoneNumber // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.phoneNumber|{}phoneNumber[0]
        final fun <get-phoneNumber>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.phoneNumber.<get-phoneNumber>|<get-phoneNumber>(){}[0]
    final val privacyLastUpdated // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.privacyLastUpdated|{}privacyLastUpdated[0]
        final fun <get-privacyLastUpdated>(): kotlinx.datetime/LocalDate? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.privacyLastUpdated.<get-privacyLastUpdated>|<get-privacyLastUpdated>(){}[0]
    final val privacyUrl // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.privacyUrl|{}privacyUrl[0]
        final fun <get-privacyUrl>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.privacyUrl.<get-privacyUrl>|<get-privacyUrl>(){}[0]
    final val purchaseUrl // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.purchaseUrl|{}purchaseUrl[0]
        final fun <get-purchaseUrl>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.purchaseUrl.<get-purchaseUrl>|<get-purchaseUrl>(){}[0]
    final val rentalApps // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.rentalApps|{}rentalApps[0]
        final fun <get-rentalApps>(): dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.rentalApps.<get-rentalApps>|<get-rentalApps>(){}[0]
    final val shortName // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.shortName|{}shortName[0]
        final fun <get-shortName>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.shortName.<get-shortName>|<get-shortName>(){}[0]
    final val startDate // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.startDate|{}startDate[0]
        final fun <get-startDate>(): kotlinx.datetime/LocalDate? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.startDate.<get-startDate>|<get-startDate>(){}[0]
    final val systemId // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.systemId|{}systemId[0]
        final fun <get-systemId>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.systemId.<get-systemId>|<get-systemId>(){}[0]
    final val termsLastUpdated // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.termsLastUpdated|{}termsLastUpdated[0]
        final fun <get-termsLastUpdated>(): kotlinx.datetime/LocalDate? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.termsLastUpdated.<get-termsLastUpdated>|<get-termsLastUpdated>(){}[0]
    final val termsUrl // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.termsUrl|{}termsUrl[0]
        final fun <get-termsUrl>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.termsUrl.<get-termsUrl>|<get-termsUrl>(){}[0]
    final val timezone // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.timezone|{}timezone[0]
        final fun <get-timezone>(): kotlinx.datetime/TimeZone // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.timezone.<get-timezone>|<get-timezone>(){}[0]
    final val url // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.url|{}url[0]
        final fun <get-url>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.url.<get-url>|<get-url>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component1|component1(){}[0]
    final fun component10(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component10|component10(){}[0]
    final fun component11(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component11|component11(){}[0]
    final fun component12(): kotlinx.datetime/TimeZone // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component12|component12(){}[0]
    final fun component13(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component13|component13(){}[0]
    final fun component14(): dev.sargunv.mobilitydata.gbfs.v2/BrandAssets? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component14|component14(){}[0]
    final fun component15(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component15|component15(){}[0]
    final fun component16(): kotlinx.datetime/LocalDate? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component16|component16(){}[0]
    final fun component17(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component17|component17(){}[0]
    final fun component18(): kotlinx.datetime/LocalDate? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component18|component18(){}[0]
    final fun component19(): dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component19|component19(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component2|component2(){}[0]
    final fun component3(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component3|component3(){}[0]
    final fun component4(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component4|component4(){}[0]
    final fun component5(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component5|component5(){}[0]
    final fun component6(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component6|component6(){}[0]
    final fun component7(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component7|component7(){}[0]
    final fun component8(): kotlinx.datetime/LocalDate? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component8|component8(){}[0]
    final fun component9(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlinx.datetime/LocalDate? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlinx.datetime/TimeZone = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gbfs.v2/BrandAssets? = ..., kotlin/String? = ..., kotlinx.datetime/LocalDate? = ..., kotlin/String? = ..., kotlinx.datetime/LocalDate? = ..., dev.sargunv.mobilitydata.gbfs.v2/RentalAppUris? = ...): dev.sargunv.mobilitydata.gbfs.v2/SystemInformation // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.copy|copy(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlinx.datetime.LocalDate?;kotlin.String?;kotlin.String?;kotlin.String?;kotlinx.datetime.TimeZone;kotlin.String?;dev.sargunv.mobilitydata.gbfs.v2.BrandAssets?;kotlin.String?;kotlinx.datetime.LocalDate?;kotlin.String?;kotlinx.datetime.LocalDate?;dev.sargunv.mobilitydata.gbfs.v2.RentalAppUris?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemInformation> { // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/SystemInformation // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/SystemInformation) // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.SystemInformation){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemInformation> // dev.sargunv.mobilitydata.gbfs.v2/SystemInformation.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans : dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedData, kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/PricingPlan> { // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans|null[0]
    constructor <init>(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/PricingPlan>) // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.<init>|<init>(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.PricingPlan>){}[0]

    final val plans // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.plans|{}plans[0]
        final fun <get-plans>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/PricingPlan> // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.plans.<get-plans>|<get-plans>(){}[0]
    final val size // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.size|{}size[0]
        final fun <get-size>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.size.<get-size>|<get-size>(){}[0]

    final fun component1(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/PricingPlan> // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.component1|component1(){}[0]
    final fun contains(dev.sargunv.mobilitydata.gbfs.v2/PricingPlan): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.contains|contains(dev.sargunv.mobilitydata.gbfs.v2.PricingPlan){}[0]
    final fun containsAll(kotlin.collections/Collection<dev.sargunv.mobilitydata.gbfs.v2/PricingPlan>): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.containsAll|containsAll(kotlin.collections.Collection<dev.sargunv.mobilitydata.gbfs.v2.PricingPlan>){}[0]
    final fun copy(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/PricingPlan> = ...): dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.copy|copy(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.PricingPlan>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.equals|equals(kotlin.Any?){}[0]
    final fun get(kotlin/Int): dev.sargunv.mobilitydata.gbfs.v2/PricingPlan // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.get|get(kotlin.Int){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.hashCode|hashCode(){}[0]
    final fun indexOf(dev.sargunv.mobilitydata.gbfs.v2/PricingPlan): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.indexOf|indexOf(dev.sargunv.mobilitydata.gbfs.v2.PricingPlan){}[0]
    final fun isEmpty(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.isEmpty|isEmpty(){}[0]
    final fun iterator(): kotlin.collections/Iterator<dev.sargunv.mobilitydata.gbfs.v2/PricingPlan> // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.iterator|iterator(){}[0]
    final fun lastIndexOf(dev.sargunv.mobilitydata.gbfs.v2/PricingPlan): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.lastIndexOf|lastIndexOf(dev.sargunv.mobilitydata.gbfs.v2.PricingPlan){}[0]
    final fun listIterator(): kotlin.collections/ListIterator<dev.sargunv.mobilitydata.gbfs.v2/PricingPlan> // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.listIterator|listIterator(){}[0]
    final fun listIterator(kotlin/Int): kotlin.collections/ListIterator<dev.sargunv.mobilitydata.gbfs.v2/PricingPlan> // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.listIterator|listIterator(kotlin.Int){}[0]
    final fun subList(kotlin/Int, kotlin/Int): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/PricingPlan> // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.subList|subList(kotlin.Int;kotlin.Int){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans> { // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans) // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.SystemPricingPlans){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans> // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.Companion.serializer|serializer(){}[0]
    }

    // Targets: [js]
    final fun asJsReadonlyArrayView(): kotlin.js.collections/JsReadonlyArray<dev.sargunv.mobilitydata.gbfs.v2/PricingPlan> // dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans.asJsReadonlyArrayView|asJsReadonlyArrayView(){}[0]
}

final class dev.sargunv.mobilitydata.gbfs.v2/SystemRegions : dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedData { // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions|null[0]
    constructor <init>(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Region>) // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.<init>|<init>(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.Region>){}[0]

    final val regions // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.regions|{}regions[0]
        final fun <get-regions>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Region> // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.regions.<get-regions>|<get-regions>(){}[0]

    final fun component1(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Region> // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/Region> = ...): dev.sargunv.mobilitydata.gbfs.v2/SystemRegions // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.copy|copy(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.Region>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemRegions> { // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/SystemRegions // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/SystemRegions) // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.SystemRegions){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemRegions> // dev.sargunv.mobilitydata.gbfs.v2/SystemRegions.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets { // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ..., kotlinx.datetime/LocalDate) // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.<init>|<init>(kotlin.String;kotlin.String?;kotlinx.datetime.LocalDate){}[0]

    final val iconLastModified // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.iconLastModified|{}iconLastModified[0]
        final fun <get-iconLastModified>(): kotlinx.datetime/LocalDate // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.iconLastModified.<get-iconLastModified>|<get-iconLastModified>(){}[0]
    final val iconUrl // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.iconUrl|{}iconUrl[0]
        final fun <get-iconUrl>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.iconUrl.<get-iconUrl>|<get-iconUrl>(){}[0]
    final val iconUrlDark // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.iconUrlDark|{}iconUrlDark[0]
        final fun <get-iconUrlDark>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.iconUrlDark.<get-iconUrlDark>|<get-iconUrlDark>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.component1|component1(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.component2|component2(){}[0]
    final fun component3(): kotlinx.datetime/LocalDate // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.component3|component3(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String? = ..., kotlinx.datetime/LocalDate = ...): dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.copy|copy(kotlin.String;kotlin.String?;kotlinx.datetime.LocalDate){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets> { // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets) // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.VehicleAssets){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets> // dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability { // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability|null[0]
    constructor <init>(kotlin.collections/List<kotlin/String>, kotlin/Int) // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.<init>|<init>(kotlin.collections.List<kotlin.String>;kotlin.Int){}[0]

    final val count // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.count|{}count[0]
        final fun <get-count>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.count.<get-count>|<get-count>(){}[0]
    final val vehicleTypeIds // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.vehicleTypeIds|{}vehicleTypeIds[0]
        final fun <get-vehicleTypeIds>(): kotlin.collections/List<kotlin/String> // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.vehicleTypeIds.<get-vehicleTypeIds>|<get-vehicleTypeIds>(){}[0]

    final fun component1(): kotlin.collections/List<kotlin/String> // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.component1|component1(){}[0]
    final fun component2(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.component2|component2(){}[0]
    final fun copy(kotlin.collections/List<kotlin/String> = ..., kotlin/Int = ...): dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.copy|copy(kotlin.collections.List<kotlin.String>;kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability> { // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability) // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.VehicleDockAvailability){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability> // dev.sargunv.mobilitydata.gbfs.v2/VehicleDockAvailability.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/VehicleType { // dev.sargunv.mobilitydata.gbfs.v2/VehicleType|null[0]
    constructor <init>(kotlin/String, dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor, kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType, kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/EcoLabel>? = ..., kotlin/Double? = ..., kotlin/String? = ..., kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory>? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin.time/Duration? = ..., dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint? = ..., dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets? = ..., kotlin/String? = ..., kotlin.collections/List<kotlin/String>? = ...) // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.<init>|<init>(kotlin.String;dev.sargunv.mobilitydata.gbfs.v2.VehicleFormFactor;kotlin.Int?;kotlin.Int?;kotlin.Int?;dev.sargunv.mobilitydata.gbfs.v2.VehiclePropulsionType;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.EcoLabel>?;kotlin.Double?;kotlin.String?;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.VehicleAccessory>?;kotlin.Int?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.time.Duration?;dev.sargunv.mobilitydata.gbfs.v2.VehicleReturnConstraint?;dev.sargunv.mobilitydata.gbfs.v2.VehicleAssets?;kotlin.String?;kotlin.collections.List<kotlin.String>?){}[0]

    final val cargoLoadCapacity // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.cargoLoadCapacity|{}cargoLoadCapacity[0]
        final fun <get-cargoLoadCapacity>(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.cargoLoadCapacity.<get-cargoLoadCapacity>|<get-cargoLoadCapacity>(){}[0]
    final val cargoVolumeCapacity // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.cargoVolumeCapacity|{}cargoVolumeCapacity[0]
        final fun <get-cargoVolumeCapacity>(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.cargoVolumeCapacity.<get-cargoVolumeCapacity>|<get-cargoVolumeCapacity>(){}[0]
    final val color // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.color|{}color[0]
        final fun <get-color>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.color.<get-color>|<get-color>(){}[0]
    final val defaultPricingPlanId // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.defaultPricingPlanId|{}defaultPricingPlanId[0]
        final fun <get-defaultPricingPlanId>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.defaultPricingPlanId.<get-defaultPricingPlanId>|<get-defaultPricingPlanId>(){}[0]
    final val defaultReserveTime // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.defaultReserveTime|{}defaultReserveTime[0]
        final fun <get-defaultReserveTime>(): kotlin.time/Duration? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.defaultReserveTime.<get-defaultReserveTime>|<get-defaultReserveTime>(){}[0]
    final val ecoLabel // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.ecoLabel|{}ecoLabel[0]
        final fun <get-ecoLabel>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/EcoLabel>? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.ecoLabel.<get-ecoLabel>|<get-ecoLabel>(){}[0]
    final val formFactor // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.formFactor|{}formFactor[0]
        final fun <get-formFactor>(): dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.formFactor.<get-formFactor>|<get-formFactor>(){}[0]
    final val gCO2km // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.gCO2km|{}gCO2km[0]
        final fun <get-gCO2km>(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.gCO2km.<get-gCO2km>|<get-gCO2km>(){}[0]
    final val make // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.make|{}make[0]
        final fun <get-make>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.make.<get-make>|<get-make>(){}[0]
    final val maxPermittedSpeed // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.maxPermittedSpeed|{}maxPermittedSpeed[0]
        final fun <get-maxPermittedSpeed>(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.maxPermittedSpeed.<get-maxPermittedSpeed>|<get-maxPermittedSpeed>(){}[0]
    final val maxRangeMeters // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.maxRangeMeters|{}maxRangeMeters[0]
        final fun <get-maxRangeMeters>(): kotlin/Double? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.maxRangeMeters.<get-maxRangeMeters>|<get-maxRangeMeters>(){}[0]
    final val model // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.model|{}model[0]
        final fun <get-model>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.model.<get-model>|<get-model>(){}[0]
    final val name // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.name|{}name[0]
        final fun <get-name>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.name.<get-name>|<get-name>(){}[0]
    final val pricingPlanIds // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.pricingPlanIds|{}pricingPlanIds[0]
        final fun <get-pricingPlanIds>(): kotlin.collections/List<kotlin/String>? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.pricingPlanIds.<get-pricingPlanIds>|<get-pricingPlanIds>(){}[0]
    final val propulsionType // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.propulsionType|{}propulsionType[0]
        final fun <get-propulsionType>(): dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.propulsionType.<get-propulsionType>|<get-propulsionType>(){}[0]
    final val ratedPower // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.ratedPower|{}ratedPower[0]
        final fun <get-ratedPower>(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.ratedPower.<get-ratedPower>|<get-ratedPower>(){}[0]
    final val returnConstraint // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.returnConstraint|{}returnConstraint[0]
        final fun <get-returnConstraint>(): dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.returnConstraint.<get-returnConstraint>|<get-returnConstraint>(){}[0]
    final val riderCapacity // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.riderCapacity|{}riderCapacity[0]
        final fun <get-riderCapacity>(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.riderCapacity.<get-riderCapacity>|<get-riderCapacity>(){}[0]
    final val vehicleAccessories // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.vehicleAccessories|{}vehicleAccessories[0]
        final fun <get-vehicleAccessories>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory>? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.vehicleAccessories.<get-vehicleAccessories>|<get-vehicleAccessories>(){}[0]
    final val vehicleAssets // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.vehicleAssets|{}vehicleAssets[0]
        final fun <get-vehicleAssets>(): dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.vehicleAssets.<get-vehicleAssets>|<get-vehicleAssets>(){}[0]
    final val vehicleImage // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.vehicleImage|{}vehicleImage[0]
        final fun <get-vehicleImage>(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.vehicleImage.<get-vehicleImage>|<get-vehicleImage>(){}[0]
    final val vehicleTypeId // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.vehicleTypeId|{}vehicleTypeId[0]
        final fun <get-vehicleTypeId>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.vehicleTypeId.<get-vehicleTypeId>|<get-vehicleTypeId>(){}[0]
    final val wheelCount // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.wheelCount|{}wheelCount[0]
        final fun <get-wheelCount>(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.wheelCount.<get-wheelCount>|<get-wheelCount>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component1|component1(){}[0]
    final fun component10(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory>? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component10|component10(){}[0]
    final fun component11(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component11|component11(){}[0]
    final fun component12(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component12|component12(){}[0]
    final fun component13(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component13|component13(){}[0]
    final fun component14(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component14|component14(){}[0]
    final fun component15(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component15|component15(){}[0]
    final fun component16(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component16|component16(){}[0]
    final fun component17(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component17|component17(){}[0]
    final fun component18(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component18|component18(){}[0]
    final fun component19(): kotlin.time/Duration? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component19|component19(){}[0]
    final fun component2(): dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component2|component2(){}[0]
    final fun component20(): dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component20|component20(){}[0]
    final fun component21(): dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component21|component21(){}[0]
    final fun component22(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component22|component22(){}[0]
    final fun component23(): kotlin.collections/List<kotlin/String>? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component23|component23(){}[0]
    final fun component3(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component3|component3(){}[0]
    final fun component4(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component4|component4(){}[0]
    final fun component5(): kotlin/Int? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component5|component5(){}[0]
    final fun component6(): dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component6|component6(){}[0]
    final fun component7(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/EcoLabel>? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component7|component7(){}[0]
    final fun component8(): kotlin/Double? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component8|component8(){}[0]
    final fun component9(): kotlin/String? // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., dev.sargunv.mobilitydata.gbfs.v2/VehicleFormFactor = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., dev.sargunv.mobilitydata.gbfs.v2/VehiclePropulsionType = ..., kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/EcoLabel>? = ..., kotlin/Double? = ..., kotlin/String? = ..., kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleAccessory>? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin.time/Duration? = ..., dev.sargunv.mobilitydata.gbfs.v2/VehicleReturnConstraint? = ..., dev.sargunv.mobilitydata.gbfs.v2/VehicleAssets? = ..., kotlin/String? = ..., kotlin.collections/List<kotlin/String>? = ...): dev.sargunv.mobilitydata.gbfs.v2/VehicleType // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.copy|copy(kotlin.String;dev.sargunv.mobilitydata.gbfs.v2.VehicleFormFactor;kotlin.Int?;kotlin.Int?;kotlin.Int?;dev.sargunv.mobilitydata.gbfs.v2.VehiclePropulsionType;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.EcoLabel>?;kotlin.Double?;kotlin.String?;kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.VehicleAccessory>?;kotlin.Int?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.time.Duration?;dev.sargunv.mobilitydata.gbfs.v2.VehicleReturnConstraint?;dev.sargunv.mobilitydata.gbfs.v2.VehicleAssets?;kotlin.String?;kotlin.collections.List<kotlin.String>?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/VehicleType> { // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/VehicleType // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/VehicleType) // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.VehicleType){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/VehicleType> // dev.sargunv.mobilitydata.gbfs.v2/VehicleType.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability { // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability|null[0]
    constructor <init>(kotlin/String, kotlin/Int) // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.<init>|<init>(kotlin.String;kotlin.Int){}[0]

    final val count // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.count|{}count[0]
        final fun <get-count>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.count.<get-count>|<get-count>(){}[0]
    final val vehicleTypeId // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.vehicleTypeId|{}vehicleTypeId[0]
        final fun <get-vehicleTypeId>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.vehicleTypeId.<get-vehicleTypeId>|<get-vehicleTypeId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.component1|component1(){}[0]
    final fun component2(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Int = ...): dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.copy|copy(kotlin.String;kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability> { // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability) // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.VehicleTypeAvailability){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability> // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypeAvailability.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes : dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedData, kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleType> { // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes|null[0]
    constructor <init>(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleType>) // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.<init>|<init>(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.VehicleType>){}[0]

    final val size // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.size|{}size[0]
        final fun <get-size>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.size.<get-size>|<get-size>(){}[0]
    final val vehicleTypes // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.vehicleTypes|{}vehicleTypes[0]
        final fun <get-vehicleTypes>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleType> // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.vehicleTypes.<get-vehicleTypes>|<get-vehicleTypes>(){}[0]

    final fun component1(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleType> // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.component1|component1(){}[0]
    final fun contains(dev.sargunv.mobilitydata.gbfs.v2/VehicleType): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.contains|contains(dev.sargunv.mobilitydata.gbfs.v2.VehicleType){}[0]
    final fun containsAll(kotlin.collections/Collection<dev.sargunv.mobilitydata.gbfs.v2/VehicleType>): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.containsAll|containsAll(kotlin.collections.Collection<dev.sargunv.mobilitydata.gbfs.v2.VehicleType>){}[0]
    final fun copy(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleType> = ...): dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.copy|copy(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.VehicleType>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.equals|equals(kotlin.Any?){}[0]
    final fun get(kotlin/Int): dev.sargunv.mobilitydata.gbfs.v2/VehicleType // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.get|get(kotlin.Int){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.hashCode|hashCode(){}[0]
    final fun indexOf(dev.sargunv.mobilitydata.gbfs.v2/VehicleType): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.indexOf|indexOf(dev.sargunv.mobilitydata.gbfs.v2.VehicleType){}[0]
    final fun isEmpty(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.isEmpty|isEmpty(){}[0]
    final fun iterator(): kotlin.collections/Iterator<dev.sargunv.mobilitydata.gbfs.v2/VehicleType> // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.iterator|iterator(){}[0]
    final fun lastIndexOf(dev.sargunv.mobilitydata.gbfs.v2/VehicleType): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.lastIndexOf|lastIndexOf(dev.sargunv.mobilitydata.gbfs.v2.VehicleType){}[0]
    final fun listIterator(): kotlin.collections/ListIterator<dev.sargunv.mobilitydata.gbfs.v2/VehicleType> // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.listIterator|listIterator(){}[0]
    final fun listIterator(kotlin/Int): kotlin.collections/ListIterator<dev.sargunv.mobilitydata.gbfs.v2/VehicleType> // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.listIterator|listIterator(kotlin.Int){}[0]
    final fun subList(kotlin/Int, kotlin/Int): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VehicleType> // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.subList|subList(kotlin.Int;kotlin.Int){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes> { // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes) // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.VehicleTypes){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes> // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.Companion.serializer|serializer(){}[0]
    }

    // Targets: [js]
    final fun asJsReadonlyArrayView(): kotlin.js.collections/JsReadonlyArray<dev.sargunv.mobilitydata.gbfs.v2/VehicleType> // dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes.asJsReadonlyArrayView|asJsReadonlyArrayView(){}[0]
}

final class dev.sargunv.mobilitydata.gbfs.v2/VersionInfo { // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo|null[0]
    constructor <init>(kotlin/String, kotlin/String) // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.<init>|<init>(kotlin.String;kotlin.String){}[0]

    final val url // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.url|{}url[0]
        final fun <get-url>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.url.<get-url>|<get-url>(){}[0]
    final val version // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.version|{}version[0]
        final fun <get-version>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.version.<get-version>|<get-version>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.component1|component1(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ...): dev.sargunv.mobilitydata.gbfs.v2/VersionInfo // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.copy|copy(kotlin.String;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/VersionInfo> { // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/VersionInfo // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/VersionInfo) // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.VersionInfo){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/VersionInfo> // dev.sargunv.mobilitydata.gbfs.v2/VersionInfo.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gbfs.v2/VersionManifest : dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedData, kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VersionInfo> { // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest|null[0]
    constructor <init>(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VersionInfo>) // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.<init>|<init>(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.VersionInfo>){}[0]

    final val size // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.size|{}size[0]
        final fun <get-size>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.size.<get-size>|<get-size>(){}[0]
    final val versions // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.versions|{}versions[0]
        final fun <get-versions>(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VersionInfo> // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.versions.<get-versions>|<get-versions>(){}[0]

    final fun component1(): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VersionInfo> // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.component1|component1(){}[0]
    final fun contains(dev.sargunv.mobilitydata.gbfs.v2/VersionInfo): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.contains|contains(dev.sargunv.mobilitydata.gbfs.v2.VersionInfo){}[0]
    final fun containsAll(kotlin.collections/Collection<dev.sargunv.mobilitydata.gbfs.v2/VersionInfo>): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.containsAll|containsAll(kotlin.collections.Collection<dev.sargunv.mobilitydata.gbfs.v2.VersionInfo>){}[0]
    final fun copy(kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VersionInfo> = ...): dev.sargunv.mobilitydata.gbfs.v2/VersionManifest // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.copy|copy(kotlin.collections.List<dev.sargunv.mobilitydata.gbfs.v2.VersionInfo>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.equals|equals(kotlin.Any?){}[0]
    final fun get(kotlin/Int): dev.sargunv.mobilitydata.gbfs.v2/VersionInfo // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.get|get(kotlin.Int){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.hashCode|hashCode(){}[0]
    final fun indexOf(dev.sargunv.mobilitydata.gbfs.v2/VersionInfo): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.indexOf|indexOf(dev.sargunv.mobilitydata.gbfs.v2.VersionInfo){}[0]
    final fun isEmpty(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.isEmpty|isEmpty(){}[0]
    final fun iterator(): kotlin.collections/Iterator<dev.sargunv.mobilitydata.gbfs.v2/VersionInfo> // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.iterator|iterator(){}[0]
    final fun lastIndexOf(dev.sargunv.mobilitydata.gbfs.v2/VersionInfo): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.lastIndexOf|lastIndexOf(dev.sargunv.mobilitydata.gbfs.v2.VersionInfo){}[0]
    final fun listIterator(): kotlin.collections/ListIterator<dev.sargunv.mobilitydata.gbfs.v2/VersionInfo> // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.listIterator|listIterator(){}[0]
    final fun listIterator(kotlin/Int): kotlin.collections/ListIterator<dev.sargunv.mobilitydata.gbfs.v2/VersionInfo> // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.listIterator|listIterator(kotlin.Int){}[0]
    final fun subList(kotlin/Int, kotlin/Int): kotlin.collections/List<dev.sargunv.mobilitydata.gbfs.v2/VersionInfo> // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.subList|subList(kotlin.Int;kotlin.Int){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/VersionManifest> { // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/VersionManifest // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/VersionManifest) // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.VersionManifest){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/VersionManifest> // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.Companion.serializer|serializer(){}[0]
    }

    // Targets: [js]
    final fun asJsReadonlyArrayView(): kotlin.js.collections/JsReadonlyArray<dev.sargunv.mobilitydata.gbfs.v2/VersionInfo> // dev.sargunv.mobilitydata.gbfs.v2/VersionManifest.asJsReadonlyArrayView|asJsReadonlyArrayView(){}[0]
}

final value class dev.sargunv.mobilitydata.gbfs.v2/FeedType { // dev.sargunv.mobilitydata.gbfs.v2/FeedType|null[0]
    constructor <init>(kotlin/String) // dev.sargunv.mobilitydata.gbfs.v2/FeedType.<init>|<init>(kotlin.String){}[0]

    final val value // dev.sargunv.mobilitydata.gbfs.v2/FeedType.value|{}value[0]
        final fun <get-value>(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/FeedType.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/FeedType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/FeedType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/FeedType.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/FeedType> { // dev.sargunv.mobilitydata.gbfs.v2/FeedType.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/FeedType.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/FeedType.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/FeedType.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/FeedType // dev.sargunv.mobilitydata.gbfs.v2/FeedType.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/FeedType) // dev.sargunv.mobilitydata.gbfs.v2/FeedType.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.FeedType){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion|null[0]
        final val FreeBikeStatus // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.FreeBikeStatus|{}FreeBikeStatus[0]
            final fun <get-FreeBikeStatus>(): dev.sargunv.mobilitydata.gbfs.v2/FeedType // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.FreeBikeStatus.<get-FreeBikeStatus>|<get-FreeBikeStatus>(){}[0]
        final val GeofencingZones // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.GeofencingZones|{}GeofencingZones[0]
            final fun <get-GeofencingZones>(): dev.sargunv.mobilitydata.gbfs.v2/FeedType // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.GeofencingZones.<get-GeofencingZones>|<get-GeofencingZones>(){}[0]
        final val StationInformation // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.StationInformation|{}StationInformation[0]
            final fun <get-StationInformation>(): dev.sargunv.mobilitydata.gbfs.v2/FeedType // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.StationInformation.<get-StationInformation>|<get-StationInformation>(){}[0]
        final val StationStatus // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.StationStatus|{}StationStatus[0]
            final fun <get-StationStatus>(): dev.sargunv.mobilitydata.gbfs.v2/FeedType // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.StationStatus.<get-StationStatus>|<get-StationStatus>(){}[0]
        final val SystemAlerts // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.SystemAlerts|{}SystemAlerts[0]
            final fun <get-SystemAlerts>(): dev.sargunv.mobilitydata.gbfs.v2/FeedType // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.SystemAlerts.<get-SystemAlerts>|<get-SystemAlerts>(){}[0]
        final val SystemCalendar // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.SystemCalendar|{}SystemCalendar[0]
            final fun <get-SystemCalendar>(): dev.sargunv.mobilitydata.gbfs.v2/FeedType // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.SystemCalendar.<get-SystemCalendar>|<get-SystemCalendar>(){}[0]
        final val SystemHours // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.SystemHours|{}SystemHours[0]
            final fun <get-SystemHours>(): dev.sargunv.mobilitydata.gbfs.v2/FeedType // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.SystemHours.<get-SystemHours>|<get-SystemHours>(){}[0]
        final val SystemInformation // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.SystemInformation|{}SystemInformation[0]
            final fun <get-SystemInformation>(): dev.sargunv.mobilitydata.gbfs.v2/FeedType // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.SystemInformation.<get-SystemInformation>|<get-SystemInformation>(){}[0]
        final val SystemPricingPlans // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.SystemPricingPlans|{}SystemPricingPlans[0]
            final fun <get-SystemPricingPlans>(): dev.sargunv.mobilitydata.gbfs.v2/FeedType // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.SystemPricingPlans.<get-SystemPricingPlans>|<get-SystemPricingPlans>(){}[0]
        final val SystemRegions // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.SystemRegions|{}SystemRegions[0]
            final fun <get-SystemRegions>(): dev.sargunv.mobilitydata.gbfs.v2/FeedType // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.SystemRegions.<get-SystemRegions>|<get-SystemRegions>(){}[0]
        final val VehicleTypes // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.VehicleTypes|{}VehicleTypes[0]
            final fun <get-VehicleTypes>(): dev.sargunv.mobilitydata.gbfs.v2/FeedType // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.VehicleTypes.<get-VehicleTypes>|<get-VehicleTypes>(){}[0]
        final val VersionManifest // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.VersionManifest|{}VersionManifest[0]
            final fun <get-VersionManifest>(): dev.sargunv.mobilitydata.gbfs.v2/FeedType // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.VersionManifest.<get-VersionManifest>|<get-VersionManifest>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/FeedType> // dev.sargunv.mobilitydata.gbfs.v2/FeedType.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gbfs.v2/SystemManifest : dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedData, kotlin.collections/Map<kotlin/String, dev.sargunv.mobilitydata.gbfs.v2/Service> { // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest|null[0]
    constructor <init>(kotlin.collections/Map<kotlin/String, dev.sargunv.mobilitydata.gbfs.v2/Service>) // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.<init>|<init>(kotlin.collections.Map<kotlin.String,dev.sargunv.mobilitydata.gbfs.v2.Service>){}[0]
    constructor <init>(kotlin/Array<out kotlin/Pair<kotlin/String, dev.sargunv.mobilitydata.gbfs.v2/Service>>...) // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.<init>|<init>(kotlin.Array<out|kotlin.Pair<kotlin.String,dev.sargunv.mobilitydata.gbfs.v2.Service>>...){}[0]

    final val entries // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.entries|{}entries[0]
        final fun <get-entries>(): kotlin.collections/Set<kotlin.collections/Map.Entry<kotlin/String, dev.sargunv.mobilitydata.gbfs.v2/Service>> // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.entries.<get-entries>|<get-entries>(){}[0]
    final val keys // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.keys|{}keys[0]
        final fun <get-keys>(): kotlin.collections/Set<kotlin/String> // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.keys.<get-keys>|<get-keys>(){}[0]
    final val size // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.size|{}size[0]
        final fun <get-size>(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.size.<get-size>|<get-size>(){}[0]
    final val values // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.values|{}values[0]
        final fun <get-values>(): kotlin.collections/Collection<dev.sargunv.mobilitydata.gbfs.v2/Service> // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.values.<get-values>|<get-values>(){}[0]

    final fun containsKey(kotlin/String): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.containsKey|containsKey(kotlin.String){}[0]
    final fun containsValue(dev.sargunv.mobilitydata.gbfs.v2/Service): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.containsValue|containsValue(dev.sargunv.mobilitydata.gbfs.v2.Service){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.equals|equals(kotlin.Any?){}[0]
    final fun get(kotlin/String): dev.sargunv.mobilitydata.gbfs.v2/Service? // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.get|get(kotlin.String){}[0]
    final fun getService(kotlin/String): dev.sargunv.mobilitydata.gbfs.v2/Service // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.getService|getService(kotlin.String){}[0]
    final fun getServiceOrNull(kotlin/String): dev.sargunv.mobilitydata.gbfs.v2/Service? // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.getServiceOrNull|getServiceOrNull(kotlin.String){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.hashCode|hashCode(){}[0]
    final fun isEmpty(): kotlin/Boolean // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.isEmpty|isEmpty(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemManifest> { // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gbfs.v2/SystemManifest // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gbfs.v2/SystemManifest) // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gbfs.v2.SystemManifest){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.Companion|null[0]
        final val $childSerializers // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gbfs.v2/SystemManifest> // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.Companion.serializer|serializer(){}[0]
    }

    // Targets: [js]
    final fun asJsReadonlyMapView(): kotlin.js.collections/JsReadonlyMap<kotlin/String, dev.sargunv.mobilitydata.gbfs.v2/Service> // dev.sargunv.mobilitydata.gbfs.v2/SystemManifest.asJsReadonlyMapView|asJsReadonlyMapView(){}[0]
}

final val dev.sargunv.mobilitydata.gbfs.v2/GbfsJson // dev.sargunv.mobilitydata.gbfs.v2/GbfsJson|{}GbfsJson[0]
    final fun <get-GbfsJson>(): kotlinx.serialization.json/Json // dev.sargunv.mobilitydata.gbfs.v2/GbfsJson.<get-GbfsJson>|<get-GbfsJson>(){}[0]

// Targets: [js, native, wasmJs]
final class dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client : kotlin/AutoCloseable { // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client|null[0]
    constructor <init>(io.ktor.client.engine/HttpClientEngine, kotlin/Function1<io.ktor.client/HttpClientConfig<*>, kotlin/Unit> = ...) // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client.<init>|<init>(io.ktor.client.engine.HttpClientEngine;kotlin.Function1<io.ktor.client.HttpClientConfig<*>,kotlin.Unit>){}[0]
    constructor <init>(kotlin/Function1<io.ktor.client/HttpClientConfig<*>, kotlin/Unit> = ...) // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client.<init>|<init>(kotlin.Function1<io.ktor.client.HttpClientConfig<*>,kotlin.Unit>){}[0]

    final fun close() // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client.close|close(){}[0]
    final suspend fun (context(dev.sargunv.mobilitydata.gbfs.v2/Service)).getFreeBikeStatus(): dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<dev.sargunv.mobilitydata.gbfs.v2/FreeBikeStatus> // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client.getFreeBikeStatus|getFreeBikeStatus(dev.sargunv.mobilitydata.gbfs.v2.Service)(){}[0]
    final suspend fun (context(dev.sargunv.mobilitydata.gbfs.v2/Service)).getGeofencingZones(): dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<dev.sargunv.mobilitydata.gbfs.v2/GeofencingZones> // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client.getGeofencingZones|getGeofencingZones(dev.sargunv.mobilitydata.gbfs.v2.Service)(){}[0]
    final suspend fun (context(dev.sargunv.mobilitydata.gbfs.v2/Service)).getStationInformation(): dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<dev.sargunv.mobilitydata.gbfs.v2/StationInformation> // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client.getStationInformation|getStationInformation(dev.sargunv.mobilitydata.gbfs.v2.Service)(){}[0]
    final suspend fun (context(dev.sargunv.mobilitydata.gbfs.v2/Service)).getStationStatus(): dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<dev.sargunv.mobilitydata.gbfs.v2/StationStatus> // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client.getStationStatus|getStationStatus(dev.sargunv.mobilitydata.gbfs.v2.Service)(){}[0]
    final suspend fun (context(dev.sargunv.mobilitydata.gbfs.v2/Service)).getSystemAlerts(): dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<dev.sargunv.mobilitydata.gbfs.v2/SystemAlerts> // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client.getSystemAlerts|getSystemAlerts(dev.sargunv.mobilitydata.gbfs.v2.Service)(){}[0]
    final suspend fun (context(dev.sargunv.mobilitydata.gbfs.v2/Service)).getSystemCalendar(): dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<dev.sargunv.mobilitydata.gbfs.v2/SystemCalendar> // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client.getSystemCalendar|getSystemCalendar(dev.sargunv.mobilitydata.gbfs.v2.Service)(){}[0]
    final suspend fun (context(dev.sargunv.mobilitydata.gbfs.v2/Service)).getSystemHours(): dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<dev.sargunv.mobilitydata.gbfs.v2/SystemHours> // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client.getSystemHours|getSystemHours(dev.sargunv.mobilitydata.gbfs.v2.Service)(){}[0]
    final suspend fun (context(dev.sargunv.mobilitydata.gbfs.v2/Service)).getSystemInformation(): dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<dev.sargunv.mobilitydata.gbfs.v2/SystemInformation> // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client.getSystemInformation|getSystemInformation(dev.sargunv.mobilitydata.gbfs.v2.Service)(){}[0]
    final suspend fun (context(dev.sargunv.mobilitydata.gbfs.v2/Service)).getSystemPricingPlans(): dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<dev.sargunv.mobilitydata.gbfs.v2/SystemPricingPlans> // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client.getSystemPricingPlans|getSystemPricingPlans(dev.sargunv.mobilitydata.gbfs.v2.Service)(){}[0]
    final suspend fun (context(dev.sargunv.mobilitydata.gbfs.v2/Service)).getSystemRegions(): dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<dev.sargunv.mobilitydata.gbfs.v2/SystemRegions> // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client.getSystemRegions|getSystemRegions(dev.sargunv.mobilitydata.gbfs.v2.Service)(){}[0]
    final suspend fun (context(dev.sargunv.mobilitydata.gbfs.v2/Service)).getVehicleTypes(): dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<dev.sargunv.mobilitydata.gbfs.v2/VehicleTypes> // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client.getVehicleTypes|getVehicleTypes(dev.sargunv.mobilitydata.gbfs.v2.Service)(){}[0]
    final suspend fun (context(dev.sargunv.mobilitydata.gbfs.v2/Service)).getVersionManifest(): dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<dev.sargunv.mobilitydata.gbfs.v2/VersionManifest> // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client.getVersionManifest|getVersionManifest(dev.sargunv.mobilitydata.gbfs.v2.Service)(){}[0]
    final suspend fun getSystemManifest(kotlin/String): dev.sargunv.mobilitydata.gbfs.v2/GbfsFeedResponse<dev.sargunv.mobilitydata.gbfs.v2/SystemManifest> // dev.sargunv.mobilitydata.gbfs.v2/GbfsV2Client.getSystemManifest|getSystemManifest(kotlin.String){}[0]
}
