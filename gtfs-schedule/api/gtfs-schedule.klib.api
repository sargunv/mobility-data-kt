// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, wasmWasi, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <dev.sargunv.mobility-data:gtfs-schedule>
final class dev.sargunv.mobilitydata.gtfs.schedule/Agency { // dev.sargunv.mobilitydata.gtfs.schedule/Agency|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/String, kotlin/String, kotlinx.datetime/TimeZone, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Agency.<init>|<init>(kotlin.String?;kotlin.String;kotlin.String;kotlinx.datetime.TimeZone;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?){}[0]

    final val agencyEmail // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyEmail|{}agencyEmail[0]
        final fun <get-agencyEmail>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyEmail.<get-agencyEmail>|<get-agencyEmail>(){}[0]
    final val agencyFareUrl // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyFareUrl|{}agencyFareUrl[0]
        final fun <get-agencyFareUrl>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyFareUrl.<get-agencyFareUrl>|<get-agencyFareUrl>(){}[0]
    final val agencyId // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyId|{}agencyId[0]
        final fun <get-agencyId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyId.<get-agencyId>|<get-agencyId>(){}[0]
    final val agencyLang // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyLang|{}agencyLang[0]
        final fun <get-agencyLang>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyLang.<get-agencyLang>|<get-agencyLang>(){}[0]
    final val agencyName // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyName|{}agencyName[0]
        final fun <get-agencyName>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyName.<get-agencyName>|<get-agencyName>(){}[0]
    final val agencyPhone // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyPhone|{}agencyPhone[0]
        final fun <get-agencyPhone>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyPhone.<get-agencyPhone>|<get-agencyPhone>(){}[0]
    final val agencyTimezone // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyTimezone|{}agencyTimezone[0]
        final fun <get-agencyTimezone>(): kotlinx.datetime/TimeZone // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyTimezone.<get-agencyTimezone>|<get-agencyTimezone>(){}[0]
    final val agencyUrl // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyUrl|{}agencyUrl[0]
        final fun <get-agencyUrl>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyUrl.<get-agencyUrl>|<get-agencyUrl>(){}[0]
    final val cemvSupport // dev.sargunv.mobilitydata.gtfs.schedule/Agency.cemvSupport|{}cemvSupport[0]
        final fun <get-cemvSupport>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.cemvSupport.<get-cemvSupport>|<get-cemvSupport>(){}[0]

    final fun component1(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component1|component1(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component2|component2(){}[0]
    final fun component3(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component3|component3(){}[0]
    final fun component4(): kotlinx.datetime/TimeZone // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component4|component4(){}[0]
    final fun component5(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component5|component5(){}[0]
    final fun component6(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component6|component6(){}[0]
    final fun component7(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component7|component7(){}[0]
    final fun component8(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component8|component8(){}[0]
    final fun component9(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component9|component9(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/String = ..., kotlin/String = ..., kotlinx.datetime/TimeZone = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Agency // dev.sargunv.mobilitydata.gtfs.schedule/Agency.copy|copy(kotlin.String?;kotlin.String;kotlin.String;kotlinx.datetime.TimeZone;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Agency.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Agency.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Agency.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Agency> { // dev.sargunv.mobilitydata.gtfs.schedule/Agency.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Agency.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Agency.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Agency.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Agency // dev.sargunv.mobilitydata.gtfs.schedule/Agency.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Agency) // dev.sargunv.mobilitydata.gtfs.schedule/Agency.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Agency){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Agency.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Agency> // dev.sargunv.mobilitydata.gtfs.schedule/Agency.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/Route { // dev.sargunv.mobilitydata.gtfs.schedule/Route|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/RouteType, kotlin/String? = ..., dev.sargunv.mobilitydata.utils/RgbColor? = ..., dev.sargunv.mobilitydata.utils/RgbColor? = ..., kotlin/Int? = ..., dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? = ..., dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Route.<init>|<init>(kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.RouteType;kotlin.String?;dev.sargunv.mobilitydata.utils.RgbColor?;dev.sargunv.mobilitydata.utils.RgbColor?;kotlin.Int?;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff?;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?){}[0]

    final val agencyId // dev.sargunv.mobilitydata.gtfs.schedule/Route.agencyId|{}agencyId[0]
        final fun <get-agencyId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.agencyId.<get-agencyId>|<get-agencyId>(){}[0]
    final val cemvSupport // dev.sargunv.mobilitydata.gtfs.schedule/Route.cemvSupport|{}cemvSupport[0]
        final fun <get-cemvSupport>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Route.cemvSupport.<get-cemvSupport>|<get-cemvSupport>(){}[0]
    final val continuousDropOff // dev.sargunv.mobilitydata.gtfs.schedule/Route.continuousDropOff|{}continuousDropOff[0]
        final fun <get-continuousDropOff>(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? // dev.sargunv.mobilitydata.gtfs.schedule/Route.continuousDropOff.<get-continuousDropOff>|<get-continuousDropOff>(){}[0]
    final val continuousPickup // dev.sargunv.mobilitydata.gtfs.schedule/Route.continuousPickup|{}continuousPickup[0]
        final fun <get-continuousPickup>(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? // dev.sargunv.mobilitydata.gtfs.schedule/Route.continuousPickup.<get-continuousPickup>|<get-continuousPickup>(){}[0]
    final val networkId // dev.sargunv.mobilitydata.gtfs.schedule/Route.networkId|{}networkId[0]
        final fun <get-networkId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.networkId.<get-networkId>|<get-networkId>(){}[0]
    final val routeColor // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeColor|{}routeColor[0]
        final fun <get-routeColor>(): dev.sargunv.mobilitydata.utils/RgbColor? // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeColor.<get-routeColor>|<get-routeColor>(){}[0]
    final val routeDesc // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeDesc|{}routeDesc[0]
        final fun <get-routeDesc>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeDesc.<get-routeDesc>|<get-routeDesc>(){}[0]
    final val routeId // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeId|{}routeId[0]
        final fun <get-routeId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeId.<get-routeId>|<get-routeId>(){}[0]
    final val routeLongName // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeLongName|{}routeLongName[0]
        final fun <get-routeLongName>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeLongName.<get-routeLongName>|<get-routeLongName>(){}[0]
    final val routeShortName // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeShortName|{}routeShortName[0]
        final fun <get-routeShortName>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeShortName.<get-routeShortName>|<get-routeShortName>(){}[0]
    final val routeSortOrder // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeSortOrder|{}routeSortOrder[0]
        final fun <get-routeSortOrder>(): kotlin/Int? // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeSortOrder.<get-routeSortOrder>|<get-routeSortOrder>(){}[0]
    final val routeTextColor // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeTextColor|{}routeTextColor[0]
        final fun <get-routeTextColor>(): dev.sargunv.mobilitydata.utils/RgbColor? // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeTextColor.<get-routeTextColor>|<get-routeTextColor>(){}[0]
    final val routeType // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeType|{}routeType[0]
        final fun <get-routeType>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeType.<get-routeType>|<get-routeType>(){}[0]
    final val routeUrl // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeUrl|{}routeUrl[0]
        final fun <get-routeUrl>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeUrl.<get-routeUrl>|<get-routeUrl>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Route.component1|component1(){}[0]
    final fun component10(): kotlin/Int? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component10|component10(){}[0]
    final fun component11(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component11|component11(){}[0]
    final fun component12(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component12|component12(){}[0]
    final fun component13(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component13|component13(){}[0]
    final fun component14(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component14|component14(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component2|component2(){}[0]
    final fun component3(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component3|component3(){}[0]
    final fun component4(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component4|component4(){}[0]
    final fun component5(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component5|component5(){}[0]
    final fun component6(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/Route.component6|component6(){}[0]
    final fun component7(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component7|component7(){}[0]
    final fun component8(): dev.sargunv.mobilitydata.utils/RgbColor? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component8|component8(){}[0]
    final fun component9(): dev.sargunv.mobilitydata.utils/RgbColor? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/RouteType = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.utils/RgbColor? = ..., dev.sargunv.mobilitydata.utils/RgbColor? = ..., kotlin/Int? = ..., dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? = ..., dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Route // dev.sargunv.mobilitydata.gtfs.schedule/Route.copy|copy(kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.RouteType;kotlin.String?;dev.sargunv.mobilitydata.utils.RgbColor?;dev.sargunv.mobilitydata.utils.RgbColor?;kotlin.Int?;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff?;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Route.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Route.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Route.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Route> { // dev.sargunv.mobilitydata.gtfs.schedule/Route.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Route.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Route.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Route.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Route // dev.sargunv.mobilitydata.gtfs.schedule/Route.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Route) // dev.sargunv.mobilitydata.gtfs.schedule/Route.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Route){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Route.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Route> // dev.sargunv.mobilitydata.gtfs.schedule/Route.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar { // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar|null[0]
    constructor <init>(kotlin/String, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlinx.datetime/LocalDate, kotlinx.datetime/LocalDate) // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.<init>|<init>(kotlin.String;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlinx.datetime.LocalDate;kotlinx.datetime.LocalDate){}[0]

    final val endDate // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.endDate|{}endDate[0]
        final fun <get-endDate>(): kotlinx.datetime/LocalDate // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.endDate.<get-endDate>|<get-endDate>(){}[0]
    final val friday // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.friday|{}friday[0]
        final fun <get-friday>(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.friday.<get-friday>|<get-friday>(){}[0]
    final val monday // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.monday|{}monday[0]
        final fun <get-monday>(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.monday.<get-monday>|<get-monday>(){}[0]
    final val saturday // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.saturday|{}saturday[0]
        final fun <get-saturday>(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.saturday.<get-saturday>|<get-saturday>(){}[0]
    final val serviceId // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.serviceId|{}serviceId[0]
        final fun <get-serviceId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.serviceId.<get-serviceId>|<get-serviceId>(){}[0]
    final val startDate // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.startDate|{}startDate[0]
        final fun <get-startDate>(): kotlinx.datetime/LocalDate // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.startDate.<get-startDate>|<get-startDate>(){}[0]
    final val sunday // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.sunday|{}sunday[0]
        final fun <get-sunday>(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.sunday.<get-sunday>|<get-sunday>(){}[0]
    final val thursday // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.thursday|{}thursday[0]
        final fun <get-thursday>(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.thursday.<get-thursday>|<get-thursday>(){}[0]
    final val tuesday // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.tuesday|{}tuesday[0]
        final fun <get-tuesday>(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.tuesday.<get-tuesday>|<get-tuesday>(){}[0]
    final val wednesday // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.wednesday|{}wednesday[0]
        final fun <get-wednesday>(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.wednesday.<get-wednesday>|<get-wednesday>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component1|component1(){}[0]
    final fun component10(): kotlinx.datetime/LocalDate // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component10|component10(){}[0]
    final fun component2(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component8|component8(){}[0]
    final fun component9(): kotlinx.datetime/LocalDate // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlinx.datetime/LocalDate = ..., kotlinx.datetime/LocalDate = ...): dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.copy|copy(kotlin.String;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlinx.datetime.LocalDate;kotlinx.datetime.LocalDate){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar> { // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar) // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.ServiceCalendar){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar> // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride { // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride|null[0]
    constructor <init>(kotlin/String, kotlinx.datetime/LocalDate, dev.sargunv.mobilitydata.gtfs.schedule/OverrideType) // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.<init>|<init>(kotlin.String;kotlinx.datetime.LocalDate;dev.sargunv.mobilitydata.gtfs.schedule.OverrideType){}[0]

    final val date // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.date|{}date[0]
        final fun <get-date>(): kotlinx.datetime/LocalDate // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.date.<get-date>|<get-date>(){}[0]
    final val overrideType // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.overrideType|{}overrideType[0]
        final fun <get-overrideType>(): dev.sargunv.mobilitydata.gtfs.schedule/OverrideType // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.overrideType.<get-overrideType>|<get-overrideType>(){}[0]
    final val serviceId // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.serviceId|{}serviceId[0]
        final fun <get-serviceId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.serviceId.<get-serviceId>|<get-serviceId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.component1|component1(){}[0]
    final fun component2(): kotlinx.datetime/LocalDate // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.component2|component2(){}[0]
    final fun component3(): dev.sargunv.mobilitydata.gtfs.schedule/OverrideType // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.component3|component3(){}[0]
    final fun copy(kotlin/String = ..., kotlinx.datetime/LocalDate = ..., dev.sargunv.mobilitydata.gtfs.schedule/OverrideType = ...): dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.copy|copy(kotlin.String;kotlinx.datetime.LocalDate;dev.sargunv.mobilitydata.gtfs.schedule.OverrideType){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride> { // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride) // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.ServiceCalendarOverride){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride> // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/Stop { // dev.sargunv.mobilitydata.gtfs.schedule/Stop|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Double? = ..., kotlin/Double? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/LocationType? = ..., kotlin/String? = ..., kotlinx.datetime/TimeZone? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/StopAccess? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Stop.<init>|<init>(kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Double?;kotlin.Double?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.LocationType?;kotlin.String?;kotlinx.datetime.TimeZone?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.StopAccess?){}[0]

    final val levelId // dev.sargunv.mobilitydata.gtfs.schedule/Stop.levelId|{}levelId[0]
        final fun <get-levelId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.levelId.<get-levelId>|<get-levelId>(){}[0]
    final val locationType // dev.sargunv.mobilitydata.gtfs.schedule/Stop.locationType|{}locationType[0]
        final fun <get-locationType>(): dev.sargunv.mobilitydata.gtfs.schedule/LocationType? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.locationType.<get-locationType>|<get-locationType>(){}[0]
    final val parentStation // dev.sargunv.mobilitydata.gtfs.schedule/Stop.parentStation|{}parentStation[0]
        final fun <get-parentStation>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.parentStation.<get-parentStation>|<get-parentStation>(){}[0]
    final val platformCode // dev.sargunv.mobilitydata.gtfs.schedule/Stop.platformCode|{}platformCode[0]
        final fun <get-platformCode>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.platformCode.<get-platformCode>|<get-platformCode>(){}[0]
    final val stopAccess // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopAccess|{}stopAccess[0]
        final fun <get-stopAccess>(): dev.sargunv.mobilitydata.gtfs.schedule/StopAccess? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopAccess.<get-stopAccess>|<get-stopAccess>(){}[0]
    final val stopCode // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopCode|{}stopCode[0]
        final fun <get-stopCode>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopCode.<get-stopCode>|<get-stopCode>(){}[0]
    final val stopDescription // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopDescription|{}stopDescription[0]
        final fun <get-stopDescription>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopDescription.<get-stopDescription>|<get-stopDescription>(){}[0]
    final val stopId // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopId|{}stopId[0]
        final fun <get-stopId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopId.<get-stopId>|<get-stopId>(){}[0]
    final val stopLatitude // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopLatitude|{}stopLatitude[0]
        final fun <get-stopLatitude>(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopLatitude.<get-stopLatitude>|<get-stopLatitude>(){}[0]
    final val stopLongitude // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopLongitude|{}stopLongitude[0]
        final fun <get-stopLongitude>(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopLongitude.<get-stopLongitude>|<get-stopLongitude>(){}[0]
    final val stopName // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopName|{}stopName[0]
        final fun <get-stopName>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopName.<get-stopName>|<get-stopName>(){}[0]
    final val stopTimezone // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopTimezone|{}stopTimezone[0]
        final fun <get-stopTimezone>(): kotlinx.datetime/TimeZone? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopTimezone.<get-stopTimezone>|<get-stopTimezone>(){}[0]
    final val stopUrl // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopUrl|{}stopUrl[0]
        final fun <get-stopUrl>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopUrl.<get-stopUrl>|<get-stopUrl>(){}[0]
    final val ttsStopName // dev.sargunv.mobilitydata.gtfs.schedule/Stop.ttsStopName|{}ttsStopName[0]
        final fun <get-ttsStopName>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.ttsStopName.<get-ttsStopName>|<get-ttsStopName>(){}[0]
    final val wheelchairBoarding // dev.sargunv.mobilitydata.gtfs.schedule/Stop.wheelchairBoarding|{}wheelchairBoarding[0]
        final fun <get-wheelchairBoarding>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.wheelchairBoarding.<get-wheelchairBoarding>|<get-wheelchairBoarding>(){}[0]
    final val zoneId // dev.sargunv.mobilitydata.gtfs.schedule/Stop.zoneId|{}zoneId[0]
        final fun <get-zoneId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.zoneId.<get-zoneId>|<get-zoneId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component1|component1(){}[0]
    final fun component10(): dev.sargunv.mobilitydata.gtfs.schedule/LocationType? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component10|component10(){}[0]
    final fun component11(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component11|component11(){}[0]
    final fun component12(): kotlinx.datetime/TimeZone? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component12|component12(){}[0]
    final fun component13(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component13|component13(){}[0]
    final fun component14(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component14|component14(){}[0]
    final fun component15(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component15|component15(){}[0]
    final fun component16(): dev.sargunv.mobilitydata.gtfs.schedule/StopAccess? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component16|component16(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component2|component2(){}[0]
    final fun component3(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component3|component3(){}[0]
    final fun component4(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component4|component4(){}[0]
    final fun component5(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component5|component5(){}[0]
    final fun component6(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component6|component6(){}[0]
    final fun component7(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component7|component7(){}[0]
    final fun component8(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component8|component8(){}[0]
    final fun component9(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Double? = ..., kotlin/Double? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/LocationType? = ..., kotlin/String? = ..., kotlinx.datetime/TimeZone? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/StopAccess? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Stop // dev.sargunv.mobilitydata.gtfs.schedule/Stop.copy|copy(kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Double?;kotlin.Double?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.LocationType?;kotlin.String?;kotlinx.datetime.TimeZone?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.StopAccess?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Stop.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Stop.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Stop.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Stop> { // dev.sargunv.mobilitydata.gtfs.schedule/Stop.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Stop.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Stop.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Stop.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Stop // dev.sargunv.mobilitydata.gtfs.schedule/Stop.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Stop) // dev.sargunv.mobilitydata.gtfs.schedule/Stop.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Stop){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Stop.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Stop> // dev.sargunv.mobilitydata.gtfs.schedule/Stop.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/StopTime { // dev.sargunv.mobilitydata.gtfs.schedule/StopTime|null[0]
    constructor <init>(kotlin/String, dev.sargunv.mobilitydata.utils/ServiceTime? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/Int, kotlin/String? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff? = ..., dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff? = ..., dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? = ..., dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? = ..., kotlin/Double? = ..., dev.sargunv.mobilitydata.gtfs.schedule/Timepoint? = ..., kotlin/String? = ..., kotlin/String? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.<init>|<init>(kotlin.String;dev.sargunv.mobilitydata.utils.ServiceTime?;dev.sargunv.mobilitydata.utils.ServiceTime?;kotlin.String;kotlin.String?;kotlin.String?;kotlin.Int;kotlin.String?;dev.sargunv.mobilitydata.utils.ServiceTime?;dev.sargunv.mobilitydata.utils.ServiceTime?;dev.sargunv.mobilitydata.gtfs.schedule.PickupDropoff?;dev.sargunv.mobilitydata.gtfs.schedule.PickupDropoff?;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff?;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff?;kotlin.Double?;dev.sargunv.mobilitydata.gtfs.schedule.Timepoint?;kotlin.String?;kotlin.String?){}[0]

    final val arrivalTime // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.arrivalTime|{}arrivalTime[0]
        final fun <get-arrivalTime>(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.arrivalTime.<get-arrivalTime>|<get-arrivalTime>(){}[0]
    final val continuousDropOff // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.continuousDropOff|{}continuousDropOff[0]
        final fun <get-continuousDropOff>(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.continuousDropOff.<get-continuousDropOff>|<get-continuousDropOff>(){}[0]
    final val continuousPickup // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.continuousPickup|{}continuousPickup[0]
        final fun <get-continuousPickup>(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.continuousPickup.<get-continuousPickup>|<get-continuousPickup>(){}[0]
    final val departureTime // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.departureTime|{}departureTime[0]
        final fun <get-departureTime>(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.departureTime.<get-departureTime>|<get-departureTime>(){}[0]
    final val dropOffBookingRuleId // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.dropOffBookingRuleId|{}dropOffBookingRuleId[0]
        final fun <get-dropOffBookingRuleId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.dropOffBookingRuleId.<get-dropOffBookingRuleId>|<get-dropOffBookingRuleId>(){}[0]
    final val dropOffType // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.dropOffType|{}dropOffType[0]
        final fun <get-dropOffType>(): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.dropOffType.<get-dropOffType>|<get-dropOffType>(){}[0]
    final val endPickupDropOffWindow // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.endPickupDropOffWindow|{}endPickupDropOffWindow[0]
        final fun <get-endPickupDropOffWindow>(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.endPickupDropOffWindow.<get-endPickupDropOffWindow>|<get-endPickupDropOffWindow>(){}[0]
    final val locationGroupId // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.locationGroupId|{}locationGroupId[0]
        final fun <get-locationGroupId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.locationGroupId.<get-locationGroupId>|<get-locationGroupId>(){}[0]
    final val locationId // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.locationId|{}locationId[0]
        final fun <get-locationId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.locationId.<get-locationId>|<get-locationId>(){}[0]
    final val pickupBookingRuleId // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.pickupBookingRuleId|{}pickupBookingRuleId[0]
        final fun <get-pickupBookingRuleId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.pickupBookingRuleId.<get-pickupBookingRuleId>|<get-pickupBookingRuleId>(){}[0]
    final val pickupType // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.pickupType|{}pickupType[0]
        final fun <get-pickupType>(): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.pickupType.<get-pickupType>|<get-pickupType>(){}[0]
    final val shapeDistTraveled // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.shapeDistTraveled|{}shapeDistTraveled[0]
        final fun <get-shapeDistTraveled>(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.shapeDistTraveled.<get-shapeDistTraveled>|<get-shapeDistTraveled>(){}[0]
    final val startPickupDropOffWindow // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.startPickupDropOffWindow|{}startPickupDropOffWindow[0]
        final fun <get-startPickupDropOffWindow>(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.startPickupDropOffWindow.<get-startPickupDropOffWindow>|<get-startPickupDropOffWindow>(){}[0]
    final val stopHeadsign // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.stopHeadsign|{}stopHeadsign[0]
        final fun <get-stopHeadsign>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.stopHeadsign.<get-stopHeadsign>|<get-stopHeadsign>(){}[0]
    final val stopId // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.stopId|{}stopId[0]
        final fun <get-stopId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.stopId.<get-stopId>|<get-stopId>(){}[0]
    final val stopSequence // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.stopSequence|{}stopSequence[0]
        final fun <get-stopSequence>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.stopSequence.<get-stopSequence>|<get-stopSequence>(){}[0]
    final val timepoint // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.timepoint|{}timepoint[0]
        final fun <get-timepoint>(): dev.sargunv.mobilitydata.gtfs.schedule/Timepoint? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.timepoint.<get-timepoint>|<get-timepoint>(){}[0]
    final val tripId // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.tripId|{}tripId[0]
        final fun <get-tripId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.tripId.<get-tripId>|<get-tripId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component1|component1(){}[0]
    final fun component10(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component10|component10(){}[0]
    final fun component11(): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component11|component11(){}[0]
    final fun component12(): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component12|component12(){}[0]
    final fun component13(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component13|component13(){}[0]
    final fun component14(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component14|component14(){}[0]
    final fun component15(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component15|component15(){}[0]
    final fun component16(): dev.sargunv.mobilitydata.gtfs.schedule/Timepoint? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component16|component16(){}[0]
    final fun component17(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component17|component17(){}[0]
    final fun component18(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component18|component18(){}[0]
    final fun component2(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component2|component2(){}[0]
    final fun component3(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component3|component3(){}[0]
    final fun component4(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component4|component4(){}[0]
    final fun component5(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component5|component5(){}[0]
    final fun component6(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component6|component6(){}[0]
    final fun component7(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component7|component7(){}[0]
    final fun component8(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component8|component8(){}[0]
    final fun component9(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Int = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff? = ..., dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff? = ..., dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? = ..., dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? = ..., kotlin/Double? = ..., dev.sargunv.mobilitydata.gtfs.schedule/Timepoint? = ..., kotlin/String? = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gtfs.schedule/StopTime // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.copy|copy(kotlin.String;dev.sargunv.mobilitydata.utils.ServiceTime?;dev.sargunv.mobilitydata.utils.ServiceTime?;kotlin.String;kotlin.String?;kotlin.String?;kotlin.Int;kotlin.String?;dev.sargunv.mobilitydata.utils.ServiceTime?;dev.sargunv.mobilitydata.utils.ServiceTime?;dev.sargunv.mobilitydata.gtfs.schedule.PickupDropoff?;dev.sargunv.mobilitydata.gtfs.schedule.PickupDropoff?;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff?;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff?;kotlin.Double?;dev.sargunv.mobilitydata.gtfs.schedule.Timepoint?;kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/StopTime> { // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/StopTime // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/StopTime) // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.StopTime){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/StopTime> // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/Trip { // dev.sargunv.mobilitydata.gtfs.schedule/Trip|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/DirectionId? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Trip.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.DirectionId?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?){}[0]

    final val bikesAllowed // dev.sargunv.mobilitydata.gtfs.schedule/Trip.bikesAllowed|{}bikesAllowed[0]
        final fun <get-bikesAllowed>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.bikesAllowed.<get-bikesAllowed>|<get-bikesAllowed>(){}[0]
    final val blockId // dev.sargunv.mobilitydata.gtfs.schedule/Trip.blockId|{}blockId[0]
        final fun <get-blockId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.blockId.<get-blockId>|<get-blockId>(){}[0]
    final val carsAllowed // dev.sargunv.mobilitydata.gtfs.schedule/Trip.carsAllowed|{}carsAllowed[0]
        final fun <get-carsAllowed>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.carsAllowed.<get-carsAllowed>|<get-carsAllowed>(){}[0]
    final val directionId // dev.sargunv.mobilitydata.gtfs.schedule/Trip.directionId|{}directionId[0]
        final fun <get-directionId>(): dev.sargunv.mobilitydata.gtfs.schedule/DirectionId? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.directionId.<get-directionId>|<get-directionId>(){}[0]
    final val routeId // dev.sargunv.mobilitydata.gtfs.schedule/Trip.routeId|{}routeId[0]
        final fun <get-routeId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Trip.routeId.<get-routeId>|<get-routeId>(){}[0]
    final val serviceId // dev.sargunv.mobilitydata.gtfs.schedule/Trip.serviceId|{}serviceId[0]
        final fun <get-serviceId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Trip.serviceId.<get-serviceId>|<get-serviceId>(){}[0]
    final val shapeId // dev.sargunv.mobilitydata.gtfs.schedule/Trip.shapeId|{}shapeId[0]
        final fun <get-shapeId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.shapeId.<get-shapeId>|<get-shapeId>(){}[0]
    final val tripHeadsign // dev.sargunv.mobilitydata.gtfs.schedule/Trip.tripHeadsign|{}tripHeadsign[0]
        final fun <get-tripHeadsign>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.tripHeadsign.<get-tripHeadsign>|<get-tripHeadsign>(){}[0]
    final val tripId // dev.sargunv.mobilitydata.gtfs.schedule/Trip.tripId|{}tripId[0]
        final fun <get-tripId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Trip.tripId.<get-tripId>|<get-tripId>(){}[0]
    final val tripShortName // dev.sargunv.mobilitydata.gtfs.schedule/Trip.tripShortName|{}tripShortName[0]
        final fun <get-tripShortName>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.tripShortName.<get-tripShortName>|<get-tripShortName>(){}[0]
    final val wheelchairAccessible // dev.sargunv.mobilitydata.gtfs.schedule/Trip.wheelchairAccessible|{}wheelchairAccessible[0]
        final fun <get-wheelchairAccessible>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.wheelchairAccessible.<get-wheelchairAccessible>|<get-wheelchairAccessible>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component1|component1(){}[0]
    final fun component10(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component10|component10(){}[0]
    final fun component11(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component11|component11(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component2|component2(){}[0]
    final fun component3(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component3|component3(){}[0]
    final fun component4(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component4|component4(){}[0]
    final fun component5(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component5|component5(){}[0]
    final fun component6(): dev.sargunv.mobilitydata.gtfs.schedule/DirectionId? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component6|component6(){}[0]
    final fun component7(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component7|component7(){}[0]
    final fun component8(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component8|component8(){}[0]
    final fun component9(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/DirectionId? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Trip // dev.sargunv.mobilitydata.gtfs.schedule/Trip.copy|copy(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.DirectionId?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Trip.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Trip.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Trip.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Trip> { // dev.sargunv.mobilitydata.gtfs.schedule/Trip.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Trip.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Trip.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Trip.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Trip // dev.sargunv.mobilitydata.gtfs.schedule/Trip.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Trip) // dev.sargunv.mobilitydata.gtfs.schedule/Trip.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Trip){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Trip.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Trip> // dev.sargunv.mobilitydata.gtfs.schedule/Trip.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff { // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff> { // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff) // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion|null[0]
        final val Continuous // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.Continuous|{}Continuous[0]
            final fun <get-Continuous>(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.Continuous.<get-Continuous>|<get-Continuous>(){}[0]
        final val CoordinateWithDriver // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.CoordinateWithDriver|{}CoordinateWithDriver[0]
            final fun <get-CoordinateWithDriver>(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.CoordinateWithDriver.<get-CoordinateWithDriver>|<get-CoordinateWithDriver>(){}[0]
        final val NoContinuous // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.NoContinuous|{}NoContinuous[0]
            final fun <get-NoContinuous>(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.NoContinuous.<get-NoContinuous>|<get-NoContinuous>(){}[0]
        final val PhoneAgency // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.PhoneAgency|{}PhoneAgency[0]
            final fun <get-PhoneAgency>(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.PhoneAgency.<get-PhoneAgency>|<get-PhoneAgency>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff> // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/DirectionId { // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/DirectionId> { // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/DirectionId // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/DirectionId) // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.DirectionId){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.Companion|null[0]
        final val OtherWay // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.Companion.OtherWay|{}OtherWay[0]
            final fun <get-OtherWay>(): dev.sargunv.mobilitydata.gtfs.schedule/DirectionId // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.Companion.OtherWay.<get-OtherWay>|<get-OtherWay>(){}[0]
        final val ThatWay // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.Companion.ThatWay|{}ThatWay[0]
            final fun <get-ThatWay>(): dev.sargunv.mobilitydata.gtfs.schedule/DirectionId // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.Companion.ThatWay.<get-ThatWay>|<get-ThatWay>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/DirectionId> // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/LocationType { // dev.sargunv.mobilitydata.gtfs.schedule/LocationType|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/LocationType> { // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/LocationType // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/LocationType) // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.LocationType){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion|null[0]
        final val BoardingArea // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.BoardingArea|{}BoardingArea[0]
            final fun <get-BoardingArea>(): dev.sargunv.mobilitydata.gtfs.schedule/LocationType // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.BoardingArea.<get-BoardingArea>|<get-BoardingArea>(){}[0]
        final val EntranceOrExit // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.EntranceOrExit|{}EntranceOrExit[0]
            final fun <get-EntranceOrExit>(): dev.sargunv.mobilitydata.gtfs.schedule/LocationType // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.EntranceOrExit.<get-EntranceOrExit>|<get-EntranceOrExit>(){}[0]
        final val GenericNode // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.GenericNode|{}GenericNode[0]
            final fun <get-GenericNode>(): dev.sargunv.mobilitydata.gtfs.schedule/LocationType // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.GenericNode.<get-GenericNode>|<get-GenericNode>(){}[0]
        final val Station // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.Station|{}Station[0]
            final fun <get-Station>(): dev.sargunv.mobilitydata.gtfs.schedule/LocationType // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.Station.<get-Station>|<get-Station>(){}[0]
        final val Stop // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.Stop|{}Stop[0]
            final fun <get-Stop>(): dev.sargunv.mobilitydata.gtfs.schedule/LocationType // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.Stop.<get-Stop>|<get-Stop>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/LocationType> // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/OverrideType { // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/OverrideType> { // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/OverrideType // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/OverrideType) // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.OverrideType){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.Companion|null[0]
        final val ServiceAdded // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.Companion.ServiceAdded|{}ServiceAdded[0]
            final fun <get-ServiceAdded>(): dev.sargunv.mobilitydata.gtfs.schedule/OverrideType // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.Companion.ServiceAdded.<get-ServiceAdded>|<get-ServiceAdded>(){}[0]
        final val ServiceRemoved // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.Companion.ServiceRemoved|{}ServiceRemoved[0]
            final fun <get-ServiceRemoved>(): dev.sargunv.mobilitydata.gtfs.schedule/OverrideType // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.Companion.ServiceRemoved.<get-ServiceRemoved>|<get-ServiceRemoved>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/OverrideType> // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff { // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff> { // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff) // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.PickupDropoff){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion|null[0]
        final val CoordinateWithDriver // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.CoordinateWithDriver|{}CoordinateWithDriver[0]
            final fun <get-CoordinateWithDriver>(): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.CoordinateWithDriver.<get-CoordinateWithDriver>|<get-CoordinateWithDriver>(){}[0]
        final val None // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.None|{}None[0]
            final fun <get-None>(): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.None.<get-None>|<get-None>(){}[0]
        final val PhoneAgency // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.PhoneAgency|{}PhoneAgency[0]
            final fun <get-PhoneAgency>(): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.PhoneAgency.<get-PhoneAgency>|<get-PhoneAgency>(){}[0]
        final val Regular // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.Regular|{}Regular[0]
            final fun <get-Regular>(): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.Regular.<get-Regular>|<get-Regular>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff> // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/RouteType { // dev.sargunv.mobilitydata.gtfs.schedule/RouteType|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/RouteType> { // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/RouteType) // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.RouteType){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion|null[0]
        final val AerialLift // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.AerialLift|{}AerialLift[0]
            final fun <get-AerialLift>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.AerialLift.<get-AerialLift>|<get-AerialLift>(){}[0]
        final val Bus // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Bus|{}Bus[0]
            final fun <get-Bus>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Bus.<get-Bus>|<get-Bus>(){}[0]
        final val CableTram // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.CableTram|{}CableTram[0]
            final fun <get-CableTram>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.CableTram.<get-CableTram>|<get-CableTram>(){}[0]
        final val Ferry // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Ferry|{}Ferry[0]
            final fun <get-Ferry>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Ferry.<get-Ferry>|<get-Ferry>(){}[0]
        final val Funicular // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Funicular|{}Funicular[0]
            final fun <get-Funicular>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Funicular.<get-Funicular>|<get-Funicular>(){}[0]
        final val Monorail // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Monorail|{}Monorail[0]
            final fun <get-Monorail>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Monorail.<get-Monorail>|<get-Monorail>(){}[0]
        final val Rail // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Rail|{}Rail[0]
            final fun <get-Rail>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Rail.<get-Rail>|<get-Rail>(){}[0]
        final val Subway // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Subway|{}Subway[0]
            final fun <get-Subway>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Subway.<get-Subway>|<get-Subway>(){}[0]
        final val Tram // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Tram|{}Tram[0]
            final fun <get-Tram>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Tram.<get-Tram>|<get-Tram>(){}[0]
        final val Trolleybus // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Trolleybus|{}Trolleybus[0]
            final fun <get-Trolleybus>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Trolleybus.<get-Trolleybus>|<get-Trolleybus>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/RouteType> // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/StopAccess { // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/StopAccess> { // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/StopAccess // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/StopAccess) // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.StopAccess){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.Companion|null[0]
        final val Direct // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.Companion.Direct|{}Direct[0]
            final fun <get-Direct>(): dev.sargunv.mobilitydata.gtfs.schedule/StopAccess // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.Companion.Direct.<get-Direct>|<get-Direct>(){}[0]
        final val Indirect // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.Companion.Indirect|{}Indirect[0]
            final fun <get-Indirect>(): dev.sargunv.mobilitydata.gtfs.schedule/StopAccess // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.Companion.Indirect.<get-Indirect>|<get-Indirect>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/StopAccess> // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/Timepoint { // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Timepoint> { // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Timepoint // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Timepoint) // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Timepoint){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.Companion|null[0]
        final val Approximate // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.Companion.Approximate|{}Approximate[0]
            final fun <get-Approximate>(): dev.sargunv.mobilitydata.gtfs.schedule/Timepoint // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.Companion.Approximate.<get-Approximate>|<get-Approximate>(){}[0]
        final val Exact // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.Companion.Exact|{}Exact[0]
            final fun <get-Exact>(): dev.sargunv.mobilitydata.gtfs.schedule/Timepoint // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.Companion.Exact.<get-Exact>|<get-Exact>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Timepoint> // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/TriState { // dev.sargunv.mobilitydata.gtfs.schedule/TriState|null[0]
    constructor <init>(kotlin/Int) // dev.sargunv.mobilitydata.gtfs.schedule/TriState.<init>|<init>(kotlin.Int){}[0]

    final val value // dev.sargunv.mobilitydata.gtfs.schedule/TriState.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/TriState.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/TriState.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/TriState.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/TriState.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/TriState> { // dev.sargunv.mobilitydata.gtfs.schedule/TriState.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/TriState.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/TriState.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/TriState.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/TriState // dev.sargunv.mobilitydata.gtfs.schedule/TriState.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/TriState) // dev.sargunv.mobilitydata.gtfs.schedule/TriState.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.TriState){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/TriState.Companion|null[0]
        final val No // dev.sargunv.mobilitydata.gtfs.schedule/TriState.Companion.No|{}No[0]
            final fun <get-No>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState // dev.sargunv.mobilitydata.gtfs.schedule/TriState.Companion.No.<get-No>|<get-No>(){}[0]
        final val Unknown // dev.sargunv.mobilitydata.gtfs.schedule/TriState.Companion.Unknown|{}Unknown[0]
            final fun <get-Unknown>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState // dev.sargunv.mobilitydata.gtfs.schedule/TriState.Companion.Unknown.<get-Unknown>|<get-Unknown>(){}[0]
        final val Yes // dev.sargunv.mobilitydata.gtfs.schedule/TriState.Companion.Yes|{}Yes[0]
            final fun <get-Yes>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState // dev.sargunv.mobilitydata.gtfs.schedule/TriState.Companion.Yes.<get-Yes>|<get-Yes>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/TriState> // dev.sargunv.mobilitydata.gtfs.schedule/TriState.Companion.serializer|serializer(){}[0]
    }
}

final val dev.sargunv.mobilitydata.gtfs.schedule/GtfsCsv // dev.sargunv.mobilitydata.gtfs.schedule/GtfsCsv|{}GtfsCsv[0]
    final fun <get-GtfsCsv>(): dev.sargunv.kotlindsv/DsvFormat // dev.sargunv.mobilitydata.gtfs.schedule/GtfsCsv.<get-GtfsCsv>|<get-GtfsCsv>(){}[0]
