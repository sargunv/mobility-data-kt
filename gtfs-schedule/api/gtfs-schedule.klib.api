// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, wasmWasi, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <dev.sargunv.mobility-data:gtfs-schedule>
final class dev.sargunv.mobilitydata.gtfs.schedule/Agency { // dev.sargunv.mobilitydata.gtfs.schedule/Agency|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/String, kotlin/String, kotlinx.datetime/TimeZone, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Agency.<init>|<init>(kotlin.String?;kotlin.String;kotlin.String;kotlinx.datetime.TimeZone;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?){}[0]

    final val agencyEmail // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyEmail|{}agencyEmail[0]
        final fun <get-agencyEmail>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyEmail.<get-agencyEmail>|<get-agencyEmail>(){}[0]
    final val agencyFareUrl // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyFareUrl|{}agencyFareUrl[0]
        final fun <get-agencyFareUrl>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyFareUrl.<get-agencyFareUrl>|<get-agencyFareUrl>(){}[0]
    final val agencyId // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyId|{}agencyId[0]
        final fun <get-agencyId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyId.<get-agencyId>|<get-agencyId>(){}[0]
    final val agencyLang // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyLang|{}agencyLang[0]
        final fun <get-agencyLang>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyLang.<get-agencyLang>|<get-agencyLang>(){}[0]
    final val agencyName // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyName|{}agencyName[0]
        final fun <get-agencyName>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyName.<get-agencyName>|<get-agencyName>(){}[0]
    final val agencyPhone // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyPhone|{}agencyPhone[0]
        final fun <get-agencyPhone>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyPhone.<get-agencyPhone>|<get-agencyPhone>(){}[0]
    final val agencyTimezone // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyTimezone|{}agencyTimezone[0]
        final fun <get-agencyTimezone>(): kotlinx.datetime/TimeZone // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyTimezone.<get-agencyTimezone>|<get-agencyTimezone>(){}[0]
    final val agencyUrl // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyUrl|{}agencyUrl[0]
        final fun <get-agencyUrl>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Agency.agencyUrl.<get-agencyUrl>|<get-agencyUrl>(){}[0]
    final val cemvSupport // dev.sargunv.mobilitydata.gtfs.schedule/Agency.cemvSupport|{}cemvSupport[0]
        final fun <get-cemvSupport>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.cemvSupport.<get-cemvSupport>|<get-cemvSupport>(){}[0]

    final fun component1(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component1|component1(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component2|component2(){}[0]
    final fun component3(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component3|component3(){}[0]
    final fun component4(): kotlinx.datetime/TimeZone // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component4|component4(){}[0]
    final fun component5(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component5|component5(){}[0]
    final fun component6(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component6|component6(){}[0]
    final fun component7(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component7|component7(){}[0]
    final fun component8(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component8|component8(){}[0]
    final fun component9(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Agency.component9|component9(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/String = ..., kotlin/String = ..., kotlinx.datetime/TimeZone = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Agency // dev.sargunv.mobilitydata.gtfs.schedule/Agency.copy|copy(kotlin.String?;kotlin.String;kotlin.String;kotlinx.datetime.TimeZone;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Agency.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Agency.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Agency.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Agency> { // dev.sargunv.mobilitydata.gtfs.schedule/Agency.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Agency.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Agency.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Agency.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Agency // dev.sargunv.mobilitydata.gtfs.schedule/Agency.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Agency) // dev.sargunv.mobilitydata.gtfs.schedule/Agency.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Agency){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Agency.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Agency> // dev.sargunv.mobilitydata.gtfs.schedule/Agency.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/Area { // dev.sargunv.mobilitydata.gtfs.schedule/Area|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Area.<init>|<init>(kotlin.String;kotlin.String?){}[0]

    final val areaId // dev.sargunv.mobilitydata.gtfs.schedule/Area.areaId|{}areaId[0]
        final fun <get-areaId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Area.areaId.<get-areaId>|<get-areaId>(){}[0]
    final val areaName // dev.sargunv.mobilitydata.gtfs.schedule/Area.areaName|{}areaName[0]
        final fun <get-areaName>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Area.areaName.<get-areaName>|<get-areaName>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Area.component1|component1(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Area.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Area // dev.sargunv.mobilitydata.gtfs.schedule/Area.copy|copy(kotlin.String;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Area.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Area.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Area.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Area> { // dev.sargunv.mobilitydata.gtfs.schedule/Area.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Area.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Area.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Area.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Area // dev.sargunv.mobilitydata.gtfs.schedule/Area.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Area) // dev.sargunv.mobilitydata.gtfs.schedule/Area.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Area){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Area.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Area> // dev.sargunv.mobilitydata.gtfs.schedule/Area.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/Attribution { // dev.sargunv.mobilitydata.gtfs.schedule/Attribution|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String, kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.<init>|<init>(kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.String?;kotlin.String?){}[0]

    final val agencyId // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.agencyId|{}agencyId[0]
        final fun <get-agencyId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.agencyId.<get-agencyId>|<get-agencyId>(){}[0]
    final val attributionEmail // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.attributionEmail|{}attributionEmail[0]
        final fun <get-attributionEmail>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.attributionEmail.<get-attributionEmail>|<get-attributionEmail>(){}[0]
    final val attributionId // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.attributionId|{}attributionId[0]
        final fun <get-attributionId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.attributionId.<get-attributionId>|<get-attributionId>(){}[0]
    final val attributionPhone // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.attributionPhone|{}attributionPhone[0]
        final fun <get-attributionPhone>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.attributionPhone.<get-attributionPhone>|<get-attributionPhone>(){}[0]
    final val attributionUrl // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.attributionUrl|{}attributionUrl[0]
        final fun <get-attributionUrl>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.attributionUrl.<get-attributionUrl>|<get-attributionUrl>(){}[0]
    final val isAuthority // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.isAuthority|{}isAuthority[0]
        final fun <get-isAuthority>(): kotlin/Boolean? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.isAuthority.<get-isAuthority>|<get-isAuthority>(){}[0]
    final val isOperator // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.isOperator|{}isOperator[0]
        final fun <get-isOperator>(): kotlin/Boolean? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.isOperator.<get-isOperator>|<get-isOperator>(){}[0]
    final val isProducer // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.isProducer|{}isProducer[0]
        final fun <get-isProducer>(): kotlin/Boolean? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.isProducer.<get-isProducer>|<get-isProducer>(){}[0]
    final val organizationName // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.organizationName|{}organizationName[0]
        final fun <get-organizationName>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.organizationName.<get-organizationName>|<get-organizationName>(){}[0]
    final val routeId // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.routeId|{}routeId[0]
        final fun <get-routeId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.routeId.<get-routeId>|<get-routeId>(){}[0]
    final val tripId // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.tripId|{}tripId[0]
        final fun <get-tripId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.tripId.<get-tripId>|<get-tripId>(){}[0]

    final fun component1(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.component1|component1(){}[0]
    final fun component10(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.component10|component10(){}[0]
    final fun component11(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.component11|component11(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.component2|component2(){}[0]
    final fun component3(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.component3|component3(){}[0]
    final fun component4(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.component4|component4(){}[0]
    final fun component5(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.component8|component8(){}[0]
    final fun component9(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.component9|component9(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Attribution // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.copy|copy(kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Attribution> { // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Attribution // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Attribution) // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Attribution){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Attribution> // dev.sargunv.mobilitydata.gtfs.schedule/Attribution.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/BookingRule { // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule|null[0]
    constructor <init>(kotlin/String, dev.sargunv.mobilitydata.gtfs.schedule/BookingType, kotlin.time/Duration? = ..., kotlin.time/Duration? = ..., kotlin/Int? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., kotlin/Int? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.<init>|<init>(kotlin.String;dev.sargunv.mobilitydata.gtfs.schedule.BookingType;kotlin.time.Duration?;kotlin.time.Duration?;kotlin.Int?;dev.sargunv.mobilitydata.utils.ServiceTime?;kotlin.Int?;dev.sargunv.mobilitydata.utils.ServiceTime?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?){}[0]

    final val bookingRuleId // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.bookingRuleId|{}bookingRuleId[0]
        final fun <get-bookingRuleId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.bookingRuleId.<get-bookingRuleId>|<get-bookingRuleId>(){}[0]
    final val bookingType // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.bookingType|{}bookingType[0]
        final fun <get-bookingType>(): dev.sargunv.mobilitydata.gtfs.schedule/BookingType // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.bookingType.<get-bookingType>|<get-bookingType>(){}[0]
    final val bookingUrl // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.bookingUrl|{}bookingUrl[0]
        final fun <get-bookingUrl>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.bookingUrl.<get-bookingUrl>|<get-bookingUrl>(){}[0]
    final val dropOffMessage // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.dropOffMessage|{}dropOffMessage[0]
        final fun <get-dropOffMessage>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.dropOffMessage.<get-dropOffMessage>|<get-dropOffMessage>(){}[0]
    final val infoUrl // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.infoUrl|{}infoUrl[0]
        final fun <get-infoUrl>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.infoUrl.<get-infoUrl>|<get-infoUrl>(){}[0]
    final val message // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.message|{}message[0]
        final fun <get-message>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.message.<get-message>|<get-message>(){}[0]
    final val phoneNumber // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.phoneNumber|{}phoneNumber[0]
        final fun <get-phoneNumber>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.phoneNumber.<get-phoneNumber>|<get-phoneNumber>(){}[0]
    final val pickupMessage // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.pickupMessage|{}pickupMessage[0]
        final fun <get-pickupMessage>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.pickupMessage.<get-pickupMessage>|<get-pickupMessage>(){}[0]
    final val priorNoticeDurationMax // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.priorNoticeDurationMax|{}priorNoticeDurationMax[0]
        final fun <get-priorNoticeDurationMax>(): kotlin.time/Duration? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.priorNoticeDurationMax.<get-priorNoticeDurationMax>|<get-priorNoticeDurationMax>(){}[0]
    final val priorNoticeDurationMin // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.priorNoticeDurationMin|{}priorNoticeDurationMin[0]
        final fun <get-priorNoticeDurationMin>(): kotlin.time/Duration? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.priorNoticeDurationMin.<get-priorNoticeDurationMin>|<get-priorNoticeDurationMin>(){}[0]
    final val priorNoticeLastDay // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.priorNoticeLastDay|{}priorNoticeLastDay[0]
        final fun <get-priorNoticeLastDay>(): kotlin/Int? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.priorNoticeLastDay.<get-priorNoticeLastDay>|<get-priorNoticeLastDay>(){}[0]
    final val priorNoticeLastTime // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.priorNoticeLastTime|{}priorNoticeLastTime[0]
        final fun <get-priorNoticeLastTime>(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.priorNoticeLastTime.<get-priorNoticeLastTime>|<get-priorNoticeLastTime>(){}[0]
    final val priorNoticeServiceId // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.priorNoticeServiceId|{}priorNoticeServiceId[0]
        final fun <get-priorNoticeServiceId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.priorNoticeServiceId.<get-priorNoticeServiceId>|<get-priorNoticeServiceId>(){}[0]
    final val priorNoticeStartDay // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.priorNoticeStartDay|{}priorNoticeStartDay[0]
        final fun <get-priorNoticeStartDay>(): kotlin/Int? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.priorNoticeStartDay.<get-priorNoticeStartDay>|<get-priorNoticeStartDay>(){}[0]
    final val priorNoticeStartTime // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.priorNoticeStartTime|{}priorNoticeStartTime[0]
        final fun <get-priorNoticeStartTime>(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.priorNoticeStartTime.<get-priorNoticeStartTime>|<get-priorNoticeStartTime>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.component1|component1(){}[0]
    final fun component10(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.component10|component10(){}[0]
    final fun component11(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.component11|component11(){}[0]
    final fun component12(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.component12|component12(){}[0]
    final fun component13(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.component13|component13(){}[0]
    final fun component14(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.component14|component14(){}[0]
    final fun component15(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.component15|component15(){}[0]
    final fun component2(): dev.sargunv.mobilitydata.gtfs.schedule/BookingType // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.component2|component2(){}[0]
    final fun component3(): kotlin.time/Duration? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.component3|component3(){}[0]
    final fun component4(): kotlin.time/Duration? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.component4|component4(){}[0]
    final fun component5(): kotlin/Int? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.component5|component5(){}[0]
    final fun component6(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.component6|component6(){}[0]
    final fun component7(): kotlin/Int? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.component7|component7(){}[0]
    final fun component8(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.component8|component8(){}[0]
    final fun component9(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., dev.sargunv.mobilitydata.gtfs.schedule/BookingType = ..., kotlin.time/Duration? = ..., kotlin.time/Duration? = ..., kotlin/Int? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., kotlin/Int? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gtfs.schedule/BookingRule // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.copy|copy(kotlin.String;dev.sargunv.mobilitydata.gtfs.schedule.BookingType;kotlin.time.Duration?;kotlin.time.Duration?;kotlin.Int?;dev.sargunv.mobilitydata.utils.ServiceTime?;kotlin.Int?;dev.sargunv.mobilitydata.utils.ServiceTime?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/BookingRule> { // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/BookingRule // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/BookingRule) // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.BookingRule){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/BookingRule> // dev.sargunv.mobilitydata.gtfs.schedule/BookingRule.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute { // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute|null[0]
    constructor <init>(kotlin/String, kotlin/Double, kotlin/String, dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod, kotlin/Int?, kotlin/String? = ..., kotlin.time/Duration? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.<init>|<init>(kotlin.String;kotlin.Double;kotlin.String;dev.sargunv.mobilitydata.gtfs.schedule.PaymentMethod;kotlin.Int?;kotlin.String?;kotlin.time.Duration?){}[0]

    final val agencyId // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.agencyId|{}agencyId[0]
        final fun <get-agencyId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.agencyId.<get-agencyId>|<get-agencyId>(){}[0]
    final val currencyType // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.currencyType|{}currencyType[0]
        final fun <get-currencyType>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.currencyType.<get-currencyType>|<get-currencyType>(){}[0]
    final val fareId // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.fareId|{}fareId[0]
        final fun <get-fareId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.fareId.<get-fareId>|<get-fareId>(){}[0]
    final val paymentMethod // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.paymentMethod|{}paymentMethod[0]
        final fun <get-paymentMethod>(): dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.paymentMethod.<get-paymentMethod>|<get-paymentMethod>(){}[0]
    final val price // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.price|{}price[0]
        final fun <get-price>(): kotlin/Double // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.price.<get-price>|<get-price>(){}[0]
    final val transferDuration // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.transferDuration|{}transferDuration[0]
        final fun <get-transferDuration>(): kotlin.time/Duration? // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.transferDuration.<get-transferDuration>|<get-transferDuration>(){}[0]
    final val transfers // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.transfers|{}transfers[0]
        final fun <get-transfers>(): kotlin/Int? // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.transfers.<get-transfers>|<get-transfers>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.component1|component1(){}[0]
    final fun component2(): kotlin/Double // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.component2|component2(){}[0]
    final fun component3(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.component3|component3(){}[0]
    final fun component4(): dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.component4|component4(){}[0]
    final fun component5(): kotlin/Int? // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.component5|component5(){}[0]
    final fun component6(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.component6|component6(){}[0]
    final fun component7(): kotlin.time/Duration? // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.component7|component7(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Double = ..., kotlin/String = ..., dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin.time/Duration? = ...): dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.copy|copy(kotlin.String;kotlin.Double;kotlin.String;dev.sargunv.mobilitydata.gtfs.schedule.PaymentMethod;kotlin.Int?;kotlin.String?;kotlin.time.Duration?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute> { // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute) // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.FareAttribute){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute> // dev.sargunv.mobilitydata.gtfs.schedule/FareAttribute.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule { // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.<init>|<init>(kotlin.String;kotlin.String;kotlin.String?;kotlin.String?){}[0]

    final val fromNetworkId // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.fromNetworkId|{}fromNetworkId[0]
        final fun <get-fromNetworkId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.fromNetworkId.<get-fromNetworkId>|<get-fromNetworkId>(){}[0]
    final val fromStopId // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.fromStopId|{}fromStopId[0]
        final fun <get-fromStopId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.fromStopId.<get-fromStopId>|<get-fromStopId>(){}[0]
    final val toNetworkId // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.toNetworkId|{}toNetworkId[0]
        final fun <get-toNetworkId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.toNetworkId.<get-toNetworkId>|<get-toNetworkId>(){}[0]
    final val toStopId // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.toStopId|{}toStopId[0]
        final fun <get-toStopId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.toStopId.<get-toStopId>|<get-toStopId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.component1|component1(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.component2|component2(){}[0]
    final fun component3(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.component3|component3(){}[0]
    final fun component4(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.component4|component4(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.copy|copy(kotlin.String;kotlin.String;kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule> { // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule) // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.FareLegJoinRule){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule> // dev.sargunv.mobilitydata.gtfs.schedule/FareLegJoinRule.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule { // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String, kotlin/Int? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.<init>|<init>(kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String;kotlin.Int?){}[0]

    final val fareProductId // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.fareProductId|{}fareProductId[0]
        final fun <get-fareProductId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.fareProductId.<get-fareProductId>|<get-fareProductId>(){}[0]
    final val fromAreaId // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.fromAreaId|{}fromAreaId[0]
        final fun <get-fromAreaId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.fromAreaId.<get-fromAreaId>|<get-fromAreaId>(){}[0]
    final val fromTimeframeGroupId // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.fromTimeframeGroupId|{}fromTimeframeGroupId[0]
        final fun <get-fromTimeframeGroupId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.fromTimeframeGroupId.<get-fromTimeframeGroupId>|<get-fromTimeframeGroupId>(){}[0]
    final val legGroupId // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.legGroupId|{}legGroupId[0]
        final fun <get-legGroupId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.legGroupId.<get-legGroupId>|<get-legGroupId>(){}[0]
    final val networkId // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.networkId|{}networkId[0]
        final fun <get-networkId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.networkId.<get-networkId>|<get-networkId>(){}[0]
    final val rulePriority // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.rulePriority|{}rulePriority[0]
        final fun <get-rulePriority>(): kotlin/Int? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.rulePriority.<get-rulePriority>|<get-rulePriority>(){}[0]
    final val toAreaId // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.toAreaId|{}toAreaId[0]
        final fun <get-toAreaId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.toAreaId.<get-toAreaId>|<get-toAreaId>(){}[0]
    final val toTimeframeGroupId // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.toTimeframeGroupId|{}toTimeframeGroupId[0]
        final fun <get-toTimeframeGroupId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.toTimeframeGroupId.<get-toTimeframeGroupId>|<get-toTimeframeGroupId>(){}[0]

    final fun component1(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.component1|component1(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.component2|component2(){}[0]
    final fun component3(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.component3|component3(){}[0]
    final fun component4(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.component4|component4(){}[0]
    final fun component5(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.component5|component5(){}[0]
    final fun component6(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.component6|component6(){}[0]
    final fun component7(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.component7|component7(){}[0]
    final fun component8(): kotlin/Int? // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.component8|component8(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin/Int? = ...): dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.copy|copy(kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule> { // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule) // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.FareLegRule){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule> // dev.sargunv.mobilitydata.gtfs.schedule/FareLegRule.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/FareMedia { // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType) // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.<init>|<init>(kotlin.String;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.FareMediaType){}[0]

    final val fareMediaId // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.fareMediaId|{}fareMediaId[0]
        final fun <get-fareMediaId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.fareMediaId.<get-fareMediaId>|<get-fareMediaId>(){}[0]
    final val fareMediaName // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.fareMediaName|{}fareMediaName[0]
        final fun <get-fareMediaName>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.fareMediaName.<get-fareMediaName>|<get-fareMediaName>(){}[0]
    final val fareMediaType // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.fareMediaType|{}fareMediaType[0]
        final fun <get-fareMediaType>(): dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.fareMediaType.<get-fareMediaType>|<get-fareMediaType>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.component1|component1(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.component2|component2(){}[0]
    final fun component3(): dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.component3|component3(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType = ...): dev.sargunv.mobilitydata.gtfs.schedule/FareMedia // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.copy|copy(kotlin.String;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.FareMediaType){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareMedia> { // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/FareMedia // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/FareMedia) // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.FareMedia){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareMedia> // dev.sargunv.mobilitydata.gtfs.schedule/FareMedia.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/FareProduct { // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Double, kotlin/String) // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.<init>|<init>(kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Double;kotlin.String){}[0]

    final val amount // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.amount|{}amount[0]
        final fun <get-amount>(): kotlin/Double // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.amount.<get-amount>|<get-amount>(){}[0]
    final val currency // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.currency|{}currency[0]
        final fun <get-currency>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.currency.<get-currency>|<get-currency>(){}[0]
    final val fareMediaId // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.fareMediaId|{}fareMediaId[0]
        final fun <get-fareMediaId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.fareMediaId.<get-fareMediaId>|<get-fareMediaId>(){}[0]
    final val fareProductId // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.fareProductId|{}fareProductId[0]
        final fun <get-fareProductId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.fareProductId.<get-fareProductId>|<get-fareProductId>(){}[0]
    final val fareProductName // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.fareProductName|{}fareProductName[0]
        final fun <get-fareProductName>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.fareProductName.<get-fareProductName>|<get-fareProductName>(){}[0]
    final val riderCategoryId // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.riderCategoryId|{}riderCategoryId[0]
        final fun <get-riderCategoryId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.riderCategoryId.<get-riderCategoryId>|<get-riderCategoryId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.component1|component1(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.component2|component2(){}[0]
    final fun component3(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.component3|component3(){}[0]
    final fun component4(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.component4|component4(){}[0]
    final fun component5(): kotlin/Double // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.component5|component5(){}[0]
    final fun component6(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.component6|component6(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Double = ..., kotlin/String = ...): dev.sargunv.mobilitydata.gtfs.schedule/FareProduct // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.copy|copy(kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Double;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareProduct> { // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/FareProduct // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/FareProduct) // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.FareProduct){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareProduct> // dev.sargunv.mobilitydata.gtfs.schedule/FareProduct.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/FareRule { // dev.sargunv.mobilitydata.gtfs.schedule/FareRule|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.<init>|<init>(kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?){}[0]

    final val containsId // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.containsId|{}containsId[0]
        final fun <get-containsId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.containsId.<get-containsId>|<get-containsId>(){}[0]
    final val destinationId // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.destinationId|{}destinationId[0]
        final fun <get-destinationId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.destinationId.<get-destinationId>|<get-destinationId>(){}[0]
    final val fareId // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.fareId|{}fareId[0]
        final fun <get-fareId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.fareId.<get-fareId>|<get-fareId>(){}[0]
    final val originId // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.originId|{}originId[0]
        final fun <get-originId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.originId.<get-originId>|<get-originId>(){}[0]
    final val routeId // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.routeId|{}routeId[0]
        final fun <get-routeId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.routeId.<get-routeId>|<get-routeId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.component1|component1(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.component2|component2(){}[0]
    final fun component3(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.component3|component3(){}[0]
    final fun component4(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.component4|component4(){}[0]
    final fun component5(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.component5|component5(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gtfs.schedule/FareRule // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.copy|copy(kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareRule> { // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/FareRule // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/FareRule) // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.FareRule){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareRule> // dev.sargunv.mobilitydata.gtfs.schedule/FareRule.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule { // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin.time/Duration? = ..., dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType? = ..., dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType, kotlin/String? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.<init>|<init>(kotlin.String?;kotlin.String?;kotlin.Int?;kotlin.time.Duration?;dev.sargunv.mobilitydata.gtfs.schedule.DurationLimitType?;dev.sargunv.mobilitydata.gtfs.schedule.FareTransferType;kotlin.String?){}[0]

    final val durationLimit // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.durationLimit|{}durationLimit[0]
        final fun <get-durationLimit>(): kotlin.time/Duration? // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.durationLimit.<get-durationLimit>|<get-durationLimit>(){}[0]
    final val durationLimitType // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.durationLimitType|{}durationLimitType[0]
        final fun <get-durationLimitType>(): dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType? // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.durationLimitType.<get-durationLimitType>|<get-durationLimitType>(){}[0]
    final val fareProductId // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.fareProductId|{}fareProductId[0]
        final fun <get-fareProductId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.fareProductId.<get-fareProductId>|<get-fareProductId>(){}[0]
    final val fareTransferType // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.fareTransferType|{}fareTransferType[0]
        final fun <get-fareTransferType>(): dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.fareTransferType.<get-fareTransferType>|<get-fareTransferType>(){}[0]
    final val fromLegGroupId // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.fromLegGroupId|{}fromLegGroupId[0]
        final fun <get-fromLegGroupId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.fromLegGroupId.<get-fromLegGroupId>|<get-fromLegGroupId>(){}[0]
    final val toLegGroupId // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.toLegGroupId|{}toLegGroupId[0]
        final fun <get-toLegGroupId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.toLegGroupId.<get-toLegGroupId>|<get-toLegGroupId>(){}[0]
    final val transferCount // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.transferCount|{}transferCount[0]
        final fun <get-transferCount>(): kotlin/Int? // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.transferCount.<get-transferCount>|<get-transferCount>(){}[0]

    final fun component1(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.component1|component1(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.component2|component2(){}[0]
    final fun component3(): kotlin/Int? // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.component3|component3(){}[0]
    final fun component4(): kotlin.time/Duration? // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.component4|component4(){}[0]
    final fun component5(): dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType? // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.component5|component5(){}[0]
    final fun component6(): dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.component6|component6(){}[0]
    final fun component7(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.component7|component7(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin.time/Duration? = ..., dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType? = ..., dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.copy|copy(kotlin.String?;kotlin.String?;kotlin.Int?;kotlin.time.Duration?;dev.sargunv.mobilitydata.gtfs.schedule.DurationLimitType?;dev.sargunv.mobilitydata.gtfs.schedule.FareTransferType;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule> { // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule) // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.FareTransferRule){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule> // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferRule.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo { // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/String? = ..., kotlinx.datetime/LocalDate? = ..., kotlinx.datetime/LocalDate? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlinx.datetime.LocalDate?;kotlinx.datetime.LocalDate?;kotlin.String?;kotlin.String?;kotlin.String?){}[0]

    final val defaultLang // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.defaultLang|{}defaultLang[0]
        final fun <get-defaultLang>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.defaultLang.<get-defaultLang>|<get-defaultLang>(){}[0]
    final val feedContactEmail // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.feedContactEmail|{}feedContactEmail[0]
        final fun <get-feedContactEmail>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.feedContactEmail.<get-feedContactEmail>|<get-feedContactEmail>(){}[0]
    final val feedContactUrl // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.feedContactUrl|{}feedContactUrl[0]
        final fun <get-feedContactUrl>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.feedContactUrl.<get-feedContactUrl>|<get-feedContactUrl>(){}[0]
    final val feedEndDate // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.feedEndDate|{}feedEndDate[0]
        final fun <get-feedEndDate>(): kotlinx.datetime/LocalDate? // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.feedEndDate.<get-feedEndDate>|<get-feedEndDate>(){}[0]
    final val feedLang // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.feedLang|{}feedLang[0]
        final fun <get-feedLang>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.feedLang.<get-feedLang>|<get-feedLang>(){}[0]
    final val feedPublisherName // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.feedPublisherName|{}feedPublisherName[0]
        final fun <get-feedPublisherName>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.feedPublisherName.<get-feedPublisherName>|<get-feedPublisherName>(){}[0]
    final val feedPublisherUrl // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.feedPublisherUrl|{}feedPublisherUrl[0]
        final fun <get-feedPublisherUrl>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.feedPublisherUrl.<get-feedPublisherUrl>|<get-feedPublisherUrl>(){}[0]
    final val feedStartDate // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.feedStartDate|{}feedStartDate[0]
        final fun <get-feedStartDate>(): kotlinx.datetime/LocalDate? // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.feedStartDate.<get-feedStartDate>|<get-feedStartDate>(){}[0]
    final val feedVersion // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.feedVersion|{}feedVersion[0]
        final fun <get-feedVersion>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.feedVersion.<get-feedVersion>|<get-feedVersion>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.component1|component1(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.component2|component2(){}[0]
    final fun component3(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.component3|component3(){}[0]
    final fun component4(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.component4|component4(){}[0]
    final fun component5(): kotlinx.datetime/LocalDate? // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.component5|component5(){}[0]
    final fun component6(): kotlinx.datetime/LocalDate? // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.component6|component6(){}[0]
    final fun component7(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.component7|component7(){}[0]
    final fun component8(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.component8|component8(){}[0]
    final fun component9(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlinx.datetime/LocalDate? = ..., kotlinx.datetime/LocalDate? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.copy|copy(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlinx.datetime.LocalDate?;kotlinx.datetime.LocalDate?;kotlin.String?;kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo> { // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo) // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.FeedInfo){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo> // dev.sargunv.mobilitydata.gtfs.schedule/FeedInfo.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/Frequency { // dev.sargunv.mobilitydata.gtfs.schedule/Frequency|null[0]
    constructor <init>(kotlin/String, dev.sargunv.mobilitydata.utils/ServiceTime, dev.sargunv.mobilitydata.utils/ServiceTime, kotlin.time/Duration, kotlin/Boolean? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.<init>|<init>(kotlin.String;dev.sargunv.mobilitydata.utils.ServiceTime;dev.sargunv.mobilitydata.utils.ServiceTime;kotlin.time.Duration;kotlin.Boolean?){}[0]

    final val endTime // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.endTime|{}endTime[0]
        final fun <get-endTime>(): dev.sargunv.mobilitydata.utils/ServiceTime // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.endTime.<get-endTime>|<get-endTime>(){}[0]
    final val exactTimes // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.exactTimes|{}exactTimes[0]
        final fun <get-exactTimes>(): kotlin/Boolean? // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.exactTimes.<get-exactTimes>|<get-exactTimes>(){}[0]
    final val headwaySecs // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.headwaySecs|{}headwaySecs[0]
        final fun <get-headwaySecs>(): kotlin.time/Duration // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.headwaySecs.<get-headwaySecs>|<get-headwaySecs>(){}[0]
    final val startTime // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.startTime|{}startTime[0]
        final fun <get-startTime>(): dev.sargunv.mobilitydata.utils/ServiceTime // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.startTime.<get-startTime>|<get-startTime>(){}[0]
    final val tripId // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.tripId|{}tripId[0]
        final fun <get-tripId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.tripId.<get-tripId>|<get-tripId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.component1|component1(){}[0]
    final fun component2(): dev.sargunv.mobilitydata.utils/ServiceTime // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.component2|component2(){}[0]
    final fun component3(): dev.sargunv.mobilitydata.utils/ServiceTime // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.component3|component3(){}[0]
    final fun component4(): kotlin.time/Duration // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.component5|component5(){}[0]
    final fun copy(kotlin/String = ..., dev.sargunv.mobilitydata.utils/ServiceTime = ..., dev.sargunv.mobilitydata.utils/ServiceTime = ..., kotlin.time/Duration = ..., kotlin/Boolean? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Frequency // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.copy|copy(kotlin.String;dev.sargunv.mobilitydata.utils.ServiceTime;dev.sargunv.mobilitydata.utils.ServiceTime;kotlin.time.Duration;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Frequency> { // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Frequency // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Frequency) // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Frequency){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Frequency> // dev.sargunv.mobilitydata.gtfs.schedule/Frequency.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/Level { // dev.sargunv.mobilitydata.gtfs.schedule/Level|null[0]
    constructor <init>(kotlin/String, kotlin/Double, kotlin/String? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Level.<init>|<init>(kotlin.String;kotlin.Double;kotlin.String?){}[0]

    final val levelId // dev.sargunv.mobilitydata.gtfs.schedule/Level.levelId|{}levelId[0]
        final fun <get-levelId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Level.levelId.<get-levelId>|<get-levelId>(){}[0]
    final val levelIndex // dev.sargunv.mobilitydata.gtfs.schedule/Level.levelIndex|{}levelIndex[0]
        final fun <get-levelIndex>(): kotlin/Double // dev.sargunv.mobilitydata.gtfs.schedule/Level.levelIndex.<get-levelIndex>|<get-levelIndex>(){}[0]
    final val levelName // dev.sargunv.mobilitydata.gtfs.schedule/Level.levelName|{}levelName[0]
        final fun <get-levelName>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Level.levelName.<get-levelName>|<get-levelName>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Level.component1|component1(){}[0]
    final fun component2(): kotlin/Double // dev.sargunv.mobilitydata.gtfs.schedule/Level.component2|component2(){}[0]
    final fun component3(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Level.component3|component3(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Double = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Level // dev.sargunv.mobilitydata.gtfs.schedule/Level.copy|copy(kotlin.String;kotlin.Double;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Level.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Level.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Level.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Level> { // dev.sargunv.mobilitydata.gtfs.schedule/Level.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Level.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Level.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Level.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Level // dev.sargunv.mobilitydata.gtfs.schedule/Level.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Level) // dev.sargunv.mobilitydata.gtfs.schedule/Level.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Level){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Level.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Level> // dev.sargunv.mobilitydata.gtfs.schedule/Level.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup { // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.<init>|<init>(kotlin.String;kotlin.String?){}[0]

    final val locationGroupId // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.locationGroupId|{}locationGroupId[0]
        final fun <get-locationGroupId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.locationGroupId.<get-locationGroupId>|<get-locationGroupId>(){}[0]
    final val locationGroupName // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.locationGroupName|{}locationGroupName[0]
        final fun <get-locationGroupName>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.locationGroupName.<get-locationGroupName>|<get-locationGroupName>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.component1|component1(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.copy|copy(kotlin.String;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup> { // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup) // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.LocationGroup){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup> // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroup.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop { // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop|null[0]
    constructor <init>(kotlin/String, kotlin/String) // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.<init>|<init>(kotlin.String;kotlin.String){}[0]

    final val locationGroupId // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.locationGroupId|{}locationGroupId[0]
        final fun <get-locationGroupId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.locationGroupId.<get-locationGroupId>|<get-locationGroupId>(){}[0]
    final val stopId // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.stopId|{}stopId[0]
        final fun <get-stopId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.stopId.<get-stopId>|<get-stopId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.component1|component1(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ...): dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.copy|copy(kotlin.String;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop> { // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop) // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.LocationGroupStop){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop> // dev.sargunv.mobilitydata.gtfs.schedule/LocationGroupStop.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/Network { // dev.sargunv.mobilitydata.gtfs.schedule/Network|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Network.<init>|<init>(kotlin.String;kotlin.String?){}[0]

    final val networkId // dev.sargunv.mobilitydata.gtfs.schedule/Network.networkId|{}networkId[0]
        final fun <get-networkId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Network.networkId.<get-networkId>|<get-networkId>(){}[0]
    final val networkName // dev.sargunv.mobilitydata.gtfs.schedule/Network.networkName|{}networkName[0]
        final fun <get-networkName>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Network.networkName.<get-networkName>|<get-networkName>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Network.component1|component1(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Network.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Network // dev.sargunv.mobilitydata.gtfs.schedule/Network.copy|copy(kotlin.String;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Network.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Network.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Network.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Network> { // dev.sargunv.mobilitydata.gtfs.schedule/Network.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Network.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Network.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Network.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Network // dev.sargunv.mobilitydata.gtfs.schedule/Network.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Network) // dev.sargunv.mobilitydata.gtfs.schedule/Network.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Network){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Network.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Network> // dev.sargunv.mobilitydata.gtfs.schedule/Network.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/Pathway { // dev.sargunv.mobilitydata.gtfs.schedule/Pathway|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/String, dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode, kotlin/Boolean, kotlin/Double? = ..., kotlin.time/Duration? = ..., kotlin/Int? = ..., kotlin/Double? = ..., kotlin/Double? = ..., kotlin/String? = ..., kotlin/String? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;dev.sargunv.mobilitydata.gtfs.schedule.PathwayMode;kotlin.Boolean;kotlin.Double?;kotlin.time.Duration?;kotlin.Int?;kotlin.Double?;kotlin.Double?;kotlin.String?;kotlin.String?){}[0]

    final val fromStopId // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.fromStopId|{}fromStopId[0]
        final fun <get-fromStopId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.fromStopId.<get-fromStopId>|<get-fromStopId>(){}[0]
    final val isBidirectional // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.isBidirectional|{}isBidirectional[0]
        final fun <get-isBidirectional>(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.isBidirectional.<get-isBidirectional>|<get-isBidirectional>(){}[0]
    final val length // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.length|{}length[0]
        final fun <get-length>(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.length.<get-length>|<get-length>(){}[0]
    final val maxSlope // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.maxSlope|{}maxSlope[0]
        final fun <get-maxSlope>(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.maxSlope.<get-maxSlope>|<get-maxSlope>(){}[0]
    final val minWidth // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.minWidth|{}minWidth[0]
        final fun <get-minWidth>(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.minWidth.<get-minWidth>|<get-minWidth>(){}[0]
    final val pathwayId // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.pathwayId|{}pathwayId[0]
        final fun <get-pathwayId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.pathwayId.<get-pathwayId>|<get-pathwayId>(){}[0]
    final val pathwayMode // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.pathwayMode|{}pathwayMode[0]
        final fun <get-pathwayMode>(): dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.pathwayMode.<get-pathwayMode>|<get-pathwayMode>(){}[0]
    final val reversedSignpostedAs // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.reversedSignpostedAs|{}reversedSignpostedAs[0]
        final fun <get-reversedSignpostedAs>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.reversedSignpostedAs.<get-reversedSignpostedAs>|<get-reversedSignpostedAs>(){}[0]
    final val signpostedAs // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.signpostedAs|{}signpostedAs[0]
        final fun <get-signpostedAs>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.signpostedAs.<get-signpostedAs>|<get-signpostedAs>(){}[0]
    final val stairCount // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.stairCount|{}stairCount[0]
        final fun <get-stairCount>(): kotlin/Int? // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.stairCount.<get-stairCount>|<get-stairCount>(){}[0]
    final val toStopId // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.toStopId|{}toStopId[0]
        final fun <get-toStopId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.toStopId.<get-toStopId>|<get-toStopId>(){}[0]
    final val traversalTime // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.traversalTime|{}traversalTime[0]
        final fun <get-traversalTime>(): kotlin.time/Duration? // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.traversalTime.<get-traversalTime>|<get-traversalTime>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.component1|component1(){}[0]
    final fun component10(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.component10|component10(){}[0]
    final fun component11(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.component11|component11(){}[0]
    final fun component12(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.component12|component12(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.component2|component2(){}[0]
    final fun component3(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.component3|component3(){}[0]
    final fun component4(): dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.component5|component5(){}[0]
    final fun component6(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.component6|component6(){}[0]
    final fun component7(): kotlin.time/Duration? // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.component7|component7(){}[0]
    final fun component8(): kotlin/Int? // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.component8|component8(){}[0]
    final fun component9(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode = ..., kotlin/Boolean = ..., kotlin/Double? = ..., kotlin.time/Duration? = ..., kotlin/Int? = ..., kotlin/Double? = ..., kotlin/Double? = ..., kotlin/String? = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Pathway // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.copy|copy(kotlin.String;kotlin.String;kotlin.String;dev.sargunv.mobilitydata.gtfs.schedule.PathwayMode;kotlin.Boolean;kotlin.Double?;kotlin.time.Duration?;kotlin.Int?;kotlin.Double?;kotlin.Double?;kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Pathway> { // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Pathway // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Pathway) // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Pathway){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Pathway> // dev.sargunv.mobilitydata.gtfs.schedule/Pathway.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory { // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/Boolean, kotlin/String? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.<init>|<init>(kotlin.String;kotlin.String;kotlin.Boolean;kotlin.String?){}[0]

    final val eligibilityUrl // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.eligibilityUrl|{}eligibilityUrl[0]
        final fun <get-eligibilityUrl>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.eligibilityUrl.<get-eligibilityUrl>|<get-eligibilityUrl>(){}[0]
    final val isDefaultFareCategory // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.isDefaultFareCategory|{}isDefaultFareCategory[0]
        final fun <get-isDefaultFareCategory>(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.isDefaultFareCategory.<get-isDefaultFareCategory>|<get-isDefaultFareCategory>(){}[0]
    final val riderCategoryId // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.riderCategoryId|{}riderCategoryId[0]
        final fun <get-riderCategoryId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.riderCategoryId.<get-riderCategoryId>|<get-riderCategoryId>(){}[0]
    final val riderCategoryName // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.riderCategoryName|{}riderCategoryName[0]
        final fun <get-riderCategoryName>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.riderCategoryName.<get-riderCategoryName>|<get-riderCategoryName>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.component1|component1(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.component3|component3(){}[0]
    final fun component4(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.component4|component4(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/Boolean = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.copy|copy(kotlin.String;kotlin.String;kotlin.Boolean;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory> { // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory) // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.RiderCategory){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory> // dev.sargunv.mobilitydata.gtfs.schedule/RiderCategory.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/Route { // dev.sargunv.mobilitydata.gtfs.schedule/Route|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/RouteType, kotlin/String? = ..., dev.sargunv.mobilitydata.utils/RgbColor? = ..., dev.sargunv.mobilitydata.utils/RgbColor? = ..., kotlin/Int? = ..., dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? = ..., dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Route.<init>|<init>(kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.RouteType;kotlin.String?;dev.sargunv.mobilitydata.utils.RgbColor?;dev.sargunv.mobilitydata.utils.RgbColor?;kotlin.Int?;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff?;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?){}[0]

    final val agencyId // dev.sargunv.mobilitydata.gtfs.schedule/Route.agencyId|{}agencyId[0]
        final fun <get-agencyId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.agencyId.<get-agencyId>|<get-agencyId>(){}[0]
    final val cemvSupport // dev.sargunv.mobilitydata.gtfs.schedule/Route.cemvSupport|{}cemvSupport[0]
        final fun <get-cemvSupport>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Route.cemvSupport.<get-cemvSupport>|<get-cemvSupport>(){}[0]
    final val continuousDropOff // dev.sargunv.mobilitydata.gtfs.schedule/Route.continuousDropOff|{}continuousDropOff[0]
        final fun <get-continuousDropOff>(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? // dev.sargunv.mobilitydata.gtfs.schedule/Route.continuousDropOff.<get-continuousDropOff>|<get-continuousDropOff>(){}[0]
    final val continuousPickup // dev.sargunv.mobilitydata.gtfs.schedule/Route.continuousPickup|{}continuousPickup[0]
        final fun <get-continuousPickup>(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? // dev.sargunv.mobilitydata.gtfs.schedule/Route.continuousPickup.<get-continuousPickup>|<get-continuousPickup>(){}[0]
    final val networkId // dev.sargunv.mobilitydata.gtfs.schedule/Route.networkId|{}networkId[0]
        final fun <get-networkId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.networkId.<get-networkId>|<get-networkId>(){}[0]
    final val routeColor // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeColor|{}routeColor[0]
        final fun <get-routeColor>(): dev.sargunv.mobilitydata.utils/RgbColor? // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeColor.<get-routeColor>|<get-routeColor>(){}[0]
    final val routeDesc // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeDesc|{}routeDesc[0]
        final fun <get-routeDesc>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeDesc.<get-routeDesc>|<get-routeDesc>(){}[0]
    final val routeId // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeId|{}routeId[0]
        final fun <get-routeId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeId.<get-routeId>|<get-routeId>(){}[0]
    final val routeLongName // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeLongName|{}routeLongName[0]
        final fun <get-routeLongName>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeLongName.<get-routeLongName>|<get-routeLongName>(){}[0]
    final val routeShortName // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeShortName|{}routeShortName[0]
        final fun <get-routeShortName>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeShortName.<get-routeShortName>|<get-routeShortName>(){}[0]
    final val routeSortOrder // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeSortOrder|{}routeSortOrder[0]
        final fun <get-routeSortOrder>(): kotlin/Int? // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeSortOrder.<get-routeSortOrder>|<get-routeSortOrder>(){}[0]
    final val routeTextColor // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeTextColor|{}routeTextColor[0]
        final fun <get-routeTextColor>(): dev.sargunv.mobilitydata.utils/RgbColor? // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeTextColor.<get-routeTextColor>|<get-routeTextColor>(){}[0]
    final val routeType // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeType|{}routeType[0]
        final fun <get-routeType>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeType.<get-routeType>|<get-routeType>(){}[0]
    final val routeUrl // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeUrl|{}routeUrl[0]
        final fun <get-routeUrl>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.routeUrl.<get-routeUrl>|<get-routeUrl>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Route.component1|component1(){}[0]
    final fun component10(): kotlin/Int? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component10|component10(){}[0]
    final fun component11(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component11|component11(){}[0]
    final fun component12(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component12|component12(){}[0]
    final fun component13(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component13|component13(){}[0]
    final fun component14(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component14|component14(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component2|component2(){}[0]
    final fun component3(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component3|component3(){}[0]
    final fun component4(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component4|component4(){}[0]
    final fun component5(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component5|component5(){}[0]
    final fun component6(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/Route.component6|component6(){}[0]
    final fun component7(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component7|component7(){}[0]
    final fun component8(): dev.sargunv.mobilitydata.utils/RgbColor? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component8|component8(){}[0]
    final fun component9(): dev.sargunv.mobilitydata.utils/RgbColor? // dev.sargunv.mobilitydata.gtfs.schedule/Route.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/RouteType = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.utils/RgbColor? = ..., dev.sargunv.mobilitydata.utils/RgbColor? = ..., kotlin/Int? = ..., dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? = ..., dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Route // dev.sargunv.mobilitydata.gtfs.schedule/Route.copy|copy(kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.RouteType;kotlin.String?;dev.sargunv.mobilitydata.utils.RgbColor?;dev.sargunv.mobilitydata.utils.RgbColor?;kotlin.Int?;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff?;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Route.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Route.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Route.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Route> { // dev.sargunv.mobilitydata.gtfs.schedule/Route.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Route.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Route.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Route.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Route // dev.sargunv.mobilitydata.gtfs.schedule/Route.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Route) // dev.sargunv.mobilitydata.gtfs.schedule/Route.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Route){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Route.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Route> // dev.sargunv.mobilitydata.gtfs.schedule/Route.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork { // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork|null[0]
    constructor <init>(kotlin/String, kotlin/String) // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.<init>|<init>(kotlin.String;kotlin.String){}[0]

    final val networkId // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.networkId|{}networkId[0]
        final fun <get-networkId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.networkId.<get-networkId>|<get-networkId>(){}[0]
    final val routeId // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.routeId|{}routeId[0]
        final fun <get-routeId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.routeId.<get-routeId>|<get-routeId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.component1|component1(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ...): dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.copy|copy(kotlin.String;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork> { // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork) // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.RouteNetwork){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork> // dev.sargunv.mobilitydata.gtfs.schedule/RouteNetwork.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar { // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar|null[0]
    constructor <init>(kotlin/String, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlinx.datetime/LocalDate, kotlinx.datetime/LocalDate) // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.<init>|<init>(kotlin.String;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlinx.datetime.LocalDate;kotlinx.datetime.LocalDate){}[0]

    final val endDate // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.endDate|{}endDate[0]
        final fun <get-endDate>(): kotlinx.datetime/LocalDate // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.endDate.<get-endDate>|<get-endDate>(){}[0]
    final val friday // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.friday|{}friday[0]
        final fun <get-friday>(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.friday.<get-friday>|<get-friday>(){}[0]
    final val monday // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.monday|{}monday[0]
        final fun <get-monday>(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.monday.<get-monday>|<get-monday>(){}[0]
    final val saturday // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.saturday|{}saturday[0]
        final fun <get-saturday>(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.saturday.<get-saturday>|<get-saturday>(){}[0]
    final val serviceId // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.serviceId|{}serviceId[0]
        final fun <get-serviceId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.serviceId.<get-serviceId>|<get-serviceId>(){}[0]
    final val startDate // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.startDate|{}startDate[0]
        final fun <get-startDate>(): kotlinx.datetime/LocalDate // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.startDate.<get-startDate>|<get-startDate>(){}[0]
    final val sunday // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.sunday|{}sunday[0]
        final fun <get-sunday>(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.sunday.<get-sunday>|<get-sunday>(){}[0]
    final val thursday // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.thursday|{}thursday[0]
        final fun <get-thursday>(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.thursday.<get-thursday>|<get-thursday>(){}[0]
    final val tuesday // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.tuesday|{}tuesday[0]
        final fun <get-tuesday>(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.tuesday.<get-tuesday>|<get-tuesday>(){}[0]
    final val wednesday // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.wednesday|{}wednesday[0]
        final fun <get-wednesday>(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.wednesday.<get-wednesday>|<get-wednesday>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component1|component1(){}[0]
    final fun component10(): kotlinx.datetime/LocalDate // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component10|component10(){}[0]
    final fun component2(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component8|component8(){}[0]
    final fun component9(): kotlinx.datetime/LocalDate // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlinx.datetime/LocalDate = ..., kotlinx.datetime/LocalDate = ...): dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.copy|copy(kotlin.String;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlinx.datetime.LocalDate;kotlinx.datetime.LocalDate){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar> { // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar) // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.ServiceCalendar){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar> // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendar.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride { // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride|null[0]
    constructor <init>(kotlin/String, kotlinx.datetime/LocalDate, dev.sargunv.mobilitydata.gtfs.schedule/OverrideType) // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.<init>|<init>(kotlin.String;kotlinx.datetime.LocalDate;dev.sargunv.mobilitydata.gtfs.schedule.OverrideType){}[0]

    final val date // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.date|{}date[0]
        final fun <get-date>(): kotlinx.datetime/LocalDate // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.date.<get-date>|<get-date>(){}[0]
    final val overrideType // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.overrideType|{}overrideType[0]
        final fun <get-overrideType>(): dev.sargunv.mobilitydata.gtfs.schedule/OverrideType // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.overrideType.<get-overrideType>|<get-overrideType>(){}[0]
    final val serviceId // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.serviceId|{}serviceId[0]
        final fun <get-serviceId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.serviceId.<get-serviceId>|<get-serviceId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.component1|component1(){}[0]
    final fun component2(): kotlinx.datetime/LocalDate // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.component2|component2(){}[0]
    final fun component3(): dev.sargunv.mobilitydata.gtfs.schedule/OverrideType // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.component3|component3(){}[0]
    final fun copy(kotlin/String = ..., kotlinx.datetime/LocalDate = ..., dev.sargunv.mobilitydata.gtfs.schedule/OverrideType = ...): dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.copy|copy(kotlin.String;kotlinx.datetime.LocalDate;dev.sargunv.mobilitydata.gtfs.schedule.OverrideType){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride> { // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride) // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.ServiceCalendarOverride){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride> // dev.sargunv.mobilitydata.gtfs.schedule/ServiceCalendarOverride.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/Shape { // dev.sargunv.mobilitydata.gtfs.schedule/Shape|null[0]
    constructor <init>(kotlin/String, kotlin/Double, kotlin/Double, kotlin/Int, kotlin/Double? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Shape.<init>|<init>(kotlin.String;kotlin.Double;kotlin.Double;kotlin.Int;kotlin.Double?){}[0]

    final val shapeDistTraveled // dev.sargunv.mobilitydata.gtfs.schedule/Shape.shapeDistTraveled|{}shapeDistTraveled[0]
        final fun <get-shapeDistTraveled>(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/Shape.shapeDistTraveled.<get-shapeDistTraveled>|<get-shapeDistTraveled>(){}[0]
    final val shapeId // dev.sargunv.mobilitydata.gtfs.schedule/Shape.shapeId|{}shapeId[0]
        final fun <get-shapeId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Shape.shapeId.<get-shapeId>|<get-shapeId>(){}[0]
    final val shapePointLatitude // dev.sargunv.mobilitydata.gtfs.schedule/Shape.shapePointLatitude|{}shapePointLatitude[0]
        final fun <get-shapePointLatitude>(): kotlin/Double // dev.sargunv.mobilitydata.gtfs.schedule/Shape.shapePointLatitude.<get-shapePointLatitude>|<get-shapePointLatitude>(){}[0]
    final val shapePointLongitude // dev.sargunv.mobilitydata.gtfs.schedule/Shape.shapePointLongitude|{}shapePointLongitude[0]
        final fun <get-shapePointLongitude>(): kotlin/Double // dev.sargunv.mobilitydata.gtfs.schedule/Shape.shapePointLongitude.<get-shapePointLongitude>|<get-shapePointLongitude>(){}[0]
    final val shapePointSequence // dev.sargunv.mobilitydata.gtfs.schedule/Shape.shapePointSequence|{}shapePointSequence[0]
        final fun <get-shapePointSequence>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Shape.shapePointSequence.<get-shapePointSequence>|<get-shapePointSequence>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Shape.component1|component1(){}[0]
    final fun component2(): kotlin/Double // dev.sargunv.mobilitydata.gtfs.schedule/Shape.component2|component2(){}[0]
    final fun component3(): kotlin/Double // dev.sargunv.mobilitydata.gtfs.schedule/Shape.component3|component3(){}[0]
    final fun component4(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Shape.component4|component4(){}[0]
    final fun component5(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/Shape.component5|component5(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Double = ..., kotlin/Double = ..., kotlin/Int = ..., kotlin/Double? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Shape // dev.sargunv.mobilitydata.gtfs.schedule/Shape.copy|copy(kotlin.String;kotlin.Double;kotlin.Double;kotlin.Int;kotlin.Double?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Shape.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Shape.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Shape.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Shape> { // dev.sargunv.mobilitydata.gtfs.schedule/Shape.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Shape.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Shape.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Shape.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Shape // dev.sargunv.mobilitydata.gtfs.schedule/Shape.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Shape) // dev.sargunv.mobilitydata.gtfs.schedule/Shape.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Shape){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Shape.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Shape> // dev.sargunv.mobilitydata.gtfs.schedule/Shape.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/Stop { // dev.sargunv.mobilitydata.gtfs.schedule/Stop|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Double? = ..., kotlin/Double? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/LocationType? = ..., kotlin/String? = ..., kotlinx.datetime/TimeZone? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/StopAccess? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Stop.<init>|<init>(kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Double?;kotlin.Double?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.LocationType?;kotlin.String?;kotlinx.datetime.TimeZone?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.StopAccess?){}[0]

    final val levelId // dev.sargunv.mobilitydata.gtfs.schedule/Stop.levelId|{}levelId[0]
        final fun <get-levelId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.levelId.<get-levelId>|<get-levelId>(){}[0]
    final val locationType // dev.sargunv.mobilitydata.gtfs.schedule/Stop.locationType|{}locationType[0]
        final fun <get-locationType>(): dev.sargunv.mobilitydata.gtfs.schedule/LocationType? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.locationType.<get-locationType>|<get-locationType>(){}[0]
    final val parentStation // dev.sargunv.mobilitydata.gtfs.schedule/Stop.parentStation|{}parentStation[0]
        final fun <get-parentStation>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.parentStation.<get-parentStation>|<get-parentStation>(){}[0]
    final val platformCode // dev.sargunv.mobilitydata.gtfs.schedule/Stop.platformCode|{}platformCode[0]
        final fun <get-platformCode>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.platformCode.<get-platformCode>|<get-platformCode>(){}[0]
    final val stopAccess // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopAccess|{}stopAccess[0]
        final fun <get-stopAccess>(): dev.sargunv.mobilitydata.gtfs.schedule/StopAccess? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopAccess.<get-stopAccess>|<get-stopAccess>(){}[0]
    final val stopCode // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopCode|{}stopCode[0]
        final fun <get-stopCode>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopCode.<get-stopCode>|<get-stopCode>(){}[0]
    final val stopDescription // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopDescription|{}stopDescription[0]
        final fun <get-stopDescription>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopDescription.<get-stopDescription>|<get-stopDescription>(){}[0]
    final val stopId // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopId|{}stopId[0]
        final fun <get-stopId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopId.<get-stopId>|<get-stopId>(){}[0]
    final val stopLatitude // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopLatitude|{}stopLatitude[0]
        final fun <get-stopLatitude>(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopLatitude.<get-stopLatitude>|<get-stopLatitude>(){}[0]
    final val stopLongitude // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopLongitude|{}stopLongitude[0]
        final fun <get-stopLongitude>(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopLongitude.<get-stopLongitude>|<get-stopLongitude>(){}[0]
    final val stopName // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopName|{}stopName[0]
        final fun <get-stopName>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopName.<get-stopName>|<get-stopName>(){}[0]
    final val stopTimezone // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopTimezone|{}stopTimezone[0]
        final fun <get-stopTimezone>(): kotlinx.datetime/TimeZone? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopTimezone.<get-stopTimezone>|<get-stopTimezone>(){}[0]
    final val stopUrl // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopUrl|{}stopUrl[0]
        final fun <get-stopUrl>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.stopUrl.<get-stopUrl>|<get-stopUrl>(){}[0]
    final val ttsStopName // dev.sargunv.mobilitydata.gtfs.schedule/Stop.ttsStopName|{}ttsStopName[0]
        final fun <get-ttsStopName>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.ttsStopName.<get-ttsStopName>|<get-ttsStopName>(){}[0]
    final val wheelchairBoarding // dev.sargunv.mobilitydata.gtfs.schedule/Stop.wheelchairBoarding|{}wheelchairBoarding[0]
        final fun <get-wheelchairBoarding>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.wheelchairBoarding.<get-wheelchairBoarding>|<get-wheelchairBoarding>(){}[0]
    final val zoneId // dev.sargunv.mobilitydata.gtfs.schedule/Stop.zoneId|{}zoneId[0]
        final fun <get-zoneId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.zoneId.<get-zoneId>|<get-zoneId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component1|component1(){}[0]
    final fun component10(): dev.sargunv.mobilitydata.gtfs.schedule/LocationType? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component10|component10(){}[0]
    final fun component11(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component11|component11(){}[0]
    final fun component12(): kotlinx.datetime/TimeZone? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component12|component12(){}[0]
    final fun component13(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component13|component13(){}[0]
    final fun component14(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component14|component14(){}[0]
    final fun component15(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component15|component15(){}[0]
    final fun component16(): dev.sargunv.mobilitydata.gtfs.schedule/StopAccess? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component16|component16(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component2|component2(){}[0]
    final fun component3(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component3|component3(){}[0]
    final fun component4(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component4|component4(){}[0]
    final fun component5(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component5|component5(){}[0]
    final fun component6(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component6|component6(){}[0]
    final fun component7(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component7|component7(){}[0]
    final fun component8(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component8|component8(){}[0]
    final fun component9(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Stop.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Double? = ..., kotlin/Double? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/LocationType? = ..., kotlin/String? = ..., kotlinx.datetime/TimeZone? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/StopAccess? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Stop // dev.sargunv.mobilitydata.gtfs.schedule/Stop.copy|copy(kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Double?;kotlin.Double?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.LocationType?;kotlin.String?;kotlinx.datetime.TimeZone?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.StopAccess?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Stop.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Stop.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Stop.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Stop> { // dev.sargunv.mobilitydata.gtfs.schedule/Stop.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Stop.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Stop.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Stop.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Stop // dev.sargunv.mobilitydata.gtfs.schedule/Stop.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Stop) // dev.sargunv.mobilitydata.gtfs.schedule/Stop.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Stop){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Stop.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Stop> // dev.sargunv.mobilitydata.gtfs.schedule/Stop.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/StopArea { // dev.sargunv.mobilitydata.gtfs.schedule/StopArea|null[0]
    constructor <init>(kotlin/String, kotlin/String) // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.<init>|<init>(kotlin.String;kotlin.String){}[0]

    final val areaId // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.areaId|{}areaId[0]
        final fun <get-areaId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.areaId.<get-areaId>|<get-areaId>(){}[0]
    final val stopId // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.stopId|{}stopId[0]
        final fun <get-stopId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.stopId.<get-stopId>|<get-stopId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.component1|component1(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ...): dev.sargunv.mobilitydata.gtfs.schedule/StopArea // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.copy|copy(kotlin.String;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/StopArea> { // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/StopArea // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/StopArea) // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.StopArea){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/StopArea> // dev.sargunv.mobilitydata.gtfs.schedule/StopArea.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/StopTime { // dev.sargunv.mobilitydata.gtfs.schedule/StopTime|null[0]
    constructor <init>(kotlin/String, dev.sargunv.mobilitydata.utils/ServiceTime? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/Int, kotlin/String? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff? = ..., dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff? = ..., dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? = ..., dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? = ..., kotlin/Double? = ..., dev.sargunv.mobilitydata.gtfs.schedule/Timepoint? = ..., kotlin/String? = ..., kotlin/String? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.<init>|<init>(kotlin.String;dev.sargunv.mobilitydata.utils.ServiceTime?;dev.sargunv.mobilitydata.utils.ServiceTime?;kotlin.String;kotlin.String?;kotlin.String?;kotlin.Int;kotlin.String?;dev.sargunv.mobilitydata.utils.ServiceTime?;dev.sargunv.mobilitydata.utils.ServiceTime?;dev.sargunv.mobilitydata.gtfs.schedule.PickupDropoff?;dev.sargunv.mobilitydata.gtfs.schedule.PickupDropoff?;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff?;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff?;kotlin.Double?;dev.sargunv.mobilitydata.gtfs.schedule.Timepoint?;kotlin.String?;kotlin.String?){}[0]

    final val arrivalTime // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.arrivalTime|{}arrivalTime[0]
        final fun <get-arrivalTime>(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.arrivalTime.<get-arrivalTime>|<get-arrivalTime>(){}[0]
    final val continuousDropOff // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.continuousDropOff|{}continuousDropOff[0]
        final fun <get-continuousDropOff>(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.continuousDropOff.<get-continuousDropOff>|<get-continuousDropOff>(){}[0]
    final val continuousPickup // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.continuousPickup|{}continuousPickup[0]
        final fun <get-continuousPickup>(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.continuousPickup.<get-continuousPickup>|<get-continuousPickup>(){}[0]
    final val departureTime // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.departureTime|{}departureTime[0]
        final fun <get-departureTime>(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.departureTime.<get-departureTime>|<get-departureTime>(){}[0]
    final val dropOffBookingRuleId // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.dropOffBookingRuleId|{}dropOffBookingRuleId[0]
        final fun <get-dropOffBookingRuleId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.dropOffBookingRuleId.<get-dropOffBookingRuleId>|<get-dropOffBookingRuleId>(){}[0]
    final val dropOffType // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.dropOffType|{}dropOffType[0]
        final fun <get-dropOffType>(): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.dropOffType.<get-dropOffType>|<get-dropOffType>(){}[0]
    final val endPickupDropOffWindow // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.endPickupDropOffWindow|{}endPickupDropOffWindow[0]
        final fun <get-endPickupDropOffWindow>(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.endPickupDropOffWindow.<get-endPickupDropOffWindow>|<get-endPickupDropOffWindow>(){}[0]
    final val locationGroupId // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.locationGroupId|{}locationGroupId[0]
        final fun <get-locationGroupId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.locationGroupId.<get-locationGroupId>|<get-locationGroupId>(){}[0]
    final val locationId // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.locationId|{}locationId[0]
        final fun <get-locationId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.locationId.<get-locationId>|<get-locationId>(){}[0]
    final val pickupBookingRuleId // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.pickupBookingRuleId|{}pickupBookingRuleId[0]
        final fun <get-pickupBookingRuleId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.pickupBookingRuleId.<get-pickupBookingRuleId>|<get-pickupBookingRuleId>(){}[0]
    final val pickupType // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.pickupType|{}pickupType[0]
        final fun <get-pickupType>(): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.pickupType.<get-pickupType>|<get-pickupType>(){}[0]
    final val shapeDistTraveled // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.shapeDistTraveled|{}shapeDistTraveled[0]
        final fun <get-shapeDistTraveled>(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.shapeDistTraveled.<get-shapeDistTraveled>|<get-shapeDistTraveled>(){}[0]
    final val startPickupDropOffWindow // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.startPickupDropOffWindow|{}startPickupDropOffWindow[0]
        final fun <get-startPickupDropOffWindow>(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.startPickupDropOffWindow.<get-startPickupDropOffWindow>|<get-startPickupDropOffWindow>(){}[0]
    final val stopHeadsign // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.stopHeadsign|{}stopHeadsign[0]
        final fun <get-stopHeadsign>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.stopHeadsign.<get-stopHeadsign>|<get-stopHeadsign>(){}[0]
    final val stopId // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.stopId|{}stopId[0]
        final fun <get-stopId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.stopId.<get-stopId>|<get-stopId>(){}[0]
    final val stopSequence // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.stopSequence|{}stopSequence[0]
        final fun <get-stopSequence>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.stopSequence.<get-stopSequence>|<get-stopSequence>(){}[0]
    final val timepoint // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.timepoint|{}timepoint[0]
        final fun <get-timepoint>(): dev.sargunv.mobilitydata.gtfs.schedule/Timepoint? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.timepoint.<get-timepoint>|<get-timepoint>(){}[0]
    final val tripId // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.tripId|{}tripId[0]
        final fun <get-tripId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.tripId.<get-tripId>|<get-tripId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component1|component1(){}[0]
    final fun component10(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component10|component10(){}[0]
    final fun component11(): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component11|component11(){}[0]
    final fun component12(): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component12|component12(){}[0]
    final fun component13(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component13|component13(){}[0]
    final fun component14(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component14|component14(){}[0]
    final fun component15(): kotlin/Double? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component15|component15(){}[0]
    final fun component16(): dev.sargunv.mobilitydata.gtfs.schedule/Timepoint? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component16|component16(){}[0]
    final fun component17(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component17|component17(){}[0]
    final fun component18(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component18|component18(){}[0]
    final fun component2(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component2|component2(){}[0]
    final fun component3(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component3|component3(){}[0]
    final fun component4(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component4|component4(){}[0]
    final fun component5(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component5|component5(){}[0]
    final fun component6(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component6|component6(){}[0]
    final fun component7(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component7|component7(){}[0]
    final fun component8(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component8|component8(){}[0]
    final fun component9(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Int = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff? = ..., dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff? = ..., dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? = ..., dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff? = ..., kotlin/Double? = ..., dev.sargunv.mobilitydata.gtfs.schedule/Timepoint? = ..., kotlin/String? = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gtfs.schedule/StopTime // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.copy|copy(kotlin.String;dev.sargunv.mobilitydata.utils.ServiceTime?;dev.sargunv.mobilitydata.utils.ServiceTime?;kotlin.String;kotlin.String?;kotlin.String?;kotlin.Int;kotlin.String?;dev.sargunv.mobilitydata.utils.ServiceTime?;dev.sargunv.mobilitydata.utils.ServiceTime?;dev.sargunv.mobilitydata.gtfs.schedule.PickupDropoff?;dev.sargunv.mobilitydata.gtfs.schedule.PickupDropoff?;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff?;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff?;kotlin.Double?;dev.sargunv.mobilitydata.gtfs.schedule.Timepoint?;kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/StopTime> { // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/StopTime // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/StopTime) // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.StopTime){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/StopTime> // dev.sargunv.mobilitydata.gtfs.schedule/StopTime.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/Timeframe { // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe|null[0]
    constructor <init>(kotlin/String, dev.sargunv.mobilitydata.utils/ServiceTime? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., kotlin/String) // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.<init>|<init>(kotlin.String;dev.sargunv.mobilitydata.utils.ServiceTime?;dev.sargunv.mobilitydata.utils.ServiceTime?;kotlin.String){}[0]

    final val endTime // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.endTime|{}endTime[0]
        final fun <get-endTime>(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.endTime.<get-endTime>|<get-endTime>(){}[0]
    final val serviceId // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.serviceId|{}serviceId[0]
        final fun <get-serviceId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.serviceId.<get-serviceId>|<get-serviceId>(){}[0]
    final val startTime // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.startTime|{}startTime[0]
        final fun <get-startTime>(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.startTime.<get-startTime>|<get-startTime>(){}[0]
    final val timeframeGroupId // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.timeframeGroupId|{}timeframeGroupId[0]
        final fun <get-timeframeGroupId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.timeframeGroupId.<get-timeframeGroupId>|<get-timeframeGroupId>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.component1|component1(){}[0]
    final fun component2(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.component2|component2(){}[0]
    final fun component3(): dev.sargunv.mobilitydata.utils/ServiceTime? // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.component3|component3(){}[0]
    final fun component4(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.component4|component4(){}[0]
    final fun copy(kotlin/String = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., dev.sargunv.mobilitydata.utils/ServiceTime? = ..., kotlin/String = ...): dev.sargunv.mobilitydata.gtfs.schedule/Timeframe // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.copy|copy(kotlin.String;dev.sargunv.mobilitydata.utils.ServiceTime?;dev.sargunv.mobilitydata.utils.ServiceTime?;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Timeframe> { // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Timeframe // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Timeframe) // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Timeframe){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Timeframe> // dev.sargunv.mobilitydata.gtfs.schedule/Timeframe.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/Transfer { // dev.sargunv.mobilitydata.gtfs.schedule/Transfer|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TransferType? = ..., kotlin.time/Duration? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.<init>|<init>(kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.TransferType?;kotlin.time.Duration?){}[0]

    final val fromRouteId // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.fromRouteId|{}fromRouteId[0]
        final fun <get-fromRouteId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.fromRouteId.<get-fromRouteId>|<get-fromRouteId>(){}[0]
    final val fromStopId // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.fromStopId|{}fromStopId[0]
        final fun <get-fromStopId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.fromStopId.<get-fromStopId>|<get-fromStopId>(){}[0]
    final val fromTripId // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.fromTripId|{}fromTripId[0]
        final fun <get-fromTripId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.fromTripId.<get-fromTripId>|<get-fromTripId>(){}[0]
    final val minTransferTime // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.minTransferTime|{}minTransferTime[0]
        final fun <get-minTransferTime>(): kotlin.time/Duration? // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.minTransferTime.<get-minTransferTime>|<get-minTransferTime>(){}[0]
    final val toRouteId // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.toRouteId|{}toRouteId[0]
        final fun <get-toRouteId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.toRouteId.<get-toRouteId>|<get-toRouteId>(){}[0]
    final val toStopId // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.toStopId|{}toStopId[0]
        final fun <get-toStopId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.toStopId.<get-toStopId>|<get-toStopId>(){}[0]
    final val toTripId // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.toTripId|{}toTripId[0]
        final fun <get-toTripId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.toTripId.<get-toTripId>|<get-toTripId>(){}[0]
    final val transferType // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.transferType|{}transferType[0]
        final fun <get-transferType>(): dev.sargunv.mobilitydata.gtfs.schedule/TransferType? // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.transferType.<get-transferType>|<get-transferType>(){}[0]

    final fun component1(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.component1|component1(){}[0]
    final fun component2(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.component2|component2(){}[0]
    final fun component3(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.component3|component3(){}[0]
    final fun component4(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.component4|component4(){}[0]
    final fun component5(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.component5|component5(){}[0]
    final fun component6(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.component6|component6(){}[0]
    final fun component7(): dev.sargunv.mobilitydata.gtfs.schedule/TransferType? // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.component7|component7(){}[0]
    final fun component8(): kotlin.time/Duration? // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.component8|component8(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TransferType? = ..., kotlin.time/Duration? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Transfer // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.copy|copy(kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.TransferType?;kotlin.time.Duration?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Transfer> { // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Transfer // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Transfer) // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Transfer){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Transfer> // dev.sargunv.mobilitydata.gtfs.schedule/Transfer.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/Translation { // dev.sargunv.mobilitydata.gtfs.schedule/Translation|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Translation.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?){}[0]

    final val fieldName // dev.sargunv.mobilitydata.gtfs.schedule/Translation.fieldName|{}fieldName[0]
        final fun <get-fieldName>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Translation.fieldName.<get-fieldName>|<get-fieldName>(){}[0]
    final val fieldValue // dev.sargunv.mobilitydata.gtfs.schedule/Translation.fieldValue|{}fieldValue[0]
        final fun <get-fieldValue>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Translation.fieldValue.<get-fieldValue>|<get-fieldValue>(){}[0]
    final val language // dev.sargunv.mobilitydata.gtfs.schedule/Translation.language|{}language[0]
        final fun <get-language>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Translation.language.<get-language>|<get-language>(){}[0]
    final val recordId // dev.sargunv.mobilitydata.gtfs.schedule/Translation.recordId|{}recordId[0]
        final fun <get-recordId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Translation.recordId.<get-recordId>|<get-recordId>(){}[0]
    final val recordSubId // dev.sargunv.mobilitydata.gtfs.schedule/Translation.recordSubId|{}recordSubId[0]
        final fun <get-recordSubId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Translation.recordSubId.<get-recordSubId>|<get-recordSubId>(){}[0]
    final val tableName // dev.sargunv.mobilitydata.gtfs.schedule/Translation.tableName|{}tableName[0]
        final fun <get-tableName>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Translation.tableName.<get-tableName>|<get-tableName>(){}[0]
    final val translation // dev.sargunv.mobilitydata.gtfs.schedule/Translation.translation|{}translation[0]
        final fun <get-translation>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Translation.translation.<get-translation>|<get-translation>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Translation.component1|component1(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Translation.component2|component2(){}[0]
    final fun component3(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Translation.component3|component3(){}[0]
    final fun component4(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Translation.component4|component4(){}[0]
    final fun component5(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Translation.component5|component5(){}[0]
    final fun component6(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Translation.component6|component6(){}[0]
    final fun component7(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Translation.component7|component7(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Translation // dev.sargunv.mobilitydata.gtfs.schedule/Translation.copy|copy(kotlin.String;kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Translation.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Translation.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Translation.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Translation> { // dev.sargunv.mobilitydata.gtfs.schedule/Translation.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Translation.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Translation.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Translation.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Translation // dev.sargunv.mobilitydata.gtfs.schedule/Translation.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Translation) // dev.sargunv.mobilitydata.gtfs.schedule/Translation.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Translation){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Translation.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Translation> // dev.sargunv.mobilitydata.gtfs.schedule/Translation.Companion.serializer|serializer(){}[0]
    }
}

final class dev.sargunv.mobilitydata.gtfs.schedule/Trip { // dev.sargunv.mobilitydata.gtfs.schedule/Trip|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/DirectionId? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ...) // dev.sargunv.mobilitydata.gtfs.schedule/Trip.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.DirectionId?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?){}[0]

    final val bikesAllowed // dev.sargunv.mobilitydata.gtfs.schedule/Trip.bikesAllowed|{}bikesAllowed[0]
        final fun <get-bikesAllowed>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.bikesAllowed.<get-bikesAllowed>|<get-bikesAllowed>(){}[0]
    final val blockId // dev.sargunv.mobilitydata.gtfs.schedule/Trip.blockId|{}blockId[0]
        final fun <get-blockId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.blockId.<get-blockId>|<get-blockId>(){}[0]
    final val carsAllowed // dev.sargunv.mobilitydata.gtfs.schedule/Trip.carsAllowed|{}carsAllowed[0]
        final fun <get-carsAllowed>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.carsAllowed.<get-carsAllowed>|<get-carsAllowed>(){}[0]
    final val directionId // dev.sargunv.mobilitydata.gtfs.schedule/Trip.directionId|{}directionId[0]
        final fun <get-directionId>(): dev.sargunv.mobilitydata.gtfs.schedule/DirectionId? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.directionId.<get-directionId>|<get-directionId>(){}[0]
    final val routeId // dev.sargunv.mobilitydata.gtfs.schedule/Trip.routeId|{}routeId[0]
        final fun <get-routeId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Trip.routeId.<get-routeId>|<get-routeId>(){}[0]
    final val serviceId // dev.sargunv.mobilitydata.gtfs.schedule/Trip.serviceId|{}serviceId[0]
        final fun <get-serviceId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Trip.serviceId.<get-serviceId>|<get-serviceId>(){}[0]
    final val shapeId // dev.sargunv.mobilitydata.gtfs.schedule/Trip.shapeId|{}shapeId[0]
        final fun <get-shapeId>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.shapeId.<get-shapeId>|<get-shapeId>(){}[0]
    final val tripHeadsign // dev.sargunv.mobilitydata.gtfs.schedule/Trip.tripHeadsign|{}tripHeadsign[0]
        final fun <get-tripHeadsign>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.tripHeadsign.<get-tripHeadsign>|<get-tripHeadsign>(){}[0]
    final val tripId // dev.sargunv.mobilitydata.gtfs.schedule/Trip.tripId|{}tripId[0]
        final fun <get-tripId>(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Trip.tripId.<get-tripId>|<get-tripId>(){}[0]
    final val tripShortName // dev.sargunv.mobilitydata.gtfs.schedule/Trip.tripShortName|{}tripShortName[0]
        final fun <get-tripShortName>(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.tripShortName.<get-tripShortName>|<get-tripShortName>(){}[0]
    final val wheelchairAccessible // dev.sargunv.mobilitydata.gtfs.schedule/Trip.wheelchairAccessible|{}wheelchairAccessible[0]
        final fun <get-wheelchairAccessible>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.wheelchairAccessible.<get-wheelchairAccessible>|<get-wheelchairAccessible>(){}[0]

    final fun component1(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component1|component1(){}[0]
    final fun component10(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component10|component10(){}[0]
    final fun component11(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component11|component11(){}[0]
    final fun component2(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component2|component2(){}[0]
    final fun component3(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component3|component3(){}[0]
    final fun component4(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component4|component4(){}[0]
    final fun component5(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component5|component5(){}[0]
    final fun component6(): dev.sargunv.mobilitydata.gtfs.schedule/DirectionId? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component6|component6(){}[0]
    final fun component7(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component7|component7(){}[0]
    final fun component8(): kotlin/String? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component8|component8(){}[0]
    final fun component9(): dev.sargunv.mobilitydata.gtfs.schedule/TriState? // dev.sargunv.mobilitydata.gtfs.schedule/Trip.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/DirectionId? = ..., kotlin/String? = ..., kotlin/String? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ..., dev.sargunv.mobilitydata.gtfs.schedule/TriState? = ...): dev.sargunv.mobilitydata.gtfs.schedule/Trip // dev.sargunv.mobilitydata.gtfs.schedule/Trip.copy|copy(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.DirectionId?;kotlin.String?;kotlin.String?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?;dev.sargunv.mobilitydata.gtfs.schedule.TriState?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Trip.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Trip.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Trip.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Trip> { // dev.sargunv.mobilitydata.gtfs.schedule/Trip.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Trip.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Trip.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Trip.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Trip // dev.sargunv.mobilitydata.gtfs.schedule/Trip.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Trip) // dev.sargunv.mobilitydata.gtfs.schedule/Trip.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Trip){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Trip.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Trip> // dev.sargunv.mobilitydata.gtfs.schedule/Trip.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/BookingType { // dev.sargunv.mobilitydata.gtfs.schedule/BookingType|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/BookingType> { // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/BookingType // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/BookingType) // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.BookingType){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.Companion|null[0]
        final val PriorDays // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.Companion.PriorDays|{}PriorDays[0]
            final fun <get-PriorDays>(): dev.sargunv.mobilitydata.gtfs.schedule/BookingType // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.Companion.PriorDays.<get-PriorDays>|<get-PriorDays>(){}[0]
        final val RealTime // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.Companion.RealTime|{}RealTime[0]
            final fun <get-RealTime>(): dev.sargunv.mobilitydata.gtfs.schedule/BookingType // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.Companion.RealTime.<get-RealTime>|<get-RealTime>(){}[0]
        final val SameDay // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.Companion.SameDay|{}SameDay[0]
            final fun <get-SameDay>(): dev.sargunv.mobilitydata.gtfs.schedule/BookingType // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.Companion.SameDay.<get-SameDay>|<get-SameDay>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/BookingType> // dev.sargunv.mobilitydata.gtfs.schedule/BookingType.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff { // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff> { // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff) // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.ContinuousPickupDropOff){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion|null[0]
        final val Continuous // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.Continuous|{}Continuous[0]
            final fun <get-Continuous>(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.Continuous.<get-Continuous>|<get-Continuous>(){}[0]
        final val CoordinateWithDriver // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.CoordinateWithDriver|{}CoordinateWithDriver[0]
            final fun <get-CoordinateWithDriver>(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.CoordinateWithDriver.<get-CoordinateWithDriver>|<get-CoordinateWithDriver>(){}[0]
        final val NoContinuous // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.NoContinuous|{}NoContinuous[0]
            final fun <get-NoContinuous>(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.NoContinuous.<get-NoContinuous>|<get-NoContinuous>(){}[0]
        final val PhoneAgency // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.PhoneAgency|{}PhoneAgency[0]
            final fun <get-PhoneAgency>(): dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.PhoneAgency.<get-PhoneAgency>|<get-PhoneAgency>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff> // dev.sargunv.mobilitydata.gtfs.schedule/ContinuousPickupDropOff.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/DirectionId { // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/DirectionId> { // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/DirectionId // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/DirectionId) // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.DirectionId){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.Companion|null[0]
        final val OtherWay // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.Companion.OtherWay|{}OtherWay[0]
            final fun <get-OtherWay>(): dev.sargunv.mobilitydata.gtfs.schedule/DirectionId // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.Companion.OtherWay.<get-OtherWay>|<get-OtherWay>(){}[0]
        final val ThatWay // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.Companion.ThatWay|{}ThatWay[0]
            final fun <get-ThatWay>(): dev.sargunv.mobilitydata.gtfs.schedule/DirectionId // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.Companion.ThatWay.<get-ThatWay>|<get-ThatWay>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/DirectionId> // dev.sargunv.mobilitydata.gtfs.schedule/DirectionId.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType { // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType> { // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType) // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.DurationLimitType){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.Companion|null[0]
        final val ArrivalToArrival // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.Companion.ArrivalToArrival|{}ArrivalToArrival[0]
            final fun <get-ArrivalToArrival>(): dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.Companion.ArrivalToArrival.<get-ArrivalToArrival>|<get-ArrivalToArrival>(){}[0]
        final val ArrivalToDeparture // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.Companion.ArrivalToDeparture|{}ArrivalToDeparture[0]
            final fun <get-ArrivalToDeparture>(): dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.Companion.ArrivalToDeparture.<get-ArrivalToDeparture>|<get-ArrivalToDeparture>(){}[0]
        final val DepartureToArrival // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.Companion.DepartureToArrival|{}DepartureToArrival[0]
            final fun <get-DepartureToArrival>(): dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.Companion.DepartureToArrival.<get-DepartureToArrival>|<get-DepartureToArrival>(){}[0]
        final val DepartureToDeparture // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.Companion.DepartureToDeparture|{}DepartureToDeparture[0]
            final fun <get-DepartureToDeparture>(): dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.Companion.DepartureToDeparture.<get-DepartureToDeparture>|<get-DepartureToDeparture>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType> // dev.sargunv.mobilitydata.gtfs.schedule/DurationLimitType.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType { // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType> { // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType) // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.FareMediaType){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.Companion|null[0]
        final val MobileApp // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.Companion.MobileApp|{}MobileApp[0]
            final fun <get-MobileApp>(): dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.Companion.MobileApp.<get-MobileApp>|<get-MobileApp>(){}[0]
        final val None // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.Companion.None|{}None[0]
            final fun <get-None>(): dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.Companion.None.<get-None>|<get-None>(){}[0]
        final val PhysicalPaperTicket // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.Companion.PhysicalPaperTicket|{}PhysicalPaperTicket[0]
            final fun <get-PhysicalPaperTicket>(): dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.Companion.PhysicalPaperTicket.<get-PhysicalPaperTicket>|<get-PhysicalPaperTicket>(){}[0]
        final val PhysicalTransitCard // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.Companion.PhysicalTransitCard|{}PhysicalTransitCard[0]
            final fun <get-PhysicalTransitCard>(): dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.Companion.PhysicalTransitCard.<get-PhysicalTransitCard>|<get-PhysicalTransitCard>(){}[0]
        final val cEMV // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.Companion.cEMV|{}cEMV[0]
            final fun <get-cEMV>(): dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.Companion.cEMV.<get-cEMV>|<get-cEMV>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType> // dev.sargunv.mobilitydata.gtfs.schedule/FareMediaType.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType { // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType> { // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType) // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.FareTransferType){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.Companion|null[0]
        final val FromLegPlusTransfer // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.Companion.FromLegPlusTransfer|{}FromLegPlusTransfer[0]
            final fun <get-FromLegPlusTransfer>(): dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.Companion.FromLegPlusTransfer.<get-FromLegPlusTransfer>|<get-FromLegPlusTransfer>(){}[0]
        final val FromLegPlusTransferPlusToLeg // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.Companion.FromLegPlusTransferPlusToLeg|{}FromLegPlusTransferPlusToLeg[0]
            final fun <get-FromLegPlusTransferPlusToLeg>(): dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.Companion.FromLegPlusTransferPlusToLeg.<get-FromLegPlusTransferPlusToLeg>|<get-FromLegPlusTransferPlusToLeg>(){}[0]
        final val TransferOnly // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.Companion.TransferOnly|{}TransferOnly[0]
            final fun <get-TransferOnly>(): dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.Companion.TransferOnly.<get-TransferOnly>|<get-TransferOnly>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType> // dev.sargunv.mobilitydata.gtfs.schedule/FareTransferType.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/LocationType { // dev.sargunv.mobilitydata.gtfs.schedule/LocationType|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/LocationType> { // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/LocationType // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/LocationType) // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.LocationType){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion|null[0]
        final val BoardingArea // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.BoardingArea|{}BoardingArea[0]
            final fun <get-BoardingArea>(): dev.sargunv.mobilitydata.gtfs.schedule/LocationType // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.BoardingArea.<get-BoardingArea>|<get-BoardingArea>(){}[0]
        final val EntranceOrExit // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.EntranceOrExit|{}EntranceOrExit[0]
            final fun <get-EntranceOrExit>(): dev.sargunv.mobilitydata.gtfs.schedule/LocationType // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.EntranceOrExit.<get-EntranceOrExit>|<get-EntranceOrExit>(){}[0]
        final val GenericNode // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.GenericNode|{}GenericNode[0]
            final fun <get-GenericNode>(): dev.sargunv.mobilitydata.gtfs.schedule/LocationType // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.GenericNode.<get-GenericNode>|<get-GenericNode>(){}[0]
        final val Station // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.Station|{}Station[0]
            final fun <get-Station>(): dev.sargunv.mobilitydata.gtfs.schedule/LocationType // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.Station.<get-Station>|<get-Station>(){}[0]
        final val Stop // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.Stop|{}Stop[0]
            final fun <get-Stop>(): dev.sargunv.mobilitydata.gtfs.schedule/LocationType // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.Stop.<get-Stop>|<get-Stop>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/LocationType> // dev.sargunv.mobilitydata.gtfs.schedule/LocationType.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/OverrideType { // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/OverrideType> { // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/OverrideType // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/OverrideType) // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.OverrideType){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.Companion|null[0]
        final val ServiceAdded // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.Companion.ServiceAdded|{}ServiceAdded[0]
            final fun <get-ServiceAdded>(): dev.sargunv.mobilitydata.gtfs.schedule/OverrideType // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.Companion.ServiceAdded.<get-ServiceAdded>|<get-ServiceAdded>(){}[0]
        final val ServiceRemoved // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.Companion.ServiceRemoved|{}ServiceRemoved[0]
            final fun <get-ServiceRemoved>(): dev.sargunv.mobilitydata.gtfs.schedule/OverrideType // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.Companion.ServiceRemoved.<get-ServiceRemoved>|<get-ServiceRemoved>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/OverrideType> // dev.sargunv.mobilitydata.gtfs.schedule/OverrideType.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode { // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode> { // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode) // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.PathwayMode){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.Companion|null[0]
        final val Elevator // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.Companion.Elevator|{}Elevator[0]
            final fun <get-Elevator>(): dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.Companion.Elevator.<get-Elevator>|<get-Elevator>(){}[0]
        final val Escalator // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.Companion.Escalator|{}Escalator[0]
            final fun <get-Escalator>(): dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.Companion.Escalator.<get-Escalator>|<get-Escalator>(){}[0]
        final val ExitGate // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.Companion.ExitGate|{}ExitGate[0]
            final fun <get-ExitGate>(): dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.Companion.ExitGate.<get-ExitGate>|<get-ExitGate>(){}[0]
        final val FareGate // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.Companion.FareGate|{}FareGate[0]
            final fun <get-FareGate>(): dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.Companion.FareGate.<get-FareGate>|<get-FareGate>(){}[0]
        final val MovingSidewalk // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.Companion.MovingSidewalk|{}MovingSidewalk[0]
            final fun <get-MovingSidewalk>(): dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.Companion.MovingSidewalk.<get-MovingSidewalk>|<get-MovingSidewalk>(){}[0]
        final val Stairs // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.Companion.Stairs|{}Stairs[0]
            final fun <get-Stairs>(): dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.Companion.Stairs.<get-Stairs>|<get-Stairs>(){}[0]
        final val Walkway // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.Companion.Walkway|{}Walkway[0]
            final fun <get-Walkway>(): dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.Companion.Walkway.<get-Walkway>|<get-Walkway>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode> // dev.sargunv.mobilitydata.gtfs.schedule/PathwayMode.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod { // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod> { // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod) // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.PaymentMethod){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.Companion|null[0]
        final val BeforeBoarding // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.Companion.BeforeBoarding|{}BeforeBoarding[0]
            final fun <get-BeforeBoarding>(): dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.Companion.BeforeBoarding.<get-BeforeBoarding>|<get-BeforeBoarding>(){}[0]
        final val OnBoard // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.Companion.OnBoard|{}OnBoard[0]
            final fun <get-OnBoard>(): dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.Companion.OnBoard.<get-OnBoard>|<get-OnBoard>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod> // dev.sargunv.mobilitydata.gtfs.schedule/PaymentMethod.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff { // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff> { // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff) // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.PickupDropoff){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion|null[0]
        final val CoordinateWithDriver // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.CoordinateWithDriver|{}CoordinateWithDriver[0]
            final fun <get-CoordinateWithDriver>(): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.CoordinateWithDriver.<get-CoordinateWithDriver>|<get-CoordinateWithDriver>(){}[0]
        final val None // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.None|{}None[0]
            final fun <get-None>(): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.None.<get-None>|<get-None>(){}[0]
        final val PhoneAgency // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.PhoneAgency|{}PhoneAgency[0]
            final fun <get-PhoneAgency>(): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.PhoneAgency.<get-PhoneAgency>|<get-PhoneAgency>(){}[0]
        final val Regular // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.Regular|{}Regular[0]
            final fun <get-Regular>(): dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.Regular.<get-Regular>|<get-Regular>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff> // dev.sargunv.mobilitydata.gtfs.schedule/PickupDropoff.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/RouteType { // dev.sargunv.mobilitydata.gtfs.schedule/RouteType|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/RouteType> { // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/RouteType) // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.RouteType){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion|null[0]
        final val AerialLift // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.AerialLift|{}AerialLift[0]
            final fun <get-AerialLift>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.AerialLift.<get-AerialLift>|<get-AerialLift>(){}[0]
        final val Bus // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Bus|{}Bus[0]
            final fun <get-Bus>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Bus.<get-Bus>|<get-Bus>(){}[0]
        final val CableTram // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.CableTram|{}CableTram[0]
            final fun <get-CableTram>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.CableTram.<get-CableTram>|<get-CableTram>(){}[0]
        final val Ferry // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Ferry|{}Ferry[0]
            final fun <get-Ferry>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Ferry.<get-Ferry>|<get-Ferry>(){}[0]
        final val Funicular // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Funicular|{}Funicular[0]
            final fun <get-Funicular>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Funicular.<get-Funicular>|<get-Funicular>(){}[0]
        final val Monorail // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Monorail|{}Monorail[0]
            final fun <get-Monorail>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Monorail.<get-Monorail>|<get-Monorail>(){}[0]
        final val Rail // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Rail|{}Rail[0]
            final fun <get-Rail>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Rail.<get-Rail>|<get-Rail>(){}[0]
        final val Subway // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Subway|{}Subway[0]
            final fun <get-Subway>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Subway.<get-Subway>|<get-Subway>(){}[0]
        final val Tram // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Tram|{}Tram[0]
            final fun <get-Tram>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Tram.<get-Tram>|<get-Tram>(){}[0]
        final val Trolleybus // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Trolleybus|{}Trolleybus[0]
            final fun <get-Trolleybus>(): dev.sargunv.mobilitydata.gtfs.schedule/RouteType // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.Trolleybus.<get-Trolleybus>|<get-Trolleybus>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/RouteType> // dev.sargunv.mobilitydata.gtfs.schedule/RouteType.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/StopAccess { // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/StopAccess> { // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/StopAccess // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/StopAccess) // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.StopAccess){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.Companion|null[0]
        final val Direct // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.Companion.Direct|{}Direct[0]
            final fun <get-Direct>(): dev.sargunv.mobilitydata.gtfs.schedule/StopAccess // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.Companion.Direct.<get-Direct>|<get-Direct>(){}[0]
        final val Indirect // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.Companion.Indirect|{}Indirect[0]
            final fun <get-Indirect>(): dev.sargunv.mobilitydata.gtfs.schedule/StopAccess // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.Companion.Indirect.<get-Indirect>|<get-Indirect>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/StopAccess> // dev.sargunv.mobilitydata.gtfs.schedule/StopAccess.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/Timepoint { // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Timepoint> { // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/Timepoint // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/Timepoint) // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.Timepoint){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.Companion|null[0]
        final val Approximate // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.Companion.Approximate|{}Approximate[0]
            final fun <get-Approximate>(): dev.sargunv.mobilitydata.gtfs.schedule/Timepoint // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.Companion.Approximate.<get-Approximate>|<get-Approximate>(){}[0]
        final val Exact // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.Companion.Exact|{}Exact[0]
            final fun <get-Exact>(): dev.sargunv.mobilitydata.gtfs.schedule/Timepoint // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.Companion.Exact.<get-Exact>|<get-Exact>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/Timepoint> // dev.sargunv.mobilitydata.gtfs.schedule/Timepoint.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/TransferType { // dev.sargunv.mobilitydata.gtfs.schedule/TransferType|null[0]
    final val value // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/TransferType> { // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/TransferType // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/TransferType) // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.TransferType){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.Companion|null[0]
        final val InSeat // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.Companion.InSeat|{}InSeat[0]
            final fun <get-InSeat>(): dev.sargunv.mobilitydata.gtfs.schedule/TransferType // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.Companion.InSeat.<get-InSeat>|<get-InSeat>(){}[0]
        final val MinimumTime // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.Companion.MinimumTime|{}MinimumTime[0]
            final fun <get-MinimumTime>(): dev.sargunv.mobilitydata.gtfs.schedule/TransferType // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.Companion.MinimumTime.<get-MinimumTime>|<get-MinimumTime>(){}[0]
        final val NotInSeat // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.Companion.NotInSeat|{}NotInSeat[0]
            final fun <get-NotInSeat>(): dev.sargunv.mobilitydata.gtfs.schedule/TransferType // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.Companion.NotInSeat.<get-NotInSeat>|<get-NotInSeat>(){}[0]
        final val NotPossible // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.Companion.NotPossible|{}NotPossible[0]
            final fun <get-NotPossible>(): dev.sargunv.mobilitydata.gtfs.schedule/TransferType // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.Companion.NotPossible.<get-NotPossible>|<get-NotPossible>(){}[0]
        final val Recommended // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.Companion.Recommended|{}Recommended[0]
            final fun <get-Recommended>(): dev.sargunv.mobilitydata.gtfs.schedule/TransferType // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.Companion.Recommended.<get-Recommended>|<get-Recommended>(){}[0]
        final val Timed // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.Companion.Timed|{}Timed[0]
            final fun <get-Timed>(): dev.sargunv.mobilitydata.gtfs.schedule/TransferType // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.Companion.Timed.<get-Timed>|<get-Timed>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/TransferType> // dev.sargunv.mobilitydata.gtfs.schedule/TransferType.Companion.serializer|serializer(){}[0]
    }
}

final value class dev.sargunv.mobilitydata.gtfs.schedule/TriState { // dev.sargunv.mobilitydata.gtfs.schedule/TriState|null[0]
    constructor <init>(kotlin/Int) // dev.sargunv.mobilitydata.gtfs.schedule/TriState.<init>|<init>(kotlin.Int){}[0]

    final val value // dev.sargunv.mobilitydata.gtfs.schedule/TriState.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/TriState.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // dev.sargunv.mobilitydata.gtfs.schedule/TriState.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // dev.sargunv.mobilitydata.gtfs.schedule/TriState.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // dev.sargunv.mobilitydata.gtfs.schedule/TriState.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<dev.sargunv.mobilitydata.gtfs.schedule/TriState> { // dev.sargunv.mobilitydata.gtfs.schedule/TriState.$serializer|null[0]
        final val descriptor // dev.sargunv.mobilitydata.gtfs.schedule/TriState.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // dev.sargunv.mobilitydata.gtfs.schedule/TriState.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // dev.sargunv.mobilitydata.gtfs.schedule/TriState.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): dev.sargunv.mobilitydata.gtfs.schedule/TriState // dev.sargunv.mobilitydata.gtfs.schedule/TriState.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, dev.sargunv.mobilitydata.gtfs.schedule/TriState) // dev.sargunv.mobilitydata.gtfs.schedule/TriState.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;dev.sargunv.mobilitydata.gtfs.schedule.TriState){}[0]
    }

    final object Companion { // dev.sargunv.mobilitydata.gtfs.schedule/TriState.Companion|null[0]
        final val No // dev.sargunv.mobilitydata.gtfs.schedule/TriState.Companion.No|{}No[0]
            final fun <get-No>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState // dev.sargunv.mobilitydata.gtfs.schedule/TriState.Companion.No.<get-No>|<get-No>(){}[0]
        final val Unknown // dev.sargunv.mobilitydata.gtfs.schedule/TriState.Companion.Unknown|{}Unknown[0]
            final fun <get-Unknown>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState // dev.sargunv.mobilitydata.gtfs.schedule/TriState.Companion.Unknown.<get-Unknown>|<get-Unknown>(){}[0]
        final val Yes // dev.sargunv.mobilitydata.gtfs.schedule/TriState.Companion.Yes|{}Yes[0]
            final fun <get-Yes>(): dev.sargunv.mobilitydata.gtfs.schedule/TriState // dev.sargunv.mobilitydata.gtfs.schedule/TriState.Companion.Yes.<get-Yes>|<get-Yes>(){}[0]

        final fun serializer(): kotlinx.serialization/KSerializer<dev.sargunv.mobilitydata.gtfs.schedule/TriState> // dev.sargunv.mobilitydata.gtfs.schedule/TriState.Companion.serializer|serializer(){}[0]
    }
}

final val dev.sargunv.mobilitydata.gtfs.schedule/GtfsCsv // dev.sargunv.mobilitydata.gtfs.schedule/GtfsCsv|{}GtfsCsv[0]
    final fun <get-GtfsCsv>(): dev.sargunv.kotlindsv/DsvFormat // dev.sargunv.mobilitydata.gtfs.schedule/GtfsCsv.<get-GtfsCsv>|<get-GtfsCsv>(){}[0]
